// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event/event.proto

/*
Package event is a generated protocol buffer package.

It is generated from these files:
	event/event.proto

It has these top-level messages:
	Event
	LongTermBoostEvent
	RelationshipEvent
	MomentLikeEvent
	MomentCommentEvent
	MomentEvent
	ReportEvent
	UserEvent
	DeviceEvent
	BuildInfoEvent
	MatchEvent
	MessageEvent
	BlockEvent
	FriendshipEvent
	VoteEvent
	VerificationEvent
	ScenarioUserCounterEvent
	UserActivityEvent
	UserStatusEvent
	UserLinkEvent
	ConversationEvent
	ContactEvent
	PopularityEvent
	UserVerificationEvent
*/
package event

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import user6 "github.com/p1cn/tantan-domain-schema/golang/user"
import user1 "github.com/p1cn/tantan-domain-schema/golang/user"
import user7 "github.com/p1cn/tantan-domain-schema/golang/user"
import user5 "github.com/p1cn/tantan-domain-schema/golang/user"
import user8 "github.com/p1cn/tantan-domain-schema/golang/user"
import device "github.com/p1cn/tantan-domain-schema/golang/device"
import moment1 "github.com/p1cn/tantan-domain-schema/golang/moment"
import moment2 "github.com/p1cn/tantan-domain-schema/golang/moment"
import moment3 "github.com/p1cn/tantan-domain-schema/golang/moment"
import feedback "github.com/p1cn/tantan-domain-schema/golang/feedback"
import relationship "github.com/p1cn/tantan-domain-schema/golang/relationship"
import relationship1 "github.com/p1cn/tantan-domain-schema/golang/relationship"
import common1 "github.com/p1cn/tantan-domain-schema/golang/common"
import common2 "github.com/p1cn/tantan-domain-schema/golang/common"
import common3 "github.com/p1cn/tantan-domain-schema/golang/common"
import relationship2 "github.com/p1cn/tantan-domain-schema/golang/relationship"
import common4 "github.com/p1cn/tantan-domain-schema/golang/common"
import common5 "github.com/p1cn/tantan-domain-schema/golang/common"
import common7 "github.com/p1cn/tantan-domain-schema/golang/common"
import chat "github.com/p1cn/tantan-domain-schema/golang/chat"
import chat2 "github.com/p1cn/tantan-domain-schema/golang/chat"
import contact "github.com/p1cn/tantan-domain-schema/golang/contact"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event struct {
	Context             *common5.Context          `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Topic               string                    `protobuf:"bytes,2,opt,name=topic" json:"topic,omitempty"`
	User                *UserEvent                `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	Device              *DeviceEvent              `protobuf:"bytes,5,opt,name=device" json:"device,omitempty"`
	Match               *MatchEvent               `protobuf:"bytes,6,opt,name=match" json:"match,omitempty"`
	Message             *MessageEvent             `protobuf:"bytes,7,opt,name=message" json:"message,omitempty"`
	Block               *BlockEvent               `protobuf:"bytes,8,opt,name=block" json:"block,omitempty"`
	Friendship          *FriendshipEvent          `protobuf:"bytes,9,opt,name=friendship" json:"friendship,omitempty"`
	Vote                *VoteEvent                `protobuf:"bytes,10,opt,name=vote" json:"vote,omitempty"`
	Verification        *VerificationEvent        `protobuf:"bytes,11,opt,name=verification" json:"verification,omitempty"`
	Moment              *MomentEvent              `protobuf:"bytes,12,opt,name=moment" json:"moment,omitempty"`
	MomentLike          *MomentLikeEvent          `protobuf:"bytes,13,opt,name=momentLike" json:"momentLike,omitempty"`
	Relationship        *RelationshipEvent        `protobuf:"bytes,14,opt,name=relationship" json:"relationship,omitempty"`
	ScenarioUserCounter *ScenarioUserCounterEvent `protobuf:"bytes,16,opt,name=scenarioUserCounter" json:"scenarioUserCounter,omitempty"`
	Report              *ReportEvent              `protobuf:"bytes,19,opt,name=report" json:"report,omitempty"`
	UserActivity        *UserActivityEvent        `protobuf:"bytes,20,opt,name=userActivity" json:"userActivity,omitempty"`
	UserStatus          *UserStatusEvent          `protobuf:"bytes,21,opt,name=userStatus" json:"userStatus,omitempty"`
	UserLink            *UserLinkEvent            `protobuf:"bytes,22,opt,name=userLink" json:"userLink,omitempty"`
	BuildInfo           *BuildInfoEvent           `protobuf:"bytes,23,opt,name=buildInfo" json:"buildInfo,omitempty"`
	Conversation        *ConversationEvent        `protobuf:"bytes,24,opt,name=conversation" json:"conversation,omitempty"`
	Contact             *ContactEvent             `protobuf:"bytes,25,opt,name=contact" json:"contact,omitempty"`
	Popularity          *PopularityEvent          `protobuf:"bytes,26,opt,name=popularity" json:"popularity,omitempty"`
	MomentComment       *MomentCommentEvent       `protobuf:"bytes,27,opt,name=momentComment" json:"momentComment,omitempty"`
	LongTermBoost       *LongTermBoostEvent       `protobuf:"bytes,28,opt,name=longTermBoost" json:"longTermBoost,omitempty"`
	UserVerification    *UserVerificationEvent    `protobuf:"bytes,29,opt,name=userVerification" json:"userVerification,omitempty"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Event) GetContext() *common5.Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Event) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Event) GetUser() *UserEvent {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Event) GetDevice() *DeviceEvent {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *Event) GetMatch() *MatchEvent {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *Event) GetMessage() *MessageEvent {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Event) GetBlock() *BlockEvent {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *Event) GetFriendship() *FriendshipEvent {
	if m != nil {
		return m.Friendship
	}
	return nil
}

func (m *Event) GetVote() *VoteEvent {
	if m != nil {
		return m.Vote
	}
	return nil
}

func (m *Event) GetVerification() *VerificationEvent {
	if m != nil {
		return m.Verification
	}
	return nil
}

func (m *Event) GetMoment() *MomentEvent {
	if m != nil {
		return m.Moment
	}
	return nil
}

func (m *Event) GetMomentLike() *MomentLikeEvent {
	if m != nil {
		return m.MomentLike
	}
	return nil
}

func (m *Event) GetRelationship() *RelationshipEvent {
	if m != nil {
		return m.Relationship
	}
	return nil
}

func (m *Event) GetScenarioUserCounter() *ScenarioUserCounterEvent {
	if m != nil {
		return m.ScenarioUserCounter
	}
	return nil
}

func (m *Event) GetReport() *ReportEvent {
	if m != nil {
		return m.Report
	}
	return nil
}

func (m *Event) GetUserActivity() *UserActivityEvent {
	if m != nil {
		return m.UserActivity
	}
	return nil
}

func (m *Event) GetUserStatus() *UserStatusEvent {
	if m != nil {
		return m.UserStatus
	}
	return nil
}

func (m *Event) GetUserLink() *UserLinkEvent {
	if m != nil {
		return m.UserLink
	}
	return nil
}

func (m *Event) GetBuildInfo() *BuildInfoEvent {
	if m != nil {
		return m.BuildInfo
	}
	return nil
}

func (m *Event) GetConversation() *ConversationEvent {
	if m != nil {
		return m.Conversation
	}
	return nil
}

func (m *Event) GetContact() *ContactEvent {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Event) GetPopularity() *PopularityEvent {
	if m != nil {
		return m.Popularity
	}
	return nil
}

func (m *Event) GetMomentComment() *MomentCommentEvent {
	if m != nil {
		return m.MomentComment
	}
	return nil
}

func (m *Event) GetLongTermBoost() *LongTermBoostEvent {
	if m != nil {
		return m.LongTermBoost
	}
	return nil
}

func (m *Event) GetUserVerification() *UserVerificationEvent {
	if m != nil {
		return m.UserVerification
	}
	return nil
}

type LongTermBoostEvent struct {
	UserId                int32 `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	BoostBadgeExpiredTime int64 `protobuf:"varint,2,opt,name=BoostBadgeExpiredTime" json:"BoostBadgeExpiredTime,omitempty"`
	BoostBadgeLevel       int32 `protobuf:"varint,3,opt,name=BoostBadgeLevel" json:"BoostBadgeLevel,omitempty"`
}

func (m *LongTermBoostEvent) Reset()                    { *m = LongTermBoostEvent{} }
func (m *LongTermBoostEvent) String() string            { return proto.CompactTextString(m) }
func (*LongTermBoostEvent) ProtoMessage()               {}
func (*LongTermBoostEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LongTermBoostEvent) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *LongTermBoostEvent) GetBoostBadgeExpiredTime() int64 {
	if m != nil {
		return m.BoostBadgeExpiredTime
	}
	return 0
}

func (m *LongTermBoostEvent) GetBoostBadgeLevel() int32 {
	if m != nil {
		return m.BoostBadgeLevel
	}
	return 0
}

type RelationshipEvent struct {
	Action *common7.Action                   `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *relationship2.RelationshipUpdate `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
	Old    *relationship2.RelationshipUpdate `protobuf:"bytes,3,opt,name=old" json:"old,omitempty"`
	SeqId1 uint64                            `protobuf:"varint,4,opt,name=seqId1" json:"seqId1,omitempty"`
	SeqId2 uint64                            `protobuf:"varint,5,opt,name=seqId2" json:"seqId2,omitempty"`
}

func (m *RelationshipEvent) Reset()                    { *m = RelationshipEvent{} }
func (m *RelationshipEvent) String() string            { return proto.CompactTextString(m) }
func (*RelationshipEvent) ProtoMessage()               {}
func (*RelationshipEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RelationshipEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *RelationshipEvent) GetNew() *relationship2.RelationshipUpdate {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *RelationshipEvent) GetOld() *relationship2.RelationshipUpdate {
	if m != nil {
		return m.Old
	}
	return nil
}

func (m *RelationshipEvent) GetSeqId1() uint64 {
	if m != nil {
		return m.SeqId1
	}
	return 0
}

func (m *RelationshipEvent) GetSeqId2() uint64 {
	if m != nil {
		return m.SeqId2
	}
	return 0
}

type MomentLikeEvent struct {
	Action *common7.Action     `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *moment2.MomentLike `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
	Old    *moment2.MomentLike `protobuf:"bytes,3,opt,name=old" json:"old,omitempty"`
}

func (m *MomentLikeEvent) Reset()                    { *m = MomentLikeEvent{} }
func (m *MomentLikeEvent) String() string            { return proto.CompactTextString(m) }
func (*MomentLikeEvent) ProtoMessage()               {}
func (*MomentLikeEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MomentLikeEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *MomentLikeEvent) GetNew() *moment2.MomentLike {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *MomentLikeEvent) GetOld() *moment2.MomentLike {
	if m != nil {
		return m.Old
	}
	return nil
}

type MomentCommentEvent struct {
	Action *common7.Action        `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *moment3.MomentComment `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
	Old    *moment3.MomentComment `protobuf:"bytes,3,opt,name=old" json:"old,omitempty"`
}

func (m *MomentCommentEvent) Reset()                    { *m = MomentCommentEvent{} }
func (m *MomentCommentEvent) String() string            { return proto.CompactTextString(m) }
func (*MomentCommentEvent) ProtoMessage()               {}
func (*MomentCommentEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MomentCommentEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *MomentCommentEvent) GetNew() *moment3.MomentComment {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *MomentCommentEvent) GetOld() *moment3.MomentComment {
	if m != nil {
		return m.Old
	}
	return nil
}

type MomentEvent struct {
	Action *common7.Action `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *moment1.Moment `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
	Old    *moment1.Moment `protobuf:"bytes,3,opt,name=old" json:"old,omitempty"`
}

func (m *MomentEvent) Reset()                    { *m = MomentEvent{} }
func (m *MomentEvent) String() string            { return proto.CompactTextString(m) }
func (*MomentEvent) ProtoMessage()               {}
func (*MomentEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *MomentEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *MomentEvent) GetNew() *moment1.Moment {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *MomentEvent) GetOld() *moment1.Moment {
	if m != nil {
		return m.Old
	}
	return nil
}

type ReportEvent struct {
	Action *common7.Action  `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *feedback.Report `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
}

func (m *ReportEvent) Reset()                    { *m = ReportEvent{} }
func (m *ReportEvent) String() string            { return proto.CompactTextString(m) }
func (*ReportEvent) ProtoMessage()               {}
func (*ReportEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ReportEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *ReportEvent) GetNew() *feedback.Report {
	if m != nil {
		return m.New
	}
	return nil
}

type UserEvent struct {
	Action *common7.Action `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *user6.User     `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
	Old    *user6.User     `protobuf:"bytes,3,opt,name=old" json:"old,omitempty"`
}

func (m *UserEvent) Reset()                    { *m = UserEvent{} }
func (m *UserEvent) String() string            { return proto.CompactTextString(m) }
func (*UserEvent) ProtoMessage()               {}
func (*UserEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UserEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *UserEvent) GetNew() *user6.User {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *UserEvent) GetOld() *user6.User {
	if m != nil {
		return m.Old
	}
	return nil
}

type DeviceEvent struct {
	Action *common7.Action `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *device.Device  `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
	Old    *device.Device  `protobuf:"bytes,3,opt,name=old" json:"old,omitempty"`
}

func (m *DeviceEvent) Reset()                    { *m = DeviceEvent{} }
func (m *DeviceEvent) String() string            { return proto.CompactTextString(m) }
func (*DeviceEvent) ProtoMessage()               {}
func (*DeviceEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeviceEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *DeviceEvent) GetNew() *device.Device {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *DeviceEvent) GetOld() *device.Device {
	if m != nil {
		return m.Old
	}
	return nil
}

type BuildInfoEvent struct {
	New *device.BuildInfo `protobuf:"bytes,1,opt,name=new" json:"new,omitempty"`
}

func (m *BuildInfoEvent) Reset()                    { *m = BuildInfoEvent{} }
func (m *BuildInfoEvent) String() string            { return proto.CompactTextString(m) }
func (*BuildInfoEvent) ProtoMessage()               {}
func (*BuildInfoEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *BuildInfoEvent) GetNew() *device.BuildInfo {
	if m != nil {
		return m.New
	}
	return nil
}

type MatchEvent struct {
	Action *common7.Action     `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *relationship.Match `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
}

func (m *MatchEvent) Reset()                    { *m = MatchEvent{} }
func (m *MatchEvent) String() string            { return proto.CompactTextString(m) }
func (*MatchEvent) ProtoMessage()               {}
func (*MatchEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *MatchEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *MatchEvent) GetNew() *relationship.Match {
	if m != nil {
		return m.New
	}
	return nil
}

type MessageEvent struct {
	Action *common7.Action `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *chat2.Message  `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
	Old    *chat2.Message  `protobuf:"bytes,3,opt,name=old" json:"old,omitempty"`
}

func (m *MessageEvent) Reset()                    { *m = MessageEvent{} }
func (m *MessageEvent) String() string            { return proto.CompactTextString(m) }
func (*MessageEvent) ProtoMessage()               {}
func (*MessageEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *MessageEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *MessageEvent) GetNew() *chat2.Message {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *MessageEvent) GetOld() *chat2.Message {
	if m != nil {
		return m.Old
	}
	return nil
}

type BlockEvent struct {
	Action *common7.Action      `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *relationship1.Block `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
}

func (m *BlockEvent) Reset()                    { *m = BlockEvent{} }
func (m *BlockEvent) String() string            { return proto.CompactTextString(m) }
func (*BlockEvent) ProtoMessage()               {}
func (*BlockEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *BlockEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *BlockEvent) GetNew() *relationship1.Block {
	if m != nil {
		return m.New
	}
	return nil
}

type FriendshipEvent struct {
	Action *common7.Action     `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *common1.Friendship `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
	Old    *common1.Friendship `protobuf:"bytes,3,opt,name=old" json:"old,omitempty"`
}

func (m *FriendshipEvent) Reset()                    { *m = FriendshipEvent{} }
func (m *FriendshipEvent) String() string            { return proto.CompactTextString(m) }
func (*FriendshipEvent) ProtoMessage()               {}
func (*FriendshipEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *FriendshipEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *FriendshipEvent) GetNew() *common1.Friendship {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *FriendshipEvent) GetOld() *common1.Friendship {
	if m != nil {
		return m.Old
	}
	return nil
}

type VoteEvent struct {
	Action *common7.Action `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *common2.Vote   `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
}

func (m *VoteEvent) Reset()                    { *m = VoteEvent{} }
func (m *VoteEvent) String() string            { return proto.CompactTextString(m) }
func (*VoteEvent) ProtoMessage()               {}
func (*VoteEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *VoteEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *VoteEvent) GetNew() *common2.Vote {
	if m != nil {
		return m.New
	}
	return nil
}

type VerificationEvent struct {
	Action *common7.Action       `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *common3.Verification `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
}

func (m *VerificationEvent) Reset()                    { *m = VerificationEvent{} }
func (m *VerificationEvent) String() string            { return proto.CompactTextString(m) }
func (*VerificationEvent) ProtoMessage()               {}
func (*VerificationEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *VerificationEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *VerificationEvent) GetNew() *common3.Verification {
	if m != nil {
		return m.New
	}
	return nil
}

type ScenarioUserCounterEvent struct {
	Action *common7.Action              `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *common4.ScenarioUserCounter `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
	Old    *common4.ScenarioUserCounter `protobuf:"bytes,3,opt,name=old" json:"old,omitempty"`
}

func (m *ScenarioUserCounterEvent) Reset()                    { *m = ScenarioUserCounterEvent{} }
func (m *ScenarioUserCounterEvent) String() string            { return proto.CompactTextString(m) }
func (*ScenarioUserCounterEvent) ProtoMessage()               {}
func (*ScenarioUserCounterEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ScenarioUserCounterEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *ScenarioUserCounterEvent) GetNew() *common4.ScenarioUserCounter {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *ScenarioUserCounterEvent) GetOld() *common4.ScenarioUserCounter {
	if m != nil {
		return m.Old
	}
	return nil
}

type UserActivityEvent struct {
	Action *common7.Action     `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *user1.UserActivity `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
	Old    *user1.UserActivity `protobuf:"bytes,3,opt,name=old" json:"old,omitempty"`
}

func (m *UserActivityEvent) Reset()                    { *m = UserActivityEvent{} }
func (m *UserActivityEvent) String() string            { return proto.CompactTextString(m) }
func (*UserActivityEvent) ProtoMessage()               {}
func (*UserActivityEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *UserActivityEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *UserActivityEvent) GetNew() *user1.UserActivity {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *UserActivityEvent) GetOld() *user1.UserActivity {
	if m != nil {
		return m.Old
	}
	return nil
}

type UserStatusEvent struct {
	Action *common7.Action   `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *user5.UserStatus `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
	Old    *user5.UserStatus `protobuf:"bytes,3,opt,name=old" json:"old,omitempty"`
}

func (m *UserStatusEvent) Reset()                    { *m = UserStatusEvent{} }
func (m *UserStatusEvent) String() string            { return proto.CompactTextString(m) }
func (*UserStatusEvent) ProtoMessage()               {}
func (*UserStatusEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *UserStatusEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *UserStatusEvent) GetNew() *user5.UserStatus {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *UserStatusEvent) GetOld() *user5.UserStatus {
	if m != nil {
		return m.Old
	}
	return nil
}

type UserLinkEvent struct {
	Action *common7.Action `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *user7.UserLink `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
	Old    *user7.UserLink `protobuf:"bytes,3,opt,name=old" json:"old,omitempty"`
}

func (m *UserLinkEvent) Reset()                    { *m = UserLinkEvent{} }
func (m *UserLinkEvent) String() string            { return proto.CompactTextString(m) }
func (*UserLinkEvent) ProtoMessage()               {}
func (*UserLinkEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *UserLinkEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *UserLinkEvent) GetNew() *user7.UserLink {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *UserLinkEvent) GetOld() *user7.UserLink {
	if m != nil {
		return m.Old
	}
	return nil
}

type ConversationEvent struct {
	Action *common7.Action    `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *chat.Conversation `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
	Old    *chat.Conversation `protobuf:"bytes,3,opt,name=old" json:"old,omitempty"`
}

func (m *ConversationEvent) Reset()                    { *m = ConversationEvent{} }
func (m *ConversationEvent) String() string            { return proto.CompactTextString(m) }
func (*ConversationEvent) ProtoMessage()               {}
func (*ConversationEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ConversationEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *ConversationEvent) GetNew() *chat.Conversation {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *ConversationEvent) GetOld() *chat.Conversation {
	if m != nil {
		return m.Old
	}
	return nil
}

type ContactEvent struct {
	Action *common7.Action    `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    []*contact.Contact `protobuf:"bytes,2,rep,name=new" json:"new,omitempty"`
	Old    []*contact.Contact `protobuf:"bytes,3,rep,name=old" json:"old,omitempty"`
}

func (m *ContactEvent) Reset()                    { *m = ContactEvent{} }
func (m *ContactEvent) String() string            { return proto.CompactTextString(m) }
func (*ContactEvent) ProtoMessage()               {}
func (*ContactEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ContactEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *ContactEvent) GetNew() []*contact.Contact {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *ContactEvent) GetOld() []*contact.Contact {
	if m != nil {
		return m.Old
	}
	return nil
}

type PopularityEvent struct {
	Action     *common7.Action `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	UserId     string          `protobuf:"bytes,2,opt,name=UserId" json:"UserId,omitempty"`
	Popularity float64         `protobuf:"fixed64,3,opt,name=Popularity" json:"Popularity,omitempty"`
}

func (m *PopularityEvent) Reset()                    { *m = PopularityEvent{} }
func (m *PopularityEvent) String() string            { return proto.CompactTextString(m) }
func (*PopularityEvent) ProtoMessage()               {}
func (*PopularityEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *PopularityEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *PopularityEvent) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PopularityEvent) GetPopularity() float64 {
	if m != nil {
		return m.Popularity
	}
	return 0
}

type UserVerificationEvent struct {
	Action *common7.Action         `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	New    *user8.UserVerification `protobuf:"bytes,2,opt,name=new" json:"new,omitempty"`
	Old    *user8.UserVerification `protobuf:"bytes,3,opt,name=old" json:"old,omitempty"`
}

func (m *UserVerificationEvent) Reset()                    { *m = UserVerificationEvent{} }
func (m *UserVerificationEvent) String() string            { return proto.CompactTextString(m) }
func (*UserVerificationEvent) ProtoMessage()               {}
func (*UserVerificationEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *UserVerificationEvent) GetAction() *common7.Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *UserVerificationEvent) GetNew() *user8.UserVerification {
	if m != nil {
		return m.New
	}
	return nil
}

func (m *UserVerificationEvent) GetOld() *user8.UserVerification {
	if m != nil {
		return m.Old
	}
	return nil
}

func init() {
	proto.RegisterType((*Event)(nil), "event.Event")
	proto.RegisterType((*LongTermBoostEvent)(nil), "event.LongTermBoostEvent")
	proto.RegisterType((*RelationshipEvent)(nil), "event.RelationshipEvent")
	proto.RegisterType((*MomentLikeEvent)(nil), "event.MomentLikeEvent")
	proto.RegisterType((*MomentCommentEvent)(nil), "event.MomentCommentEvent")
	proto.RegisterType((*MomentEvent)(nil), "event.MomentEvent")
	proto.RegisterType((*ReportEvent)(nil), "event.ReportEvent")
	proto.RegisterType((*UserEvent)(nil), "event.UserEvent")
	proto.RegisterType((*DeviceEvent)(nil), "event.DeviceEvent")
	proto.RegisterType((*BuildInfoEvent)(nil), "event.BuildInfoEvent")
	proto.RegisterType((*MatchEvent)(nil), "event.MatchEvent")
	proto.RegisterType((*MessageEvent)(nil), "event.MessageEvent")
	proto.RegisterType((*BlockEvent)(nil), "event.BlockEvent")
	proto.RegisterType((*FriendshipEvent)(nil), "event.FriendshipEvent")
	proto.RegisterType((*VoteEvent)(nil), "event.VoteEvent")
	proto.RegisterType((*VerificationEvent)(nil), "event.VerificationEvent")
	proto.RegisterType((*ScenarioUserCounterEvent)(nil), "event.ScenarioUserCounterEvent")
	proto.RegisterType((*UserActivityEvent)(nil), "event.UserActivityEvent")
	proto.RegisterType((*UserStatusEvent)(nil), "event.UserStatusEvent")
	proto.RegisterType((*UserLinkEvent)(nil), "event.UserLinkEvent")
	proto.RegisterType((*ConversationEvent)(nil), "event.ConversationEvent")
	proto.RegisterType((*ContactEvent)(nil), "event.ContactEvent")
	proto.RegisterType((*PopularityEvent)(nil), "event.PopularityEvent")
	proto.RegisterType((*UserVerificationEvent)(nil), "event.UserVerificationEvent")
}

func init() { proto.RegisterFile("event/event.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1357 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x5f, 0x6f, 0xe3, 0x44,
	0x10, 0x97, 0xe9, 0xa5, 0x77, 0x9d, 0xfe, 0x49, 0xb3, 0x49, 0x7a, 0x7b, 0xd7, 0x72, 0xad, 0x42,
	0xb9, 0x16, 0xa4, 0x24, 0xb4, 0x05, 0x9e, 0x90, 0xd0, 0xb5, 0x1c, 0xa2, 0x52, 0x2b, 0x41, 0x7a,
	0x45, 0x82, 0x7b, 0x72, 0xed, 0x6d, 0x6a, 0xd5, 0xf1, 0xe6, 0x6c, 0x27, 0xf4, 0x84, 0x84, 0xc4,
	0x03, 0xe2, 0x05, 0xf1, 0xc2, 0x17, 0xe0, 0x89, 0x2f, 0xc4, 0x17, 0x42, 0xb3, 0x7f, 0xec, 0xdd,
	0xd8, 0x45, 0x26, 0xe2, 0xa5, 0xa9, 0x67, 0x7e, 0xfb, 0x9b, 0xdf, 0xcc, 0xee, 0x8e, 0x27, 0x81,
	0x06, 0x9b, 0xb2, 0x28, 0xed, 0x8b, 0xbf, 0xbd, 0x71, 0xcc, 0x53, 0x4e, 0x6a, 0xe2, 0xe1, 0x69,
	0x7d, 0x92, 0xb0, 0xb8, 0x8f, 0x7f, 0xa4, 0xfd, 0x29, 0xcd, 0x0c, 0x5d, 0xd7, 0x4b, 0x83, 0x69,
	0x90, 0xbe, 0x55, 0x9e, 0x56, 0xee, 0x09, 0x83, 0xe8, 0x56, 0x59, 0x37, 0x72, 0x6b, 0x92, 0xba,
	0xe9, 0x24, 0x51, 0xf6, 0xad, 0xdc, 0x3e, 0x65, 0x71, 0x70, 0x1d, 0x78, 0x6e, 0x1a, 0xf0, 0x48,
	0x79, 0x9b, 0x3e, 0x9b, 0x06, 0x1e, 0xeb, 0xcb, 0x0f, 0x6d, 0x1c, 0xf1, 0x11, 0xca, 0x94, 0x1f,
	0x5a, 0x8f, 0x65, 0xec, 0x86, 0xc1, 0xad, 0x86, 0x6f, 0xda, 0x1e, 0x8f, 0x8f, 0x8c, 0x65, 0xed,
	0x6b, 0xc6, 0xfc, 0x2b, 0xd7, 0xbb, 0xed, 0xc7, 0x6c, 0xcc, 0xe3, 0x8c, 0x2d, 0x66, 0xa1, 0xd0,
	0x91, 0xdc, 0x04, 0xe3, 0xfe, 0xc8, 0x4d, 0xbd, 0x9b, 0x52, 0xcf, 0x55, 0xc8, 0x3d, 0x9d, 0xe1,
	0x63, 0x64, 0xe6, 0x51, 0xff, 0x3a, 0x0e, 0x58, 0xe4, 0xa3, 0x5b, 0x39, 0x1a, 0xca, 0x31, 0xe5,
	0xa9, 0xd6, 0xf4, 0x44, 0x9b, 0x8a, 0x29, 0x6f, 0x5b, 0x01, 0xcc, 0x07, 0x05, 0xe8, 0xa8, 0xb5,
	0x89, 0xc7, 0x22, 0x37, 0x0e, 0x78, 0x57, 0x14, 0xcf, 0xe3, 0x93, 0x28, 0xcd, 0x76, 0xa7, 0xa5,
	0x30, 0x1e, 0x8f, 0x52, 0x76, 0xa7, 0xb3, 0x6a, 0x2a, 0xeb, 0x64, 0xec, 0xbb, 0x99, 0x94, 0xc7,
	0xde, 0x8d, 0x9b, 0x22, 0x70, 0xca, 0xe2, 0xc4, 0x14, 0x42, 0x84, 0x63, 0xc4, 0x92, 0xc4, 0x1d,
	0x6a, 0x70, 0x1b, 0x09, 0x5d, 0x4f, 0xe0, 0xf1, 0x53, 0x9a, 0x3b, 0x7f, 0x01, 0xd4, 0x5e, 0xe2,
	0x39, 0x21, 0x1f, 0xc0, 0x43, 0x15, 0x93, 0x3a, 0x3b, 0xce, 0xfe, 0xf2, 0x61, 0xbd, 0x27, 0x83,
	0xf6, 0x4e, 0xa4, 0x79, 0xa0, 0xfd, 0xa4, 0x05, 0xb5, 0x94, 0x8f, 0x03, 0x8f, 0xbe, 0xb3, 0xe3,
	0xec, 0x2f, 0x0d, 0xe4, 0x03, 0xd9, 0x85, 0x07, 0x98, 0x0f, 0x7d, 0x20, 0x56, 0xaf, 0xf7, 0xe4,
	0x59, 0xbc, 0x4c, 0x58, 0x2c, 0x02, 0x0c, 0x84, 0x97, 0x7c, 0x08, 0x8b, 0xf2, 0x48, 0xd0, 0x9a,
	0xc0, 0x11, 0x85, 0xfb, 0x42, 0x18, 0x25, 0x52, 0x21, 0xc8, 0x1e, 0xd4, 0xc4, 0x06, 0xd2, 0x45,
	0x01, 0x6d, 0x28, 0xe8, 0x39, 0xda, 0x24, 0x52, 0xfa, 0x49, 0x17, 0x1e, 0xaa, 0x6c, 0xe9, 0x43,
	0x01, 0x6d, 0x6a, 0xa8, 0xb4, 0x4a, 0xb0, 0xc6, 0x20, 0xaf, 0xd8, 0x7e, 0xfa, 0xc8, 0xe2, 0x3d,
	0x46, 0x9b, 0xe2, 0x15, 0x7e, 0xf2, 0x29, 0x40, 0x7e, 0x26, 0xe8, 0x92, 0x40, 0x6f, 0x28, 0xf4,
	0x97, 0x99, 0x43, 0x2e, 0x31, 0x90, 0x58, 0x0a, 0x3c, 0x32, 0x14, 0xac, 0x52, 0x7c, 0xcb, 0x53,
	0xa5, 0x44, 0x78, 0xc9, 0x67, 0xb0, 0x62, 0x9e, 0x22, 0xba, 0x2c, 0xd0, 0x54, 0xa3, 0x0d, 0x97,
	0x5c, 0x65, 0xa1, 0xb1, 0x90, 0xf2, 0x5e, 0xd0, 0x15, 0xab, 0x90, 0xe7, 0xc2, 0xa8, 0x0a, 0x29,
	0x11, 0x98, 0x87, 0xfc, 0xef, 0x2c, 0xb8, 0x65, 0x74, 0xd5, 0xca, 0xe3, 0x3c, 0x73, 0xa8, 0x3c,
	0x72, 0x24, 0x2a, 0x34, 0x8f, 0x31, 0x5d, 0xb3, 0x14, 0x0e, 0x0c, 0x97, 0x52, 0x68, 0xa2, 0xc9,
	0x37, 0xd0, 0xd4, 0x27, 0x1d, 0x4f, 0xc1, 0x89, 0x3c, 0xe7, 0x74, 0x5d, 0x90, 0x6c, 0x2b, 0x92,
	0x8b, 0x22, 0x42, 0x72, 0x95, 0xad, 0xc5, 0xa4, 0xe5, 0x6d, 0xa7, 0x4d, 0x2b, 0xe9, 0x81, 0x30,
	0xaa, 0xa4, 0x25, 0x02, 0xc5, 0xe3, 0x89, 0x7b, 0xa1, 0x7a, 0x1c, 0x6d, 0x59, 0xe2, 0x2f, 0x0d,
	0x97, 0x12, 0x6f, 0xa2, 0xb1, 0x64, 0xf8, 0x7c, 0x21, 0x3a, 0x1e, 0x6d, 0x5b, 0x25, 0xbb, 0xcc,
	0x1c, 0xaa, 0x64, 0x39, 0x92, 0x7c, 0x04, 0x8f, 0xf0, 0xe9, 0x2c, 0x88, 0x6e, 0xe9, 0x86, 0x58,
	0xd5, 0x32, 0x56, 0xa1, 0x59, 0xae, 0xc9, 0x50, 0xe4, 0x08, 0x96, 0xae, 0x26, 0x41, 0xe8, 0x9f,
	0x46, 0xd7, 0x9c, 0x3e, 0x16, 0x4b, 0xda, 0xfa, 0x44, 0x6a, 0xbb, 0x5c, 0x93, 0xe3, 0x30, 0x39,
	0xf3, 0xe2, 0x53, 0x6a, 0x25, 0x77, 0x62, 0xb8, 0x54, 0x72, 0x26, 0x1a, 0xef, 0x8b, 0x6a, 0x03,
	0xf4, 0x89, 0x75, 0x5f, 0x4e, 0xa4, 0x55, 0xdd, 0x17, 0x85, 0xc1, 0x5a, 0x8c, 0xf9, 0x78, 0x12,
	0xba, 0x31, 0xd6, 0xf1, 0xa9, 0x55, 0x8b, 0xaf, 0x33, 0x87, 0xaa, 0x45, 0x8e, 0x24, 0x9f, 0xc3,
	0xaa, 0x3c, 0x4c, 0x27, 0xb2, 0x73, 0xd3, 0x4d, 0xb1, 0xf4, 0x89, 0x75, 0xf2, 0x94, 0x4f, 0xae,
	0xb6, 0xf1, 0x48, 0x10, 0xf2, 0x68, 0xf8, 0x8a, 0xc5, 0xa3, 0x63, 0xce, 0x93, 0x94, 0x6e, 0x59,
	0x04, 0x67, 0xa6, 0x4f, 0x11, 0x58, 0x78, 0xf2, 0x15, 0xac, 0x63, 0x9d, 0xcd, 0xbb, 0x44, 0xdf,
	0x15, 0x1c, 0x5b, 0xc6, 0xae, 0x14, 0xaf, 0x5a, 0x61, 0x55, 0xe7, 0x37, 0x07, 0x48, 0x31, 0x1e,
	0xd9, 0x80, 0x45, 0x64, 0x38, 0xf5, 0x45, 0xd3, 0xac, 0x0d, 0xd4, 0x13, 0xf9, 0x18, 0xda, 0x02,
	0x75, 0xec, 0xfa, 0x43, 0xf6, 0xf2, 0x6e, 0x1c, 0xc4, 0xcc, 0x7f, 0x15, 0x8c, 0x98, 0x68, 0x99,
	0x0b, 0x83, 0x72, 0x27, 0xd9, 0x87, 0x7a, 0xee, 0x38, 0x63, 0x53, 0x16, 0xd2, 0x05, 0x41, 0x3b,
	0x6b, 0xee, 0xfc, 0xed, 0x40, 0xa3, 0x70, 0xff, 0xc8, 0x73, 0x58, 0xc4, 0x57, 0x3a, 0x8f, 0x54,
	0x0b, 0x5f, 0xd3, 0x2d, 0xfc, 0x85, 0xb0, 0x0e, 0x94, 0x97, 0x1c, 0xc2, 0x42, 0xc4, 0x7e, 0x10,
	0x5a, 0x96, 0x0f, 0x77, 0x7a, 0xd6, 0xab, 0xca, 0x64, 0xbd, 0x14, 0xaf, 0x9b, 0x01, 0x82, 0x71,
	0x0d, 0x0f, 0x7d, 0xa1, 0xa7, 0xd2, 0x1a, 0x1e, 0xfa, 0x58, 0x9d, 0x84, 0xbd, 0x39, 0xf5, 0x0f,
	0xc4, 0x4b, 0xe1, 0xc1, 0x40, 0x3d, 0x65, 0xf6, 0x43, 0xf1, 0x12, 0xd0, 0xf6, 0xc3, 0xce, 0x2f,
	0x0e, 0xd4, 0x67, 0xfa, 0x51, 0xe5, 0x9c, 0x76, 0xcd, 0x9c, 0x48, 0x4f, 0x8d, 0x18, 0x39, 0x9b,
	0xcc, 0x62, 0xd7, 0xcc, 0xa2, 0x14, 0xc5, 0x43, 0xbf, 0xf3, 0xbb, 0x03, 0xa4, 0x78, 0x3a, 0x2b,
	0x4b, 0xd9, 0x33, 0xa5, 0xb4, 0xed, 0x20, 0x8a, 0x50, 0xaa, 0xd9, 0x33, 0xd5, 0xdc, 0x07, 0x44,
	0x41, 0x6f, 0x61, 0xd9, 0xe8, 0xeb, 0x95, 0x85, 0xec, 0x98, 0x42, 0xd6, 0x6c, 0x7e, 0xa9, 0x60,
	0xc7, 0x54, 0x50, 0x40, 0x60, 0xe8, 0xef, 0x60, 0xd9, 0xe8, 0xae, 0x95, 0x43, 0x77, 0xcc, 0xd0,
	0xeb, 0x3d, 0x3d, 0xac, 0xa9, 0x4e, 0x2d, 0x82, 0x77, 0x38, 0x2c, 0x65, 0xe3, 0x41, 0x65, 0xe2,
	0x2d, 0x93, 0x18, 0x7a, 0x62, 0xb0, 0x45, 0x16, 0x99, 0xcf, 0x96, 0x99, 0x8f, 0xe5, 0x55, 0x65,
	0x34, 0xe6, 0x8c, 0x79, 0xcb, 0xa8, 0x46, 0x5a, 0xc9, 0x54, 0x5a, 0xc6, 0x19, 0x04, 0x86, 0xfe,
	0x04, 0xd6, 0xec, 0x6e, 0x4e, 0xde, 0x93, 0xac, 0x8e, 0x9a, 0x41, 0xd4, 0x9a, 0x0c, 0x24, 0x4b,
	0xf4, 0x1a, 0x20, 0x1f, 0x77, 0x2a, 0x0b, 0x7e, 0xdf, 0x14, 0xdc, 0xb4, 0xef, 0xaa, 0xa0, 0x93,
	0xe4, 0x77, 0xb0, 0x62, 0x0e, 0x48, 0x95, 0xe9, 0xb7, 0x4d, 0xfa, 0xd5, 0x1e, 0x4e, 0x9b, 0x7a,
	0xd2, 0x92, 0xe5, 0xd8, 0x36, 0xcb, 0x31, 0x0b, 0xc0, 0x6a, 0xbc, 0x06, 0xc8, 0xa7, 0xad, 0xff,
	0x25, 0x2d, 0x41, 0x27, 0xd3, 0xc2, 0x2e, 0x32, 0x33, 0x9d, 0xcd, 0xdb, 0x45, 0x14, 0x28, 0x67,
	0x2b, 0xed, 0x22, 0x25, 0x28, 0x4c, 0xf2, 0x02, 0x96, 0xb2, 0x91, 0xaf, 0xb2, 0x80, 0x67, 0xa6,
	0x80, 0x15, 0x0d, 0x42, 0x1e, 0x99, 0x9c, 0x07, 0x8d, 0xc2, 0xeb, 0xaa, 0x32, 0xf9, 0x73, 0x93,
	0xbc, 0x95, 0x91, 0x1b, 0x7c, 0x32, 0xc8, 0x9f, 0x0e, 0xd0, 0xfb, 0x06, 0xb3, 0xca, 0xc1, 0xba,
	0x66, 0xb0, 0x4d, 0x0d, 0x2a, 0xa1, 0x95, 0x35, 0xed, 0x9a, 0x35, 0xfd, 0x77, 0x38, 0x16, 0xf7,
	0x57, 0x07, 0x1a, 0x85, 0x19, 0x6e, 0xde, 0x6d, 0xce, 0xda, 0x84, 0x66, 0x2b, 0xdd, 0xe6, 0x12,
	0x14, 0x2a, 0xf9, 0xd9, 0x81, 0xfa, 0xcc, 0x44, 0x38, 0x6f, 0x97, 0xcc, 0x22, 0x48, 0x2e, 0xa9,
	0xa2, 0x63, 0xaa, 0x28, 0xc1, 0xa0, 0x86, 0x1f, 0x61, 0xd5, 0x1a, 0x2f, 0xe7, 0x6d, 0x6d, 0x19,
	0x39, 0x32, 0x95, 0xb6, 0xb6, 0x19, 0x84, 0xde, 0x8a, 0xc2, 0xc4, 0x39, 0xf7, 0x8d, 0xc3, 0x5e,
	0x61, 0xb2, 0x95, 0xdf, 0xb8, 0x22, 0x0a, 0x95, 0xfc, 0x04, 0x2b, 0xe6, 0x04, 0xfb, 0xdf, 0xb7,
	0x61, 0x41, 0x94, 0x58, 0x7f, 0x45, 0x56, 0x5c, 0x33, 0xdb, 0x70, 0x0f, 0x06, 0xe3, 0xbf, 0x81,
	0xfa, 0xcc, 0x3c, 0x5c, 0x59, 0x42, 0x3e, 0x48, 0xca, 0x2f, 0xd5, 0x7a, 0x90, 0x7c, 0x06, 0x90,
	0x53, 0x8a, 0xfc, 0x9d, 0x81, 0x61, 0xe9, 0xfc, 0xe1, 0x40, 0xbb, 0x74, 0x86, 0xad, 0x1c, 0x79,
	0xdf, 0xdc, 0x80, 0x8d, 0x7c, 0x83, 0x0b, 0x6d, 0x01, 0x91, 0xf9, 0x26, 0xdc, 0x8b, 0xe4, 0xa1,
	0x7f, 0x7c, 0xf4, 0xfd, 0xc1, 0x30, 0x48, 0x6f, 0x26, 0x57, 0x18, 0xb3, 0x3f, 0x3e, 0xf0, 0xa2,
	0x7e, 0xea, 0x46, 0xa9, 0x1b, 0x75, 0x7d, 0x3e, 0x72, 0x83, 0xa8, 0x9b, 0x78, 0x37, 0x6c, 0xe4,
	0xf6, 0x87, 0x3c, 0x74, 0xa3, 0xa1, 0xfc, 0xd9, 0xea, 0x6a, 0x51, 0xfc, 0x24, 0x71, 0xf4, 0x4f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x71, 0x48, 0xda, 0xfc, 0xcc, 0x12, 0x00, 0x00,
}
