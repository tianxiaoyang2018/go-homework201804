// Code generated by protoc-gen-go. DO NOT EDIT.
// source: location/user-location.proto

package location

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UserLocation struct {
	UserID    string  `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
	Latitude  float64 `protobuf:"fixed64,3,opt,name=latitude" json:"latitude,omitempty"`
	Timestamp int64   `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *UserLocation) Reset()                    { *m = UserLocation{} }
func (m *UserLocation) String() string            { return proto.CompactTextString(m) }
func (*UserLocation) ProtoMessage()               {}
func (*UserLocation) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *UserLocation) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *UserLocation) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *UserLocation) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *UserLocation) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*UserLocation)(nil), "location.UserLocation")
}

func init() { proto.RegisterFile("location/user-location.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xc9, 0xc9, 0x4f, 0x4e,
	0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2f, 0x2d, 0x4e, 0x2d, 0xd2, 0x85, 0xf1, 0xf4, 0x0a, 0x8a, 0xf2,
	0x4b, 0xf2, 0x85, 0x38, 0x60, 0x7c, 0xa5, 0x3a, 0x2e, 0x9e, 0xd0, 0xe2, 0xd4, 0x22, 0x1f, 0x28,
	0x5f, 0x48, 0x8c, 0x8b, 0x0d, 0xa4, 0xc1, 0xd3, 0x45, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08,
	0xca, 0x13, 0x92, 0xe1, 0xe2, 0xcc, 0xc9, 0xcf, 0x4b, 0xcf, 0x2c, 0x29, 0x4d, 0x49, 0x95, 0x60,
	0x52, 0x60, 0xd4, 0x60, 0x0c, 0x42, 0x08, 0x08, 0x49, 0x71, 0x71, 0xe4, 0x24, 0x96, 0x40, 0x24,
	0x99, 0xc1, 0x92, 0x70, 0x3e, 0x48, 0x67, 0x49, 0x66, 0x6e, 0x6a, 0x71, 0x49, 0x62, 0x6e, 0x81,
	0x04, 0x8b, 0x02, 0xa3, 0x06, 0x73, 0x10, 0x42, 0xc0, 0xc9, 0x2c, 0xca, 0x24, 0x3d, 0xb3, 0x24,
	0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57, 0xbf, 0xc0, 0x30, 0x39, 0x4f, 0xbf, 0x24, 0x31, 0xaf,
	0x24, 0x31, 0x4f, 0x37, 0x25, 0x3f, 0x37, 0x31, 0x33, 0x4f, 0xb7, 0x38, 0x39, 0x23, 0x35, 0x37,
	0x51, 0x3f, 0x3d, 0x3f, 0x27, 0x31, 0x2f, 0x5d, 0x1f, 0xe6, 0xee, 0x24, 0x36, 0xb0, 0x47, 0x8c,
	0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x63, 0xe7, 0x7a, 0xe8, 0x00, 0x00, 0x00,
}
