// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/user-link.proto

package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UserLinkIntent int32

const (
	UserLinkIntent_receivedLikes       UserLinkIntent = 0
	UserLinkIntent_matched             UserLinkIntent = 1
	UserLinkIntent_userCard            UserLinkIntent = 2
	UserLinkIntent_userLikedStatistics UserLinkIntent = 3
	UserLinkIntent_superLike           UserLinkIntent = 4
	UserLinkIntent_userCardPreview     UserLinkIntent = 5
)

var UserLinkIntent_name = map[int32]string{
	0: "receivedLikes",
	1: "matched",
	2: "userCard",
	3: "userLikedStatistics",
	4: "superLike",
	5: "userCardPreview",
}
var UserLinkIntent_value = map[string]int32{
	"receivedLikes":       0,
	"matched":             1,
	"userCard":            2,
	"userLikedStatistics": 3,
	"superLike":           4,
	"userCardPreview":     5,
}

func (x UserLinkIntent) String() string {
	return proto.EnumName(UserLinkIntent_name, int32(x))
}
func (UserLinkIntent) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

type UserLinkState int32

const (
	UserLinkState_USER_LINK_STATE_DEFAULT UserLinkState = 0
	UserLinkState_retracted               UserLinkState = 1
	UserLinkState_published               UserLinkState = 2
)

var UserLinkState_name = map[int32]string{
	0: "USER_LINK_STATE_DEFAULT",
	1: "retracted",
	2: "published",
}
var UserLinkState_value = map[string]int32{
	"USER_LINK_STATE_DEFAULT": 0,
	"retracted":               1,
	"published":               2,
}

func (x UserLinkState) String() string {
	return proto.EnumName(UserLinkState_name, int32(x))
}
func (UserLinkState) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

type UserLink struct {
	Id                                string         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UserID                            string         `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	Intent                            UserLinkIntent `protobuf:"varint,3,opt,name=intent,enum=user.UserLinkIntent" json:"intent,omitempty"`
	Href                              string         `protobuf:"bytes,4,opt,name=href" json:"href,omitempty"`
	Secret                            string         `protobuf:"bytes,5,opt,name=secret" json:"secret,omitempty"`
	State                             UserLinkState  `protobuf:"varint,6,opt,name=state,enum=user.UserLinkState" json:"state,omitempty"`
	Channel                           string         `protobuf:"bytes,7,opt,name=channel" json:"channel,omitempty"`
	CreatedTime                       int64          `protobuf:"varint,8,opt,name=createdTime" json:"createdTime,omitempty"`
	PublishedTime                     int64          `protobuf:"varint,9,opt,name=publishedTime" json:"publishedTime,omitempty"`
	ExpiresTime                       int64          `protobuf:"varint,10,opt,name=expiresTime" json:"expiresTime,omitempty"`
	OtherUserID                       string         `protobuf:"bytes,11,opt,name=otherUserID" json:"otherUserID,omitempty"`
	UserReceivedLikes                 int32          `protobuf:"varint,12,opt,name=userReceivedLikes" json:"userReceivedLikes,omitempty"`
	UserProfilePictureIdentifier      string         `protobuf:"bytes,13,opt,name=userProfilePictureIdentifier" json:"userProfilePictureIdentifier,omitempty"`
	OtherUserProfilePictureIdentifier string         `protobuf:"bytes,14,opt,name=otherUserProfilePictureIdentifier" json:"otherUserProfilePictureIdentifier,omitempty"`
	RegionID                          string         `protobuf:"bytes,15,opt,name=regionID" json:"regionID,omitempty"`
	RegionType                        string         `protobuf:"bytes,16,opt,name=regionType" json:"regionType,omitempty"`
	Param                             *UserLinkParam `protobuf:"bytes,17,opt,name=param" json:"param,omitempty"`
	Type                              string         `protobuf:"bytes,18,opt,name=type" json:"type,omitempty"`
}

func (m *UserLink) Reset()                    { *m = UserLink{} }
func (m *UserLink) String() string            { return proto.CompactTextString(m) }
func (*UserLink) ProtoMessage()               {}
func (*UserLink) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *UserLink) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserLink) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *UserLink) GetIntent() UserLinkIntent {
	if m != nil {
		return m.Intent
	}
	return UserLinkIntent_receivedLikes
}

func (m *UserLink) GetHref() string {
	if m != nil {
		return m.Href
	}
	return ""
}

func (m *UserLink) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *UserLink) GetState() UserLinkState {
	if m != nil {
		return m.State
	}
	return UserLinkState_USER_LINK_STATE_DEFAULT
}

func (m *UserLink) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *UserLink) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *UserLink) GetPublishedTime() int64 {
	if m != nil {
		return m.PublishedTime
	}
	return 0
}

func (m *UserLink) GetExpiresTime() int64 {
	if m != nil {
		return m.ExpiresTime
	}
	return 0
}

func (m *UserLink) GetOtherUserID() string {
	if m != nil {
		return m.OtherUserID
	}
	return ""
}

func (m *UserLink) GetUserReceivedLikes() int32 {
	if m != nil {
		return m.UserReceivedLikes
	}
	return 0
}

func (m *UserLink) GetUserProfilePictureIdentifier() string {
	if m != nil {
		return m.UserProfilePictureIdentifier
	}
	return ""
}

func (m *UserLink) GetOtherUserProfilePictureIdentifier() string {
	if m != nil {
		return m.OtherUserProfilePictureIdentifier
	}
	return ""
}

func (m *UserLink) GetRegionID() string {
	if m != nil {
		return m.RegionID
	}
	return ""
}

func (m *UserLink) GetRegionType() string {
	if m != nil {
		return m.RegionType
	}
	return ""
}

func (m *UserLink) GetParam() *UserLinkParam {
	if m != nil {
		return m.Param
	}
	return nil
}

func (m *UserLink) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type UserLinkParam struct {
	AutoLaunch       string `protobuf:"bytes,1,opt,name=autoLaunch" json:"autoLaunch,omitempty"`
	Template         string `protobuf:"bytes,2,opt,name=template" json:"template,omitempty"`
	TitleZh          string `protobuf:"bytes,3,opt,name=titleZh" json:"titleZh,omitempty"`
	TitleEn          string `protobuf:"bytes,4,opt,name=titleEn" json:"titleEn,omitempty"`
	Style            string `protobuf:"bytes,5,opt,name=style" json:"style,omitempty"`
	ReleaseGroupName string `protobuf:"bytes,6,opt,name=releaseGroupName" json:"releaseGroupName,omitempty"`
}

func (m *UserLinkParam) Reset()                    { *m = UserLinkParam{} }
func (m *UserLinkParam) String() string            { return proto.CompactTextString(m) }
func (*UserLinkParam) ProtoMessage()               {}
func (*UserLinkParam) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *UserLinkParam) GetAutoLaunch() string {
	if m != nil {
		return m.AutoLaunch
	}
	return ""
}

func (m *UserLinkParam) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *UserLinkParam) GetTitleZh() string {
	if m != nil {
		return m.TitleZh
	}
	return ""
}

func (m *UserLinkParam) GetTitleEn() string {
	if m != nil {
		return m.TitleEn
	}
	return ""
}

func (m *UserLinkParam) GetStyle() string {
	if m != nil {
		return m.Style
	}
	return ""
}

func (m *UserLinkParam) GetReleaseGroupName() string {
	if m != nil {
		return m.ReleaseGroupName
	}
	return ""
}

func init() {
	proto.RegisterType((*UserLink)(nil), "user.UserLink")
	proto.RegisterType((*UserLinkParam)(nil), "user.UserLinkParam")
	proto.RegisterEnum("user.UserLinkIntent", UserLinkIntent_name, UserLinkIntent_value)
	proto.RegisterEnum("user.UserLinkState", UserLinkState_name, UserLinkState_value)
}

func init() { proto.RegisterFile("user/user-link.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 621 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xdf, 0x6e, 0xda, 0x3e,
	0x14, 0x6e, 0x28, 0x50, 0x38, 0x14, 0x9a, 0x9e, 0x56, 0xbf, 0x5a, 0xbf, 0x4d, 0x13, 0xab, 0x76,
	0xc1, 0xaa, 0x16, 0xb6, 0xee, 0x09, 0xda, 0x95, 0x4d, 0x6c, 0xa8, 0x42, 0x29, 0xdc, 0xf4, 0xa6,
	0x72, 0x93, 0x03, 0xb1, 0x48, 0x9c, 0xc8, 0x71, 0xba, 0x55, 0x7b, 0x91, 0xbd, 0xce, 0xde, 0x6c,
	0xb2, 0x03, 0x0c, 0x56, 0x6d, 0xbb, 0x41, 0xfe, 0xfe, 0xf8, 0x8b, 0xb1, 0x3f, 0x1b, 0x0e, 0xf3,
	0x8c, 0x54, 0xcf, 0xfc, 0x9c, 0x45, 0x42, 0xce, 0xbb, 0xa9, 0x4a, 0x74, 0x82, 0x65, 0x43, 0x1c,
	0x7f, 0xaf, 0x40, 0x6d, 0x92, 0x91, 0x1a, 0x0a, 0x39, 0xc7, 0x16, 0x94, 0x44, 0xc0, 0x9c, 0xb6,
	0xd3, 0xa9, 0x7b, 0x25, 0x11, 0xe0, 0x7f, 0x50, 0x35, 0xa6, 0xc1, 0x15, 0x2b, 0x59, 0x6e, 0x81,
	0xf0, 0x14, 0xaa, 0x42, 0x6a, 0x92, 0x9a, 0x6d, 0xb7, 0x9d, 0x4e, 0xeb, 0xfc, 0xb0, 0x6b, 0x84,
	0xee, 0x32, 0x67, 0x60, 0x35, 0x6f, 0xe1, 0x41, 0x84, 0x72, 0xa8, 0x68, 0xca, 0xca, 0x36, 0xc3,
	0x8e, 0x4d, 0x72, 0x46, 0xbe, 0x22, 0xcd, 0x2a, 0x45, 0x72, 0x81, 0xf0, 0x35, 0x54, 0x32, 0xcd,
	0x35, 0xb1, 0xaa, 0x0d, 0x3e, 0xd8, 0x0c, 0xbe, 0x31, 0x92, 0x57, 0x38, 0x90, 0xc1, 0x8e, 0x1f,
	0x72, 0x29, 0x29, 0x62, 0x3b, 0x36, 0x63, 0x09, 0xb1, 0x0d, 0x0d, 0x5f, 0x11, 0xd7, 0x14, 0x8c,
	0x45, 0x4c, 0xac, 0xd6, 0x76, 0x3a, 0xdb, 0xde, 0x3a, 0x85, 0xaf, 0xa0, 0x99, 0xe6, 0xf7, 0x91,
	0xc8, 0xc2, 0x85, 0xa7, 0x6e, 0x3d, 0x9b, 0xa4, 0xc9, 0xa1, 0xaf, 0xa9, 0x50, 0x94, 0x59, 0x0f,
	0x14, 0x39, 0x6b, 0x94, 0x71, 0x24, 0x3a, 0x24, 0x35, 0x29, 0x76, 0xa9, 0x61, 0xd7, 0xb1, 0x4e,
	0xe1, 0x29, 0xec, 0x9b, 0xbf, 0xe0, 0x91, 0x4f, 0xe2, 0x81, 0x82, 0xa1, 0x98, 0x53, 0xc6, 0x76,
	0xdb, 0x4e, 0xa7, 0xe2, 0x3d, 0x15, 0xf0, 0x12, 0x9e, 0x1b, 0x72, 0xa4, 0x92, 0xa9, 0x88, 0x68,
	0x24, 0x7c, 0x9d, 0x2b, 0x1a, 0x04, 0x24, 0xb5, 0x98, 0x0a, 0x52, 0xac, 0x69, 0x3f, 0xf0, 0x57,
	0x0f, 0x0e, 0xe1, 0xe5, 0x6a, 0x01, 0x7f, 0x0c, 0x6a, 0xd9, 0xa0, 0x7f, 0x1b, 0xf1, 0x7f, 0xa8,
	0x29, 0x9a, 0x89, 0x44, 0x0e, 0xae, 0xd8, 0x9e, 0x9d, 0xb4, 0xc2, 0xf8, 0x02, 0xa0, 0x18, 0x8f,
	0x1f, 0x53, 0x62, 0xae, 0x55, 0xd7, 0x18, 0x73, 0x98, 0x29, 0x57, 0x3c, 0x66, 0xfb, 0x6d, 0xa7,
	0xd3, 0xf8, 0xfd, 0x30, 0x47, 0x46, 0xf2, 0x0a, 0x87, 0xe9, 0x88, 0x36, 0x21, 0x58, 0x74, 0xc4,
	0x8c, 0x8f, 0x7f, 0x38, 0xd0, 0xdc, 0x30, 0x9b, 0x0f, 0xf2, 0x5c, 0x27, 0x43, 0x9e, 0x4b, 0x3f,
	0x5c, 0xf4, 0x74, 0x8d, 0x31, 0x8b, 0xd5, 0x14, 0xa7, 0x91, 0x29, 0x50, 0xd1, 0xd8, 0x15, 0x36,
	0x75, 0xd1, 0x42, 0x47, 0x74, 0x1b, 0xda, 0xd2, 0xd6, 0xbd, 0x25, 0x5c, 0x29, 0x7d, 0xb9, 0xa8,
	0xe8, 0x12, 0xe2, 0xa1, 0x69, 0xe3, 0x63, 0x44, 0x8b, 0x92, 0x16, 0x00, 0x4f, 0xc0, 0x55, 0x14,
	0x11, 0xcf, 0xe8, 0xa3, 0x4a, 0xf2, 0xf4, 0x9a, 0xc7, 0x45, 0x5d, 0xeb, 0xde, 0x13, 0xfe, 0xe4,
	0x1b, 0xb4, 0x36, 0x6f, 0x05, 0xee, 0x43, 0x53, 0xad, 0x9f, 0xb9, 0xbb, 0x85, 0x0d, 0xd8, 0x89,
	0xb9, 0xf6, 0x43, 0x0a, 0x5c, 0x07, 0x77, 0xa1, 0x66, 0xb6, 0xe9, 0x3d, 0x57, 0x81, 0x5b, 0xc2,
	0x23, 0x38, 0xc8, 0xed, 0xfc, 0x39, 0x05, 0xa6, 0xfd, 0x22, 0xd3, 0xc2, 0xcf, 0xdc, 0x6d, 0x6c,
	0x42, 0x3d, 0xcb, 0xd3, 0x42, 0x71, 0xcb, 0x78, 0x00, 0x7b, 0xcb, 0x59, 0x23, 0x45, 0x0f, 0x82,
	0xbe, 0xb8, 0x95, 0x93, 0x4f, 0xbf, 0xf6, 0xcf, 0xde, 0x1c, 0x7c, 0x06, 0x47, 0x93, 0x9b, 0xbe,
	0x77, 0x37, 0x1c, 0x5c, 0x7f, 0xbe, 0xbb, 0x19, 0x5f, 0x8c, 0xfb, 0x77, 0x57, 0xfd, 0x0f, 0x17,
	0x93, 0xe1, 0xd8, 0xdd, 0x32, 0x89, 0x8a, 0xb4, 0xe2, 0xbe, 0xb6, 0xeb, 0x68, 0x42, 0x7d, 0x75,
	0x1b, 0xdc, 0xd2, 0xe5, 0xf9, 0xed, 0x9b, 0x99, 0xd0, 0x61, 0x7e, 0xdf, 0xf5, 0x93, 0xb8, 0x97,
	0xbe, 0xf5, 0x65, 0x4f, 0x73, 0xa9, 0xb9, 0x3c, 0x0b, 0x92, 0x98, 0x0b, 0x79, 0x96, 0xf9, 0x21,
	0xc5, 0xbc, 0x37, 0x4b, 0x22, 0x2e, 0x67, 0xf6, 0xb1, 0xb9, 0xaf, 0xda, 0x87, 0xe6, 0xdd, 0xcf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x86, 0x47, 0x8c, 0x28, 0x80, 0x04, 0x00, 0x00,
}
