// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/user-verification.proto

package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/p1cn/tantan-domain-schema/golang/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// --user verification--
type VerificationType int32

const (
	VerificationType_VERIFICATION_TYPE_DEFAULT VerificationType = 0
	VerificationType_VERIFICATION_TYPE_STUDENT VerificationType = 1
	VerificationType_VERIFICATION_TYPE_STAFF   VerificationType = 2
)

var VerificationType_name = map[int32]string{
	0: "VERIFICATION_TYPE_DEFAULT",
	1: "VERIFICATION_TYPE_STUDENT",
	2: "VERIFICATION_TYPE_STAFF",
}
var VerificationType_value = map[string]int32{
	"VERIFICATION_TYPE_DEFAULT": 0,
	"VERIFICATION_TYPE_STUDENT": 1,
	"VERIFICATION_TYPE_STAFF":   2,
}

func (x VerificationType) String() string {
	return proto.EnumName(VerificationType_name, int32(x))
}
func (VerificationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

type VerificationStatus int32

const (
	VerificationStatus_VERIFICATION_STATUS_DEFAULT     VerificationStatus = 0
	VerificationStatus_VERIFICATION_STATUS_PENDING     VerificationStatus = 1
	VerificationStatus_VERIFICATION_STATUS_VERIFIED    VerificationStatus = 2
	VerificationStatus_VERIFICATION_STATUS_REJECTED    VerificationStatus = 3
	VerificationStatus_VERIFICATION_STATUS_PREPENDING  VerificationStatus = 4
	VerificationStatus_VERIFICATION_STATUS_PREVERIFIED VerificationStatus = 5
)

var VerificationStatus_name = map[int32]string{
	0: "VERIFICATION_STATUS_DEFAULT",
	1: "VERIFICATION_STATUS_PENDING",
	2: "VERIFICATION_STATUS_VERIFIED",
	3: "VERIFICATION_STATUS_REJECTED",
	4: "VERIFICATION_STATUS_PREPENDING",
	5: "VERIFICATION_STATUS_PREVERIFIED",
}
var VerificationStatus_value = map[string]int32{
	"VERIFICATION_STATUS_DEFAULT":     0,
	"VERIFICATION_STATUS_PENDING":     1,
	"VERIFICATION_STATUS_VERIFIED":    2,
	"VERIFICATION_STATUS_REJECTED":    3,
	"VERIFICATION_STATUS_PREPENDING":  4,
	"VERIFICATION_STATUS_PREVERIFIED": 5,
}

func (x VerificationStatus) String() string {
	return proto.EnumName(VerificationStatus_name, int32(x))
}
func (VerificationStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

type VerificationRejectionReason int32

const (
	VerificationRejectionReason_VERIFICATION_REJECTION_REASON_SCHOOL             VerificationRejectionReason = 0
	VerificationRejectionReason_VERIFICATION_REJECTION_REASON_STARTTIME          VerificationRejectionReason = 1
	VerificationRejectionReason_VERIFICATION_REJECTION_REASON_IDCARDCOVERPICTURE VerificationRejectionReason = 2
	VerificationRejectionReason_VERIFICATION_REJECTION_REASON_IDCARDBACKPICTURE  VerificationRejectionReason = 3
)

var VerificationRejectionReason_name = map[int32]string{
	0: "VERIFICATION_REJECTION_REASON_SCHOOL",
	1: "VERIFICATION_REJECTION_REASON_STARTTIME",
	2: "VERIFICATION_REJECTION_REASON_IDCARDCOVERPICTURE",
	3: "VERIFICATION_REJECTION_REASON_IDCARDBACKPICTURE",
}
var VerificationRejectionReason_value = map[string]int32{
	"VERIFICATION_REJECTION_REASON_SCHOOL":             0,
	"VERIFICATION_REJECTION_REASON_STARTTIME":          1,
	"VERIFICATION_REJECTION_REASON_IDCARDCOVERPICTURE": 2,
	"VERIFICATION_REJECTION_REASON_IDCARDBACKPICTURE":  3,
}

func (x VerificationRejectionReason) String() string {
	return proto.EnumName(VerificationRejectionReason_name, int32(x))
}
func (VerificationRejectionReason) EnumDescriptor() ([]byte, []int) { return fileDescriptor10, []int{2} }

// --verified user--
type AuditType int32

const (
	AuditType_AUDIT_TYPE_MANUAL    AuditType = 0
	AuditType_AUDIT_TYPE_AUTOMATIC AuditType = 1
)

var AuditType_name = map[int32]string{
	0: "AUDIT_TYPE_MANUAL",
	1: "AUDIT_TYPE_AUTOMATIC",
}
var AuditType_value = map[string]int32{
	"AUDIT_TYPE_MANUAL":    0,
	"AUDIT_TYPE_AUTOMATIC": 1,
}

func (x AuditType) String() string {
	return proto.EnumName(AuditType_name, int32(x))
}
func (AuditType) EnumDescriptor() ([]byte, []int) { return fileDescriptor10, []int{3} }

type VerificationStudies struct {
	SchoolID   string            `protobuf:"bytes,1,opt,name=schoolID" json:"schoolID,omitempty"`
	SchoolName string            `protobuf:"bytes,2,opt,name=schoolName" json:"schoolName,omitempty"`
	Pictures   []*common.Picture `protobuf:"bytes,3,rep,name=pictures" json:"pictures,omitempty"`
	StartTime  int64             `protobuf:"varint,4,opt,name=startTime" json:"startTime,omitempty"`
}

func (m *VerificationStudies) Reset()                    { *m = VerificationStudies{} }
func (m *VerificationStudies) String() string            { return proto.CompactTextString(m) }
func (*VerificationStudies) ProtoMessage()               {}
func (*VerificationStudies) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

func (m *VerificationStudies) GetSchoolID() string {
	if m != nil {
		return m.SchoolID
	}
	return ""
}

func (m *VerificationStudies) GetSchoolName() string {
	if m != nil {
		return m.SchoolName
	}
	return ""
}

func (m *VerificationStudies) GetPictures() []*common.Picture {
	if m != nil {
		return m.Pictures
	}
	return nil
}

func (m *VerificationStudies) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

type UserVerification struct {
	ID                 string                        `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	UserID             string                        `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	VerifiedType       VerificationType              `protobuf:"varint,3,opt,name=verifiedType,enum=user.VerificationType" json:"verifiedType,omitempty"`
	Status             VerificationStatus            `protobuf:"varint,4,opt,name=status,enum=user.VerificationStatus" json:"status,omitempty"`
	RejectionReasons   []VerificationRejectionReason `protobuf:"varint,5,rep,packed,name=rejectionReasons,enum=user.VerificationRejectionReason" json:"rejectionReasons,omitempty"`
	Studies            *VerificationStudies          `protobuf:"bytes,6,opt,name=studies" json:"studies,omitempty"`
	ApplyTime          int64                         `protobuf:"varint,7,opt,name=applyTime" json:"applyTime,omitempty"`
	RejectionPushValue string                        `protobuf:"bytes,8,opt,name=rejectionPushValue" json:"rejectionPushValue,omitempty"`
}

func (m *UserVerification) Reset()                    { *m = UserVerification{} }
func (m *UserVerification) String() string            { return proto.CompactTextString(m) }
func (*UserVerification) ProtoMessage()               {}
func (*UserVerification) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

func (m *UserVerification) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *UserVerification) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *UserVerification) GetVerifiedType() VerificationType {
	if m != nil {
		return m.VerifiedType
	}
	return VerificationType_VERIFICATION_TYPE_DEFAULT
}

func (m *UserVerification) GetStatus() VerificationStatus {
	if m != nil {
		return m.Status
	}
	return VerificationStatus_VERIFICATION_STATUS_DEFAULT
}

func (m *UserVerification) GetRejectionReasons() []VerificationRejectionReason {
	if m != nil {
		return m.RejectionReasons
	}
	return nil
}

func (m *UserVerification) GetStudies() *VerificationStudies {
	if m != nil {
		return m.Studies
	}
	return nil
}

func (m *UserVerification) GetApplyTime() int64 {
	if m != nil {
		return m.ApplyTime
	}
	return 0
}

func (m *UserVerification) GetRejectionPushValue() string {
	if m != nil {
		return m.RejectionPushValue
	}
	return ""
}

type VerifiedUser struct {
	ID                   string           `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	UserID               string           `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	VerifiedType         VerificationType `protobuf:"varint,3,opt,name=verifiedType,enum=user.VerificationType" json:"verifiedType,omitempty"`
	OrganizationID       string           `protobuf:"bytes,4,opt,name=organizationID" json:"organizationID,omitempty"`
	OrganizationName     string           `protobuf:"bytes,5,opt,name=organizationName" json:"organizationName,omitempty"`
	ExpiresTime          int64            `protobuf:"varint,6,opt,name=expiresTime" json:"expiresTime,omitempty"`
	AuditType            AuditType        `protobuf:"varint,7,opt,name=auditType,enum=user.AuditType" json:"auditType,omitempty"`
	HideOrganizationName bool             `protobuf:"varint,8,opt,name=hideOrganizationName" json:"hideOrganizationName,omitempty"`
}

func (m *VerifiedUser) Reset()                    { *m = VerifiedUser{} }
func (m *VerifiedUser) String() string            { return proto.CompactTextString(m) }
func (*VerifiedUser) ProtoMessage()               {}
func (*VerifiedUser) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{2} }

func (m *VerifiedUser) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *VerifiedUser) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *VerifiedUser) GetVerifiedType() VerificationType {
	if m != nil {
		return m.VerifiedType
	}
	return VerificationType_VERIFICATION_TYPE_DEFAULT
}

func (m *VerifiedUser) GetOrganizationID() string {
	if m != nil {
		return m.OrganizationID
	}
	return ""
}

func (m *VerifiedUser) GetOrganizationName() string {
	if m != nil {
		return m.OrganizationName
	}
	return ""
}

func (m *VerifiedUser) GetExpiresTime() int64 {
	if m != nil {
		return m.ExpiresTime
	}
	return 0
}

func (m *VerifiedUser) GetAuditType() AuditType {
	if m != nil {
		return m.AuditType
	}
	return AuditType_AUDIT_TYPE_MANUAL
}

func (m *VerifiedUser) GetHideOrganizationName() bool {
	if m != nil {
		return m.HideOrganizationName
	}
	return false
}

// -- user school validation --
type SchoolValidation struct {
	ID     string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	UserID string `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	Times  int32  `protobuf:"varint,3,opt,name=times" json:"times,omitempty"`
}

func (m *SchoolValidation) Reset()                    { *m = SchoolValidation{} }
func (m *SchoolValidation) String() string            { return proto.CompactTextString(m) }
func (*SchoolValidation) ProtoMessage()               {}
func (*SchoolValidation) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{3} }

func (m *SchoolValidation) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *SchoolValidation) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *SchoolValidation) GetTimes() int32 {
	if m != nil {
		return m.Times
	}
	return 0
}

// -- user predicated school --
type PredictedSchool struct {
	ID        string   `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	UserID    string   `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	SchoolIDs []string `protobuf:"bytes,3,rep,name=schoolIDs" json:"schoolIDs,omitempty"`
}

func (m *PredictedSchool) Reset()                    { *m = PredictedSchool{} }
func (m *PredictedSchool) String() string            { return proto.CompactTextString(m) }
func (*PredictedSchool) ProtoMessage()               {}
func (*PredictedSchool) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{4} }

func (m *PredictedSchool) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *PredictedSchool) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *PredictedSchool) GetSchoolIDs() []string {
	if m != nil {
		return m.SchoolIDs
	}
	return nil
}

func init() {
	proto.RegisterType((*VerificationStudies)(nil), "user.VerificationStudies")
	proto.RegisterType((*UserVerification)(nil), "user.UserVerification")
	proto.RegisterType((*VerifiedUser)(nil), "user.VerifiedUser")
	proto.RegisterType((*SchoolValidation)(nil), "user.SchoolValidation")
	proto.RegisterType((*PredictedSchool)(nil), "user.PredictedSchool")
	proto.RegisterEnum("user.VerificationType", VerificationType_name, VerificationType_value)
	proto.RegisterEnum("user.VerificationStatus", VerificationStatus_name, VerificationStatus_value)
	proto.RegisterEnum("user.VerificationRejectionReason", VerificationRejectionReason_name, VerificationRejectionReason_value)
	proto.RegisterEnum("user.AuditType", AuditType_name, AuditType_value)
}

func init() { proto.RegisterFile("user/user-verification.proto", fileDescriptor10) }

var fileDescriptor10 = []byte{
	// 772 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xdd, 0x92, 0xe2, 0x44,
	0x18, 0xdd, 0x84, 0x81, 0x81, 0x6f, 0xb6, 0x98, 0xd8, 0x8e, 0x6b, 0x76, 0x67, 0xdc, 0x8d, 0x68,
	0x69, 0x8a, 0x2d, 0x60, 0x64, 0xbc, 0xb2, 0xbc, 0xc9, 0x26, 0x41, 0xa3, 0xcb, 0x4f, 0x35, 0x1d,
	0x2c, 0xbd, 0xd9, 0xea, 0x4d, 0x5a, 0x68, 0x8b, 0x24, 0x54, 0x7e, 0x2c, 0xc7, 0x67, 0xf1, 0x8d,
	0x7c, 0x08, 0x2f, 0x7c, 0x0b, 0xaf, 0xac, 0x74, 0x80, 0x09, 0x03, 0x33, 0x8e, 0x37, 0x7b, 0x43,
	0xa5, 0xcf, 0x39, 0x5f, 0x7f, 0x87, 0xd3, 0xf9, 0xd2, 0x70, 0x91, 0x25, 0x2c, 0xee, 0xe5, 0x3f,
	0x9d, 0x5f, 0x59, 0xcc, 0x7f, 0xe6, 0x1e, 0x4d, 0x79, 0x14, 0x76, 0x57, 0x71, 0x94, 0x46, 0xe8,
	0x28, 0x27, 0x9e, 0x21, 0x2f, 0x0a, 0x82, 0x28, 0xec, 0x05, 0xcc, 0xe7, 0xb4, 0x60, 0x5a, 0x7f,
	0x48, 0xf0, 0xfe, 0xac, 0x54, 0x30, 0x4d, 0x33, 0x9f, 0xb3, 0x04, 0x3d, 0x83, 0x7a, 0xe2, 0x2d,
	0xa2, 0x68, 0xe9, 0x58, 0xaa, 0xa4, 0x49, 0x7a, 0x03, 0x6f, 0xd7, 0xe8, 0x39, 0x40, 0xf1, 0x3c,
	0xa2, 0x01, 0x53, 0x65, 0xc1, 0x96, 0x10, 0xf4, 0x12, 0xea, 0x2b, 0xee, 0xa5, 0x59, 0xcc, 0x12,
	0xb5, 0xa2, 0x55, 0xf4, 0x93, 0xfe, 0x69, 0xb7, 0x68, 0xdd, 0x9d, 0x14, 0x38, 0xde, 0x0a, 0xd0,
	0x05, 0x34, 0x92, 0x94, 0xc6, 0x29, 0xe1, 0x01, 0x53, 0x8f, 0x34, 0x49, 0xaf, 0xe0, 0x1b, 0xa0,
	0xf5, 0x8f, 0x0c, 0x8a, 0x9b, 0xb0, 0xb8, 0x6c, 0x11, 0x35, 0x41, 0xde, 0xba, 0x92, 0x1d, 0x0b,
	0x3d, 0x81, 0x5a, 0xfe, 0xff, 0x1c, 0x6b, 0xed, 0x65, 0xbd, 0x42, 0x5f, 0xc1, 0xe3, 0x22, 0x0b,
	0xe6, 0x93, 0xeb, 0x15, 0x53, 0x2b, 0x9a, 0xa4, 0x37, 0xfb, 0x4f, 0xba, 0x39, 0xdd, 0x2d, 0xef,
	0x98, 0xb3, 0x78, 0x47, 0x8b, 0x2e, 0xa1, 0x96, 0xa4, 0x34, 0xcd, 0x12, 0xe1, 0xa9, 0xd9, 0x57,
	0xf7, 0xab, 0xa6, 0x82, 0xc7, 0x6b, 0x1d, 0x1a, 0x82, 0x12, 0xb3, 0x5f, 0x98, 0x97, 0x53, 0x98,
	0xd1, 0x24, 0x0a, 0x13, 0xb5, 0xaa, 0x55, 0xf4, 0x66, 0xff, 0xe3, 0xfd, 0x5a, 0xbc, 0xab, 0xc4,
	0x7b, 0xa5, 0xe8, 0x0a, 0x8e, 0x93, 0xe2, 0x2c, 0xd4, 0x9a, 0x26, 0xe9, 0x27, 0xfd, 0xa7, 0x87,
	0x1c, 0x08, 0x01, 0xde, 0x28, 0xf3, 0x30, 0xe9, 0x6a, 0xb5, 0xbc, 0x16, 0x61, 0x1e, 0x17, 0x61,
	0x6e, 0x01, 0xd4, 0x05, 0xb4, 0x6d, 0x33, 0xc9, 0x92, 0xc5, 0x8c, 0x2e, 0x33, 0xa6, 0xd6, 0x45,
	0x66, 0x07, 0x98, 0xd6, 0x9f, 0x32, 0x3c, 0x9e, 0xad, 0x43, 0xc9, 0x0f, 0xe1, 0x9d, 0x04, 0xff,
	0x19, 0x34, 0xa3, 0x78, 0x4e, 0x43, 0xfe, 0xbb, 0x50, 0x38, 0x96, 0x38, 0x80, 0x06, 0xbe, 0x85,
	0xa2, 0x36, 0x28, 0x65, 0x44, 0xbc, 0x8a, 0x55, 0xa1, 0xdc, 0xc3, 0x91, 0x06, 0x27, 0xec, 0xb7,
	0x15, 0x8f, 0x59, 0x22, 0x82, 0xa9, 0x89, 0x60, 0xca, 0x10, 0xea, 0x40, 0x83, 0x66, 0x3e, 0x4f,
	0x85, 0xdd, 0x63, 0x61, 0xf7, 0xb4, 0xb0, 0x6b, 0x6c, 0x60, 0x7c, 0xa3, 0x40, 0x7d, 0x38, 0x5b,
	0x70, 0x9f, 0x8d, 0x6f, 0x1b, 0xc8, 0xb3, 0xac, 0xe3, 0x83, 0x5c, 0x6b, 0x02, 0xca, 0x54, 0xcc,
	0xc8, 0x8c, 0x2e, 0xb9, 0xff, 0xff, 0xde, 0xe4, 0x33, 0xa8, 0xa6, 0x3c, 0x10, 0xe3, 0x24, 0xe9,
	0x55, 0x5c, 0x2c, 0x5a, 0x3f, 0xc0, 0xe9, 0x24, 0x66, 0x3e, 0xf7, 0x52, 0xe6, 0x17, 0x5b, 0x3f,
	0x78, 0xc3, 0x7c, 0xea, 0xd6, 0xe3, 0x5c, 0xcc, 0x68, 0x03, 0xdf, 0x00, 0xed, 0x00, 0x94, 0xdb,
	0xa7, 0x84, 0x3e, 0x82, 0xa7, 0x33, 0x1b, 0x3b, 0x03, 0xc7, 0x34, 0x88, 0x33, 0x1e, 0xbd, 0x21,
	0x3f, 0x4e, 0xec, 0x37, 0x96, 0x3d, 0x30, 0xdc, 0xd7, 0x44, 0x79, 0x74, 0x98, 0x9e, 0x12, 0xd7,
	0xb2, 0x47, 0x44, 0x91, 0xd0, 0x39, 0x7c, 0x78, 0x88, 0x36, 0x06, 0x03, 0x45, 0x6e, 0xff, 0x2d,
	0x01, 0xda, 0x1f, 0x2c, 0xf4, 0x02, 0xce, 0x77, 0x6a, 0xa6, 0xc4, 0x20, 0xee, 0xb4, 0xd4, 0xf3,
	0x0e, 0xc1, 0xc4, 0x1e, 0x59, 0xce, 0xe8, 0x1b, 0x45, 0x42, 0x1a, 0x5c, 0x1c, 0x12, 0x14, 0x98,
	0x6d, 0x29, 0xf2, 0x5d, 0x0a, 0x6c, 0x7f, 0x67, 0x9b, 0xc4, 0xb6, 0x94, 0x0a, 0x6a, 0xc1, 0xf3,
	0x83, 0x4d, 0xb0, 0xbd, 0xe9, 0x73, 0x84, 0x3e, 0x81, 0x17, 0x77, 0x68, 0xb6, 0xad, 0xaa, 0xed,
	0xbf, 0x24, 0x38, 0xbf, 0xe7, 0x13, 0x80, 0x74, 0xf8, 0x74, 0x67, 0x93, 0xc2, 0x43, 0xf1, 0x64,
	0x4c, 0xf3, 0x5d, 0xcd, 0x6f, 0xc7, 0xe3, 0xd7, 0xca, 0x23, 0xf4, 0x12, 0x3e, 0xff, 0x0f, 0x25,
	0x31, 0x30, 0x21, 0xce, 0xd0, 0x56, 0x24, 0xf4, 0x25, 0x5c, 0xde, 0x2f, 0x76, 0x2c, 0xd3, 0xc0,
	0x96, 0x39, 0x9e, 0xd9, 0x78, 0xe2, 0x98, 0xc4, 0xc5, 0xb6, 0x22, 0xa3, 0x2b, 0xe8, 0x3d, 0xa4,
	0xea, 0x95, 0x61, 0x7e, 0xbf, 0x29, 0xaa, 0xb4, 0xbf, 0x86, 0xc6, 0x76, 0x5a, 0xd0, 0x07, 0xf0,
	0x9e, 0xe1, 0x5a, 0x0e, 0x29, 0x8e, 0x7a, 0x68, 0x8c, 0x5c, 0x23, 0xf7, 0xae, 0xc2, 0x59, 0x09,
	0x36, 0x5c, 0x32, 0x1e, 0x1a, 0xc4, 0x31, 0x15, 0xe9, 0x55, 0xff, 0xa7, 0xcb, 0x39, 0x4f, 0x17,
	0xd9, 0xdb, 0xfc, 0xae, 0xe8, 0xad, 0xbe, 0xf0, 0xc2, 0x5e, 0x4a, 0xc3, 0x94, 0x86, 0x1d, 0x3f,
	0x0a, 0x28, 0x0f, 0x3b, 0x89, 0xb7, 0x60, 0x01, 0xed, 0xcd, 0xa3, 0x25, 0x0d, 0xe7, 0xe2, 0xaa,
	0x7b, 0x5b, 0x13, 0x97, 0xd8, 0xd5, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2e, 0xb1, 0xd0, 0x70,
	0xfe, 0x06, 0x00, 0x00,
}
