// Code generated by protoc-gen-go. DO NOT EDIT.
// source: membership/user_total_privilege.proto

package membership

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// VIP 2 - See
type SeeLimit struct {
	Identifier string `protobuf:"bytes,1,opt,name=Identifier" json:"Identifier,omitempty"`
	Total      int32  `protobuf:"varint,2,opt,name=Total" json:"Total,omitempty"`
	Remaining  int32  `protobuf:"varint,3,opt,name=Remaining" json:"Remaining,omitempty"`
	Reset_     int32  `protobuf:"varint,4,opt,name=Reset" json:"Reset,omitempty"`
}

func (m *SeeLimit) Reset()                    { *m = SeeLimit{} }
func (m *SeeLimit) String() string            { return proto.CompactTextString(m) }
func (*SeeLimit) ProtoMessage()               {}
func (*SeeLimit) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *SeeLimit) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *SeeLimit) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *SeeLimit) GetRemaining() int32 {
	if m != nil {
		return m.Remaining
	}
	return 0
}

func (m *SeeLimit) GetReset_() int32 {
	if m != nil {
		return m.Reset_
	}
	return 0
}

// VIP 2 - Boost
// BoostLimits 对boost的数量限制
// `multiplier` 和 `duration` 唯一确认一种boost
type BoostLimit struct {
	Identifier string `protobuf:"bytes,1,opt,name=Identifier" json:"Identifier,omitempty"`
	Multiplier int32  `protobuf:"varint,2,opt,name=Multiplier" json:"Multiplier,omitempty"`
	Duration   int32  `protobuf:"varint,3,opt,name=Duration" json:"Duration,omitempty"`
	Remaining  int32  `protobuf:"varint,4,opt,name=Remaining" json:"Remaining,omitempty"`
	Total      int32  `protobuf:"varint,5,opt,name=Total" json:"Total,omitempty"`
	Reset_     int32  `protobuf:"varint,6,opt,name=Reset" json:"Reset,omitempty"`
}

func (m *BoostLimit) Reset()                    { *m = BoostLimit{} }
func (m *BoostLimit) String() string            { return proto.CompactTextString(m) }
func (*BoostLimit) ProtoMessage()               {}
func (*BoostLimit) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *BoostLimit) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *BoostLimit) GetMultiplier() int32 {
	if m != nil {
		return m.Multiplier
	}
	return 0
}

func (m *BoostLimit) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *BoostLimit) GetRemaining() int32 {
	if m != nil {
		return m.Remaining
	}
	return 0
}

func (m *BoostLimit) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *BoostLimit) GetReset_() int32 {
	if m != nil {
		return m.Reset_
	}
	return 0
}

type BoostBadge struct {
	Identifier  string `protobuf:"bytes,1,opt,name=Identifier" json:"Identifier,omitempty"`
	Multiplier  int32  `protobuf:"varint,2,opt,name=Multiplier" json:"Multiplier,omitempty"`
	Duration    int32  `protobuf:"varint,3,opt,name=Duration" json:"Duration,omitempty"`
	Total       int32  `protobuf:"varint,4,opt,name=Total" json:"Total,omitempty"`
	Remaining   int32  `protobuf:"varint,5,opt,name=Remaining" json:"Remaining,omitempty"`
	ExpiresTime int64  `protobuf:"varint,6,opt,name=ExpiresTime" json:"ExpiresTime,omitempty"`
}

func (m *BoostBadge) Reset()                    { *m = BoostBadge{} }
func (m *BoostBadge) String() string            { return proto.CompactTextString(m) }
func (*BoostBadge) ProtoMessage()               {}
func (*BoostBadge) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *BoostBadge) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *BoostBadge) GetMultiplier() int32 {
	if m != nil {
		return m.Multiplier
	}
	return 0
}

func (m *BoostBadge) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *BoostBadge) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *BoostBadge) GetRemaining() int32 {
	if m != nil {
		return m.Remaining
	}
	return 0
}

func (m *BoostBadge) GetExpiresTime() int64 {
	if m != nil {
		return m.ExpiresTime
	}
	return 0
}

type WhoLikedMe struct {
	Identifier string `protobuf:"bytes,1,opt,name=Identifier" json:"Identifier,omitempty"`
	Total      int32  `protobuf:"varint,2,opt,name=Total" json:"Total,omitempty"`
	Remaining  int32  `protobuf:"varint,3,opt,name=Remaining" json:"Remaining,omitempty"`
	Reset_     int32  `protobuf:"varint,4,opt,name=Reset" json:"Reset,omitempty"`
}

func (m *WhoLikedMe) Reset()                    { *m = WhoLikedMe{} }
func (m *WhoLikedMe) String() string            { return proto.CompactTextString(m) }
func (*WhoLikedMe) ProtoMessage()               {}
func (*WhoLikedMe) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *WhoLikedMe) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *WhoLikedMe) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *WhoLikedMe) GetRemaining() int32 {
	if m != nil {
		return m.Remaining
	}
	return 0
}

func (m *WhoLikedMe) GetReset_() int32 {
	if m != nil {
		return m.Reset_
	}
	return 0
}

// VIP 2 - UserTotalPrivilege
type UserTotalPrivilege struct {
	Id              string                     `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	UserID          string                     `protobuf:"bytes,2,opt,name=UserID" json:"UserID,omitempty"`
	PrivilegeType   string                     `protobuf:"bytes,3,opt,name=PrivilegeType" json:"PrivilegeType,omitempty"`
	Identifier      string                     `protobuf:"bytes,4,opt,name=Identifier" json:"Identifier,omitempty"`
	Content         *UserTotalPrivilegeContent `protobuf:"bytes,5,opt,name=Content" json:"Content,omitempty"`
	BeginTime       int64                      `protobuf:"varint,6,opt,name=BeginTime" json:"BeginTime,omitempty"`
	EndTime         int64                      `protobuf:"varint,7,opt,name=EndTime" json:"EndTime,omitempty"`
	ResetPeriod     int32                      `protobuf:"varint,8,opt,name=ResetPeriod" json:"ResetPeriod,omitempty"`
	Total           int32                      `protobuf:"varint,9,opt,name=Total" json:"Total,omitempty"`
	Used            int32                      `protobuf:"varint,10,opt,name=Used" json:"Used,omitempty"`
	Remaining       int32                      `protobuf:"varint,11,opt,name=Remaining" json:"Remaining,omitempty"`
	ResetSecond     int32                      `protobuf:"varint,12,opt,name=ResetSecond" json:"ResetSecond,omitempty"`
	LastResetTime   int64                      `protobuf:"varint,13,opt,name=LastResetTime" json:"LastResetTime,omitempty"`
	AttributionID   string                     `protobuf:"bytes,14,opt,name=AttributionID" json:"AttributionID,omitempty"`
	AttributionType string                     `protobuf:"bytes,15,opt,name=AttributionType" json:"AttributionType,omitempty"`
	UpdatedTime     int64                      `protobuf:"varint,16,opt,name=UpdatedTime" json:"UpdatedTime,omitempty"`
	CreatedTime     int64                      `protobuf:"varint,17,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
}

func (m *UserTotalPrivilege) Reset()                    { *m = UserTotalPrivilege{} }
func (m *UserTotalPrivilege) String() string            { return proto.CompactTextString(m) }
func (*UserTotalPrivilege) ProtoMessage()               {}
func (*UserTotalPrivilege) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *UserTotalPrivilege) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserTotalPrivilege) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *UserTotalPrivilege) GetPrivilegeType() string {
	if m != nil {
		return m.PrivilegeType
	}
	return ""
}

func (m *UserTotalPrivilege) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *UserTotalPrivilege) GetContent() *UserTotalPrivilegeContent {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *UserTotalPrivilege) GetBeginTime() int64 {
	if m != nil {
		return m.BeginTime
	}
	return 0
}

func (m *UserTotalPrivilege) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *UserTotalPrivilege) GetResetPeriod() int32 {
	if m != nil {
		return m.ResetPeriod
	}
	return 0
}

func (m *UserTotalPrivilege) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *UserTotalPrivilege) GetUsed() int32 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *UserTotalPrivilege) GetRemaining() int32 {
	if m != nil {
		return m.Remaining
	}
	return 0
}

func (m *UserTotalPrivilege) GetResetSecond() int32 {
	if m != nil {
		return m.ResetSecond
	}
	return 0
}

func (m *UserTotalPrivilege) GetLastResetTime() int64 {
	if m != nil {
		return m.LastResetTime
	}
	return 0
}

func (m *UserTotalPrivilege) GetAttributionID() string {
	if m != nil {
		return m.AttributionID
	}
	return ""
}

func (m *UserTotalPrivilege) GetAttributionType() string {
	if m != nil {
		return m.AttributionType
	}
	return ""
}

func (m *UserTotalPrivilege) GetUpdatedTime() int64 {
	if m != nil {
		return m.UpdatedTime
	}
	return 0
}

func (m *UserTotalPrivilege) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

type UserTotalPrivilegeContent struct {
	Multiplier int32 `protobuf:"varint,1,opt,name=Multiplier" json:"Multiplier,omitempty"`
	Duration   int32 `protobuf:"varint,2,opt,name=Duration" json:"Duration,omitempty"`
}

func (m *UserTotalPrivilegeContent) Reset()                    { *m = UserTotalPrivilegeContent{} }
func (m *UserTotalPrivilegeContent) String() string            { return proto.CompactTextString(m) }
func (*UserTotalPrivilegeContent) ProtoMessage()               {}
func (*UserTotalPrivilegeContent) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *UserTotalPrivilegeContent) GetMultiplier() int32 {
	if m != nil {
		return m.Multiplier
	}
	return 0
}

func (m *UserTotalPrivilegeContent) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func init() {
	proto.RegisterType((*SeeLimit)(nil), "membership.SeeLimit")
	proto.RegisterType((*BoostLimit)(nil), "membership.BoostLimit")
	proto.RegisterType((*BoostBadge)(nil), "membership.BoostBadge")
	proto.RegisterType((*WhoLikedMe)(nil), "membership.WhoLikedMe")
	proto.RegisterType((*UserTotalPrivilege)(nil), "membership.UserTotalPrivilege")
	proto.RegisterType((*UserTotalPrivilegeContent)(nil), "membership.UserTotalPrivilegeContent")
}

func init() { proto.RegisterFile("membership/user_total_privilege.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 540 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x94, 0x4f, 0x6b, 0x1b, 0x3d,
	0x10, 0xc6, 0xb1, 0xb3, 0xfe, 0x37, 0x7e, 0x93, 0xbc, 0x15, 0xa5, 0x6c, 0x4b, 0x09, 0xc6, 0x34,
	0xe0, 0x4b, 0x6c, 0xda, 0x42, 0xe9, 0xad, 0xd4, 0x71, 0x0e, 0x06, 0x07, 0xc2, 0xc6, 0x26, 0xd0,
	0x4b, 0x90, 0xad, 0xe9, 0x5a, 0xd4, 0x2b, 0x2d, 0x5a, 0x39, 0xb4, 0x5f, 0xab, 0x1f, 0xa0, 0xd0,
	0x6f, 0x56, 0x34, 0x6b, 0x7b, 0xb5, 0x4e, 0x52, 0x7a, 0x69, 0x6f, 0x3b, 0x3f, 0x8d, 0x34, 0xcf,
	0x3c, 0x1a, 0x2d, 0x9c, 0x26, 0x98, 0xcc, 0xd1, 0x64, 0x4b, 0x99, 0x0e, 0xd6, 0x19, 0x9a, 0x5b,
	0xab, 0x2d, 0x5f, 0xdd, 0xa6, 0x46, 0xde, 0xc9, 0x15, 0xc6, 0xd8, 0x4f, 0x8d, 0xb6, 0x9a, 0x41,
	0x91, 0xd6, 0xb5, 0xd0, 0xbc, 0x46, 0x9c, 0xc8, 0x44, 0x5a, 0x76, 0x02, 0x30, 0x16, 0xa8, 0xac,
	0xfc, 0x2c, 0xd1, 0x84, 0x95, 0x4e, 0xa5, 0xd7, 0x8a, 0x3c, 0xc2, 0x9e, 0x42, 0x6d, 0xea, 0x0e,
	0x0c, 0xab, 0x9d, 0x4a, 0xaf, 0x16, 0xe5, 0x01, 0x7b, 0x09, 0xad, 0x08, 0x13, 0x2e, 0x95, 0x54,
	0x71, 0x78, 0x40, 0x2b, 0x05, 0x70, 0x7b, 0x22, 0xcc, 0xd0, 0x86, 0x41, 0xbe, 0x87, 0x82, 0xee,
	0xf7, 0x0a, 0xc0, 0x50, 0xeb, 0xcc, 0xfe, 0x59, 0xe1, 0x13, 0x80, 0xcb, 0xf5, 0xca, 0xca, 0x74,
	0xe5, 0xd6, 0xf3, 0xea, 0x1e, 0x61, 0x2f, 0xa0, 0x39, 0x5a, 0x1b, 0x6e, 0xa5, 0x56, 0x1b, 0x05,
	0xbb, 0xb8, 0x2c, 0x2f, 0x78, 0x40, 0x5e, 0xde, 0x52, 0xcd, 0x6f, 0x69, 0x27, 0xba, 0xee, 0x8b,
	0xfe, 0xb1, 0x15, 0x3d, 0xe4, 0x22, 0xc6, 0xbf, 0x2a, 0x7a, 0x27, 0x2b, 0x78, 0xd4, 0xe9, 0xda,
	0x7e, 0x2b, 0x1d, 0x68, 0x5f, 0x7c, 0x4d, 0xa5, 0xc1, 0x6c, 0x2a, 0x13, 0x24, 0xe9, 0x07, 0x91,
	0x8f, 0xba, 0x77, 0x00, 0x37, 0x4b, 0x3d, 0x91, 0x5f, 0x50, 0x5c, 0xe2, 0x3f, 0xbc, 0xed, 0x9f,
	0x01, 0xb0, 0x59, 0x86, 0x86, 0x4e, 0xb8, 0xda, 0x0e, 0x23, 0x3b, 0x82, 0xea, 0x58, 0x6c, 0x0a,
	0x57, 0xc7, 0x82, 0x3d, 0x83, 0xba, 0xcb, 0x1a, 0x8f, 0xa8, 0x62, 0x2b, 0xda, 0x44, 0xec, 0x15,
	0x1c, 0xee, 0x36, 0x4d, 0xbf, 0xa5, 0x48, 0x65, 0x5b, 0x51, 0x19, 0xee, 0xb5, 0x13, 0xdc, 0x6b,
	0xe7, 0x03, 0x34, 0xce, 0xb5, 0xb2, 0xa8, 0x2c, 0x59, 0xd7, 0x7e, 0x73, 0xda, 0x2f, 0x9e, 0x41,
	0xff, 0xbe, 0xbc, 0x4d, 0x72, 0xb4, 0xdd, 0xe5, 0x3a, 0x1f, 0x62, 0x2c, 0x95, 0xe7, 0x6e, 0x01,
	0x58, 0x08, 0x8d, 0x0b, 0x25, 0x68, 0xad, 0x41, 0x6b, 0xdb, 0xd0, 0xdd, 0x0b, 0xd9, 0x70, 0x85,
	0x46, 0x6a, 0x11, 0x36, 0xc9, 0x19, 0x1f, 0x15, 0x4e, 0xb7, 0x7c, 0xa7, 0x19, 0x04, 0xb3, 0x0c,
	0x45, 0x08, 0x04, 0xe9, 0xbb, 0xec, 0x7e, 0xfb, 0x81, 0x09, 0xa0, 0x63, 0xaf, 0x71, 0xa1, 0x95,
	0x08, 0xff, 0xf3, 0x2a, 0xe5, 0xc8, 0x59, 0x39, 0xe1, 0x99, 0x25, 0x44, 0x5a, 0x0f, 0x49, 0x6b,
	0x19, 0xba, 0xac, 0x8f, 0xd6, 0x1a, 0x39, 0x5f, 0xbb, 0x61, 0x1c, 0x8f, 0xc2, 0xa3, 0xdc, 0xf0,
	0x12, 0x64, 0x3d, 0x38, 0xf6, 0x00, 0x5d, 0xcc, 0x31, 0xe5, 0xed, 0x63, 0xa7, 0x6b, 0x96, 0x0a,
	0x6e, 0x31, 0xf7, 0xe7, 0xff, 0x7c, 0x32, 0x3d, 0xe4, 0x32, 0xce, 0x0d, 0xee, 0x32, 0x9e, 0xe4,
	0x19, 0x1e, 0xea, 0xde, 0xc0, 0xf3, 0x47, 0xef, 0x68, 0xef, 0xa9, 0x55, 0x7e, 0xfb, 0xd4, 0xaa,
	0xe5, 0xa7, 0x36, 0x7c, 0xff, 0xe9, 0x5d, 0x2c, 0xed, 0x72, 0x3d, 0xef, 0x2f, 0x74, 0x32, 0x48,
	0x5f, 0x2f, 0xd4, 0xc0, 0x72, 0x65, 0xb9, 0x3a, 0x13, 0xda, 0x19, 0x7b, 0x96, 0x2d, 0x96, 0x98,
	0xf0, 0x41, 0xac, 0x57, 0x5c, 0xc5, 0x83, 0x62, 0x66, 0xe6, 0x75, 0xfa, 0x9b, 0xbe, 0xfd, 0x15,
	0x00, 0x00, 0xff, 0xff, 0xd0, 0x4f, 0xea, 0x0c, 0x76, 0x05, 0x00, 0x00,
}
