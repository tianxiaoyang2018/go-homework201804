// Code generated by protoc-gen-go. DO NOT EDIT.
// source: membership/membership.proto

/*
Package membership is a generated protocol buffer package.

It is generated from these files:
	membership/membership.proto
	membership/membership.service.proto
	membership/user_total_privilege.proto
	membership/user_total_privilege.service.proto

It has these top-level messages:
	UserPrivilege
	UserPrivilegeUpdate
	Order
	Privileges
	Item
	ItemPricings
	ItemPricing
	AffiliateProducts
	AffiliateProduct
	Product
	ProductPrivileges
	PrivilegeBoostVip
	PrivilegeBoostBadge
	PrivilegeMembership
	PrivilegeLike
	PrivilegeUndo
	PrivilegeSuperLike
	PrivilegeBoost
	PrivilegeRoaming
	PrivilegeSeeWhoLikedMe
	PaymentChannelList
	TmTecSubTran
	TmTecTran
	MembershipCondition
	RevokeUserPrivilegeRequest
	RevokeUserPrivilegeReply
	UpdateUserProductPrivilegeRequest
	ProductPrivilegesReply
	UserPrivilegesReply
	UserPrivilegeReply
	FindUserPrivilegesByUserIdsRequest
	FindUserPrivilegesByUserIdsParams
	OrderRequest
	PrivilegesRequest
	OrderParams
	TmTecTranReply
	UpdateUserPrivilegeRequest
	UpdateUserPrivilegeParams
	InvalidateTokenRequest
	InvalidateTokenParams
	InvalidateTokenReply
	SeeLimit
	BoostLimit
	BoostBadge
	WhoLikedMe
	UserTotalPrivilege
	UserTotalPrivilegeContent
	GetUserPrivilegesForCountersRequest
	GetUserPrivilegesForCountersReply
	GiveBoostOnceByItemIDRequest
	GiveBoostOnceByItemIDReply
	FindUserTotalPrivilegeByAttributionRequest
	FindUserTotalPrivilegeByAttributionReply
	GetBoostRequest
	GetBoostReply
	GetBoostLimitRequest
	GetBoostLimitReply
	GetBoostVipRequest
	GetBoostVipReply
	GetBoostBadgeRequest
	GetBoostBadgeReply
	GetWhoLikedMeRequest
	GetWhoLikedMeReply
	UpdateUserTotalPrivilegeRequest
	UpdateUserTotalPrivilegeReply
*/
package membership

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UserPrivilege struct {
	UserID          string `protobuf:"bytes,1,opt,name=UserID" json:"UserID,omitempty"`
	SuperLikeQuota  int32  `protobuf:"varint,2,opt,name=SuperLikeQuota" json:"SuperLikeQuota,omitempty"`
	SuperLikeExpire int64  `protobuf:"varint,3,opt,name=SuperLikeExpire" json:"SuperLikeExpire,omitempty"`
	LikeQuota       int32  `protobuf:"varint,4,opt,name=LikeQuota" json:"LikeQuota,omitempty"`
	LikeExpire      int64  `protobuf:"varint,5,opt,name=LikeExpire" json:"LikeExpire,omitempty"`
	UndoQuota       int32  `protobuf:"varint,6,opt,name=UndoQuota" json:"UndoQuota,omitempty"`
	UndoExpire      int64  `protobuf:"varint,7,opt,name=UndoExpire" json:"UndoExpire,omitempty"`
	RoamingLimit    int32  `protobuf:"varint,8,opt,name=RoamingLimit" json:"RoamingLimit,omitempty"`
	RoamingExpire   int64  `protobuf:"varint,9,opt,name=RoamingExpire" json:"RoamingExpire,omitempty"`
}

func (m *UserPrivilege) Reset()                    { *m = UserPrivilege{} }
func (m *UserPrivilege) String() string            { return proto.CompactTextString(m) }
func (*UserPrivilege) ProtoMessage()               {}
func (*UserPrivilege) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UserPrivilege) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *UserPrivilege) GetSuperLikeQuota() int32 {
	if m != nil {
		return m.SuperLikeQuota
	}
	return 0
}

func (m *UserPrivilege) GetSuperLikeExpire() int64 {
	if m != nil {
		return m.SuperLikeExpire
	}
	return 0
}

func (m *UserPrivilege) GetLikeQuota() int32 {
	if m != nil {
		return m.LikeQuota
	}
	return 0
}

func (m *UserPrivilege) GetLikeExpire() int64 {
	if m != nil {
		return m.LikeExpire
	}
	return 0
}

func (m *UserPrivilege) GetUndoQuota() int32 {
	if m != nil {
		return m.UndoQuota
	}
	return 0
}

func (m *UserPrivilege) GetUndoExpire() int64 {
	if m != nil {
		return m.UndoExpire
	}
	return 0
}

func (m *UserPrivilege) GetRoamingLimit() int32 {
	if m != nil {
		return m.RoamingLimit
	}
	return 0
}

func (m *UserPrivilege) GetRoamingExpire() int64 {
	if m != nil {
		return m.RoamingExpire
	}
	return 0
}

type UserPrivilegeUpdate struct {
	TransactionId   string `protobuf:"bytes,1,opt,name=TransactionId" json:"TransactionId,omitempty"`
	UserID          string `protobuf:"bytes,2,opt,name=UserID" json:"UserID,omitempty"`
	SuperLikeQuota  int32  `protobuf:"varint,3,opt,name=SuperLikeQuota" json:"SuperLikeQuota,omitempty"`
	LikeQuota       int32  `protobuf:"varint,4,opt,name=LikeQuota" json:"LikeQuota,omitempty"`
	UndoQuota       int32  `protobuf:"varint,5,opt,name=UndoQuota" json:"UndoQuota,omitempty"`
	RoamingLimit    int32  `protobuf:"varint,6,opt,name=RoamingLimit" json:"RoamingLimit,omitempty"`
	BoostMultiplier int32  `protobuf:"varint,7,opt,name=BoostMultiplier" json:"BoostMultiplier,omitempty"`
	Expire          int64  `protobuf:"varint,8,opt,name=Expire" json:"Expire,omitempty"`
}

func (m *UserPrivilegeUpdate) Reset()                    { *m = UserPrivilegeUpdate{} }
func (m *UserPrivilegeUpdate) String() string            { return proto.CompactTextString(m) }
func (*UserPrivilegeUpdate) ProtoMessage()               {}
func (*UserPrivilegeUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UserPrivilegeUpdate) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *UserPrivilegeUpdate) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *UserPrivilegeUpdate) GetSuperLikeQuota() int32 {
	if m != nil {
		return m.SuperLikeQuota
	}
	return 0
}

func (m *UserPrivilegeUpdate) GetLikeQuota() int32 {
	if m != nil {
		return m.LikeQuota
	}
	return 0
}

func (m *UserPrivilegeUpdate) GetUndoQuota() int32 {
	if m != nil {
		return m.UndoQuota
	}
	return 0
}

func (m *UserPrivilegeUpdate) GetRoamingLimit() int32 {
	if m != nil {
		return m.RoamingLimit
	}
	return 0
}

func (m *UserPrivilegeUpdate) GetBoostMultiplier() int32 {
	if m != nil {
		return m.BoostMultiplier
	}
	return 0
}

func (m *UserPrivilegeUpdate) GetExpire() int64 {
	if m != nil {
		return m.Expire
	}
	return 0
}

type Order struct {
	ID                    string              `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	UserID                string              `protobuf:"bytes,2,opt,name=UserID" json:"UserID,omitempty"`
	Identifier            string              `protobuf:"bytes,3,opt,name=Identifier" json:"Identifier,omitempty"`
	ItemID                string              `protobuf:"bytes,4,opt,name=ItemID" json:"ItemID,omitempty"`
	ProductIDs            []string            `protobuf:"bytes,5,rep,name=ProductIDs" json:"ProductIDs,omitempty"`
	Quantity              int32               `protobuf:"varint,6,opt,name=Quantity" json:"Quantity,omitempty"`
	Duration              int64               `protobuf:"varint,7,opt,name=Duration" json:"Duration,omitempty"`
	Item                  *Item               `protobuf:"bytes,8,opt,name=Item" json:"Item,omitempty"`
	Products              []*Product          `protobuf:"bytes,9,rep,name=Products" json:"Products,omitempty"`
	ProductType           string              `protobuf:"bytes,10,opt,name=ProductType" json:"ProductType,omitempty"`
	AffiliateProductId    string              `protobuf:"bytes,11,opt,name=AffiliateProductId" json:"AffiliateProductId,omitempty"`
	Amount                float64             `protobuf:"fixed64,12,opt,name=Amount" json:"Amount,omitempty"`
	CurrencyCode          string              `protobuf:"bytes,13,opt,name=CurrencyCode" json:"CurrencyCode,omitempty"`
	PaymentChannelList    *PaymentChannelList `protobuf:"bytes,14,opt,name=PaymentChannelList" json:"PaymentChannelList,omitempty"`
	ExpireTime            int64               `protobuf:"varint,15,opt,name=ExpireTime" json:"ExpireTime,omitempty"`
	Platform              string              `protobuf:"bytes,16,opt,name=Platform" json:"Platform,omitempty"`
	PlatformUserID        string              `protobuf:"bytes,17,opt,name=PlatformUserID" json:"PlatformUserID,omitempty"`
	TransactionID         string              `protobuf:"bytes,18,opt,name=TransactionID" json:"TransactionID,omitempty"`
	OriginalTransactionID string              `protobuf:"bytes,19,opt,name=OriginalTransactionID" json:"OriginalTransactionID,omitempty"`
	OrderStatus           string              `protobuf:"bytes,20,opt,name=OrderStatus" json:"OrderStatus,omitempty"`
	Processed             bool                `protobuf:"varint,21,opt,name=Processed" json:"Processed,omitempty"`
	ProcessedTime         int64               `protobuf:"varint,22,opt,name=ProcessedTime" json:"ProcessedTime,omitempty"`
	Status                string              `protobuf:"bytes,23,opt,name=Status" json:"Status,omitempty"`
	UpdatedTime           int64               `protobuf:"varint,24,opt,name=UpdatedTime" json:"UpdatedTime,omitempty"`
	CreatedTime           int64               `protobuf:"varint,25,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Order) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Order) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Order) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Order) GetItemID() string {
	if m != nil {
		return m.ItemID
	}
	return ""
}

func (m *Order) GetProductIDs() []string {
	if m != nil {
		return m.ProductIDs
	}
	return nil
}

func (m *Order) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Order) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Order) GetItem() *Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *Order) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *Order) GetProductType() string {
	if m != nil {
		return m.ProductType
	}
	return ""
}

func (m *Order) GetAffiliateProductId() string {
	if m != nil {
		return m.AffiliateProductId
	}
	return ""
}

func (m *Order) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Order) GetCurrencyCode() string {
	if m != nil {
		return m.CurrencyCode
	}
	return ""
}

func (m *Order) GetPaymentChannelList() *PaymentChannelList {
	if m != nil {
		return m.PaymentChannelList
	}
	return nil
}

func (m *Order) GetExpireTime() int64 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

func (m *Order) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *Order) GetPlatformUserID() string {
	if m != nil {
		return m.PlatformUserID
	}
	return ""
}

func (m *Order) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

func (m *Order) GetOriginalTransactionID() string {
	if m != nil {
		return m.OriginalTransactionID
	}
	return ""
}

func (m *Order) GetOrderStatus() string {
	if m != nil {
		return m.OrderStatus
	}
	return ""
}

func (m *Order) GetProcessed() bool {
	if m != nil {
		return m.Processed
	}
	return false
}

func (m *Order) GetProcessedTime() int64 {
	if m != nil {
		return m.ProcessedTime
	}
	return 0
}

func (m *Order) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Order) GetUpdatedTime() int64 {
	if m != nil {
		return m.UpdatedTime
	}
	return 0
}

func (m *Order) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

type Privileges struct {
	ID                    string              `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	UserID                string              `protobuf:"bytes,2,opt,name=UserID" json:"UserID,omitempty"`
	Identifier            string              `protobuf:"bytes,3,opt,name=Identifier" json:"Identifier,omitempty"`
	ItemID                string              `protobuf:"bytes,4,opt,name=ItemID" json:"ItemID,omitempty"`
	ProductIDs            []string            `protobuf:"bytes,5,rep,name=ProductIDs" json:"ProductIDs,omitempty"`
	Quantity              int32               `protobuf:"varint,6,opt,name=Quantity" json:"Quantity,omitempty"`
	Duration              int64               `protobuf:"varint,7,opt,name=Duration" json:"Duration,omitempty"`
	Item                  *Item               `protobuf:"bytes,8,opt,name=Item" json:"Item,omitempty"`
	Products              []*Product          `protobuf:"bytes,9,rep,name=Products" json:"Products,omitempty"`
	ProductType           string              `protobuf:"bytes,10,opt,name=ProductType" json:"ProductType,omitempty"`
	AffiliateProductId    string              `protobuf:"bytes,11,opt,name=AffiliateProductId" json:"AffiliateProductId,omitempty"`
	Amount                float64             `protobuf:"fixed64,12,opt,name=Amount" json:"Amount,omitempty"`
	CurrencyCode          string              `protobuf:"bytes,13,opt,name=CurrencyCode" json:"CurrencyCode,omitempty"`
	PaymentChannelList    *PaymentChannelList `protobuf:"bytes,14,opt,name=PaymentChannelList" json:"PaymentChannelList,omitempty"`
	ExpireTime            int64               `protobuf:"varint,15,opt,name=ExpireTime" json:"ExpireTime,omitempty"`
	Platform              string              `protobuf:"bytes,16,opt,name=Platform" json:"Platform,omitempty"`
	PlatformUserID        string              `protobuf:"bytes,17,opt,name=PlatformUserID" json:"PlatformUserID,omitempty"`
	TransactionID         string              `protobuf:"bytes,18,opt,name=TransactionID" json:"TransactionID,omitempty"`
	OriginalTransactionID string              `protobuf:"bytes,19,opt,name=OriginalTransactionID" json:"OriginalTransactionID,omitempty"`
	OrderStatus           string              `protobuf:"bytes,20,opt,name=OrderStatus" json:"OrderStatus,omitempty"`
	Processed             bool                `protobuf:"varint,21,opt,name=Processed" json:"Processed,omitempty"`
	ProcessedTime         int64               `protobuf:"varint,22,opt,name=ProcessedTime" json:"ProcessedTime,omitempty"`
	Status                string              `protobuf:"bytes,23,opt,name=Status" json:"Status,omitempty"`
	UpdatedTime           int64               `protobuf:"varint,24,opt,name=UpdatedTime" json:"UpdatedTime,omitempty"`
	CreatedTime           int64               `protobuf:"varint,25,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	AttributeType         string              `protobuf:"bytes,26,opt,name=AttributeType" json:"AttributeType,omitempty"`
}

func (m *Privileges) Reset()                    { *m = Privileges{} }
func (m *Privileges) String() string            { return proto.CompactTextString(m) }
func (*Privileges) ProtoMessage()               {}
func (*Privileges) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Privileges) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Privileges) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Privileges) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Privileges) GetItemID() string {
	if m != nil {
		return m.ItemID
	}
	return ""
}

func (m *Privileges) GetProductIDs() []string {
	if m != nil {
		return m.ProductIDs
	}
	return nil
}

func (m *Privileges) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Privileges) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Privileges) GetItem() *Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *Privileges) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *Privileges) GetProductType() string {
	if m != nil {
		return m.ProductType
	}
	return ""
}

func (m *Privileges) GetAffiliateProductId() string {
	if m != nil {
		return m.AffiliateProductId
	}
	return ""
}

func (m *Privileges) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Privileges) GetCurrencyCode() string {
	if m != nil {
		return m.CurrencyCode
	}
	return ""
}

func (m *Privileges) GetPaymentChannelList() *PaymentChannelList {
	if m != nil {
		return m.PaymentChannelList
	}
	return nil
}

func (m *Privileges) GetExpireTime() int64 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

func (m *Privileges) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *Privileges) GetPlatformUserID() string {
	if m != nil {
		return m.PlatformUserID
	}
	return ""
}

func (m *Privileges) GetTransactionID() string {
	if m != nil {
		return m.TransactionID
	}
	return ""
}

func (m *Privileges) GetOriginalTransactionID() string {
	if m != nil {
		return m.OriginalTransactionID
	}
	return ""
}

func (m *Privileges) GetOrderStatus() string {
	if m != nil {
		return m.OrderStatus
	}
	return ""
}

func (m *Privileges) GetProcessed() bool {
	if m != nil {
		return m.Processed
	}
	return false
}

func (m *Privileges) GetProcessedTime() int64 {
	if m != nil {
		return m.ProcessedTime
	}
	return 0
}

func (m *Privileges) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Privileges) GetUpdatedTime() int64 {
	if m != nil {
		return m.UpdatedTime
	}
	return 0
}

func (m *Privileges) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *Privileges) GetAttributeType() string {
	if m != nil {
		return m.AttributeType
	}
	return ""
}

type Item struct {
	Id                string             `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	Name              string             `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	ProductIds        []string           `protobuf:"bytes,3,rep,name=ProductIds" json:"ProductIds,omitempty"`
	Quantity          int32              `protobuf:"varint,4,opt,name=Quantity" json:"Quantity,omitempty"`
	Duration          int64              `protobuf:"varint,5,opt,name=Duration" json:"Duration,omitempty"`
	Pricing           *ItemPricings      `protobuf:"bytes,6,opt,name=Pricing" json:"Pricing,omitempty"`
	AffiliateProducts *AffiliateProducts `protobuf:"bytes,7,opt,name=AffiliateProducts" json:"AffiliateProducts,omitempty"`
	Status            string             `protobuf:"bytes,8,opt,name=Status" json:"Status,omitempty"`
	CreatedTime       int64              `protobuf:"varint,9,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Item) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Item) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Item) GetProductIds() []string {
	if m != nil {
		return m.ProductIds
	}
	return nil
}

func (m *Item) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Item) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Item) GetPricing() *ItemPricings {
	if m != nil {
		return m.Pricing
	}
	return nil
}

func (m *Item) GetAffiliateProducts() *AffiliateProducts {
	if m != nil {
		return m.AffiliateProducts
	}
	return nil
}

func (m *Item) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Item) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

type ItemPricings struct {
	CNY *ItemPricing `protobuf:"bytes,1,opt,name=CNY" json:"CNY,omitempty"`
	USD *ItemPricing `protobuf:"bytes,2,opt,name=USD" json:"USD,omitempty"`
}

func (m *ItemPricings) Reset()                    { *m = ItemPricings{} }
func (m *ItemPricings) String() string            { return proto.CompactTextString(m) }
func (*ItemPricings) ProtoMessage()               {}
func (*ItemPricings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ItemPricings) GetCNY() *ItemPricing {
	if m != nil {
		return m.CNY
	}
	return nil
}

func (m *ItemPricings) GetUSD() *ItemPricing {
	if m != nil {
		return m.USD
	}
	return nil
}

type ItemPricing struct {
	CurrencyCode   string  `protobuf:"bytes,1,opt,name=CurrencyCode" json:"CurrencyCode,omitempty"`
	CurrencySymbol string  `protobuf:"bytes,2,opt,name=CurrencySymbol" json:"CurrencySymbol,omitempty"`
	Price          float64 `protobuf:"fixed64,3,opt,name=Price" json:"Price,omitempty"`
	UnitPeriod     int64   `protobuf:"varint,4,opt,name=UnitPeriod" json:"UnitPeriod,omitempty"`
	UnitPrice      float64 `protobuf:"fixed64,5,opt,name=UnitPrice" json:"UnitPrice,omitempty"`
	DiscountPrice  float64 `protobuf:"fixed64,6,opt,name=DiscountPrice" json:"DiscountPrice,omitempty"`
	Discount       float64 `protobuf:"fixed64,7,opt,name=Discount" json:"Discount,omitempty"`
}

func (m *ItemPricing) Reset()                    { *m = ItemPricing{} }
func (m *ItemPricing) String() string            { return proto.CompactTextString(m) }
func (*ItemPricing) ProtoMessage()               {}
func (*ItemPricing) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ItemPricing) GetCurrencyCode() string {
	if m != nil {
		return m.CurrencyCode
	}
	return ""
}

func (m *ItemPricing) GetCurrencySymbol() string {
	if m != nil {
		return m.CurrencySymbol
	}
	return ""
}

func (m *ItemPricing) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *ItemPricing) GetUnitPeriod() int64 {
	if m != nil {
		return m.UnitPeriod
	}
	return 0
}

func (m *ItemPricing) GetUnitPrice() float64 {
	if m != nil {
		return m.UnitPrice
	}
	return 0
}

func (m *ItemPricing) GetDiscountPrice() float64 {
	if m != nil {
		return m.DiscountPrice
	}
	return 0
}

func (m *ItemPricing) GetDiscount() float64 {
	if m != nil {
		return m.Discount
	}
	return 0
}

type AffiliateProducts struct {
	Alipay   *AffiliateProduct `protobuf:"bytes,1,opt,name=Alipay" json:"Alipay,omitempty"`
	AppStore *AffiliateProduct `protobuf:"bytes,2,opt,name=AppStore" json:"AppStore,omitempty"`
	Wechat   *AffiliateProduct `protobuf:"bytes,3,opt,name=Wechat" json:"Wechat,omitempty"`
}

func (m *AffiliateProducts) Reset()                    { *m = AffiliateProducts{} }
func (m *AffiliateProducts) String() string            { return proto.CompactTextString(m) }
func (*AffiliateProducts) ProtoMessage()               {}
func (*AffiliateProducts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AffiliateProducts) GetAlipay() *AffiliateProduct {
	if m != nil {
		return m.Alipay
	}
	return nil
}

func (m *AffiliateProducts) GetAppStore() *AffiliateProduct {
	if m != nil {
		return m.AppStore
	}
	return nil
}

func (m *AffiliateProducts) GetWechat() *AffiliateProduct {
	if m != nil {
		return m.Wechat
	}
	return nil
}

type AffiliateProduct struct {
	AutoRenewable string `protobuf:"bytes,1,opt,name=AutoRenewable" json:"AutoRenewable,omitempty"`
	NonRenewing   string `protobuf:"bytes,2,opt,name=NonRenewing" json:"NonRenewing,omitempty"`
	Consumable    string `protobuf:"bytes,3,opt,name=Consumable" json:"Consumable,omitempty"`
	NonConsumable string `protobuf:"bytes,4,opt,name=NonConsumable" json:"NonConsumable,omitempty"`
}

func (m *AffiliateProduct) Reset()                    { *m = AffiliateProduct{} }
func (m *AffiliateProduct) String() string            { return proto.CompactTextString(m) }
func (*AffiliateProduct) ProtoMessage()               {}
func (*AffiliateProduct) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *AffiliateProduct) GetAutoRenewable() string {
	if m != nil {
		return m.AutoRenewable
	}
	return ""
}

func (m *AffiliateProduct) GetNonRenewing() string {
	if m != nil {
		return m.NonRenewing
	}
	return ""
}

func (m *AffiliateProduct) GetConsumable() string {
	if m != nil {
		return m.Consumable
	}
	return ""
}

func (m *AffiliateProduct) GetNonConsumable() string {
	if m != nil {
		return m.NonConsumable
	}
	return ""
}

type Product struct {
	Id          string             `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	Name        string             `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	ProductType string             `protobuf:"bytes,3,opt,name=ProductType" json:"ProductType,omitempty"`
	Identifier  string             `protobuf:"bytes,4,opt,name=Identifier" json:"Identifier,omitempty"`
	Privileges  *ProductPrivileges `protobuf:"bytes,5,opt,name=Privileges" json:"Privileges,omitempty"`
	Status      string             `protobuf:"bytes,6,opt,name=Status" json:"Status,omitempty"`
	CreatedTime int64              `protobuf:"varint,7,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
}

func (m *Product) Reset()                    { *m = Product{} }
func (m *Product) String() string            { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()               {}
func (*Product) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Product) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetProductType() string {
	if m != nil {
		return m.ProductType
	}
	return ""
}

func (m *Product) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Product) GetPrivileges() *ProductPrivileges {
	if m != nil {
		return m.Privileges
	}
	return nil
}

func (m *Product) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Product) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

type ProductPrivileges struct {
	Membership    *PrivilegeMembership    `protobuf:"bytes,1,opt,name=Membership" json:"Membership,omitempty"`
	Like          *PrivilegeLike          `protobuf:"bytes,2,opt,name=Like" json:"Like,omitempty"`
	Undo          *PrivilegeUndo          `protobuf:"bytes,3,opt,name=Undo" json:"Undo,omitempty"`
	SuperLike     *PrivilegeSuperLike     `protobuf:"bytes,4,opt,name=SuperLike" json:"SuperLike,omitempty"`
	Boost         *PrivilegeBoost         `protobuf:"bytes,5,opt,name=Boost" json:"Boost,omitempty"`
	Roaming       *PrivilegeRoaming       `protobuf:"bytes,6,opt,name=Roaming" json:"Roaming,omitempty"`
	SeeWhoLikedMe *PrivilegeSeeWhoLikedMe `protobuf:"bytes,7,opt,name=SeeWhoLikedMe" json:"SeeWhoLikedMe,omitempty"`
	BoostBadge    *PrivilegeBoostBadge    `protobuf:"bytes,8,opt,name=BoostBadge" json:"BoostBadge,omitempty"`
	BoostVip      *PrivilegeBoostVip      `protobuf:"bytes,9,opt,name=BoostVip" json:"BoostVip,omitempty"`
}

func (m *ProductPrivileges) Reset()                    { *m = ProductPrivileges{} }
func (m *ProductPrivileges) String() string            { return proto.CompactTextString(m) }
func (*ProductPrivileges) ProtoMessage()               {}
func (*ProductPrivileges) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ProductPrivileges) GetMembership() *PrivilegeMembership {
	if m != nil {
		return m.Membership
	}
	return nil
}

func (m *ProductPrivileges) GetLike() *PrivilegeLike {
	if m != nil {
		return m.Like
	}
	return nil
}

func (m *ProductPrivileges) GetUndo() *PrivilegeUndo {
	if m != nil {
		return m.Undo
	}
	return nil
}

func (m *ProductPrivileges) GetSuperLike() *PrivilegeSuperLike {
	if m != nil {
		return m.SuperLike
	}
	return nil
}

func (m *ProductPrivileges) GetBoost() *PrivilegeBoost {
	if m != nil {
		return m.Boost
	}
	return nil
}

func (m *ProductPrivileges) GetRoaming() *PrivilegeRoaming {
	if m != nil {
		return m.Roaming
	}
	return nil
}

func (m *ProductPrivileges) GetSeeWhoLikedMe() *PrivilegeSeeWhoLikedMe {
	if m != nil {
		return m.SeeWhoLikedMe
	}
	return nil
}

func (m *ProductPrivileges) GetBoostBadge() *PrivilegeBoostBadge {
	if m != nil {
		return m.BoostBadge
	}
	return nil
}

func (m *ProductPrivileges) GetBoostVip() *PrivilegeBoostVip {
	if m != nil {
		return m.BoostVip
	}
	return nil
}

// PrivilegeBoostVip BoostVip特权
type PrivilegeBoostVip struct {
	Identifier string `protobuf:"bytes,1,opt,name=Identifier" json:"Identifier,omitempty"`
}

func (m *PrivilegeBoostVip) Reset()                    { *m = PrivilegeBoostVip{} }
func (m *PrivilegeBoostVip) String() string            { return proto.CompactTextString(m) }
func (*PrivilegeBoostVip) ProtoMessage()               {}
func (*PrivilegeBoostVip) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *PrivilegeBoostVip) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

type PrivilegeBoostBadge struct {
	PrivilegeType string `protobuf:"bytes,1,opt,name=PrivilegeType" json:"PrivilegeType,omitempty"`
	Identifier    string `protobuf:"bytes,2,opt,name=Identifier" json:"Identifier,omitempty"`
	Multiplier    int32  `protobuf:"varint,3,opt,name=Multiplier" json:"Multiplier,omitempty"`
	Duration      int32  `protobuf:"varint,4,opt,name=Duration" json:"Duration,omitempty"`
}

func (m *PrivilegeBoostBadge) Reset()                    { *m = PrivilegeBoostBadge{} }
func (m *PrivilegeBoostBadge) String() string            { return proto.CompactTextString(m) }
func (*PrivilegeBoostBadge) ProtoMessage()               {}
func (*PrivilegeBoostBadge) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *PrivilegeBoostBadge) GetPrivilegeType() string {
	if m != nil {
		return m.PrivilegeType
	}
	return ""
}

func (m *PrivilegeBoostBadge) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *PrivilegeBoostBadge) GetMultiplier() int32 {
	if m != nil {
		return m.Multiplier
	}
	return 0
}

func (m *PrivilegeBoostBadge) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

type PrivilegeMembership struct {
	Name  string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Level int32  `protobuf:"varint,2,opt,name=Level" json:"Level,omitempty"`
}

func (m *PrivilegeMembership) Reset()                    { *m = PrivilegeMembership{} }
func (m *PrivilegeMembership) String() string            { return proto.CompactTextString(m) }
func (*PrivilegeMembership) ProtoMessage()               {}
func (*PrivilegeMembership) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *PrivilegeMembership) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PrivilegeMembership) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type PrivilegeLike struct {
	Total  int32 `protobuf:"varint,1,opt,name=Total" json:"Total,omitempty"`
	Reset_ int32 `protobuf:"varint,2,opt,name=Reset" json:"Reset,omitempty"`
}

func (m *PrivilegeLike) Reset()                    { *m = PrivilegeLike{} }
func (m *PrivilegeLike) String() string            { return proto.CompactTextString(m) }
func (*PrivilegeLike) ProtoMessage()               {}
func (*PrivilegeLike) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *PrivilegeLike) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PrivilegeLike) GetReset_() int32 {
	if m != nil {
		return m.Reset_
	}
	return 0
}

type PrivilegeUndo struct {
	Total  int32 `protobuf:"varint,1,opt,name=Total" json:"Total,omitempty"`
	Reset_ int32 `protobuf:"varint,2,opt,name=Reset" json:"Reset,omitempty"`
}

func (m *PrivilegeUndo) Reset()                    { *m = PrivilegeUndo{} }
func (m *PrivilegeUndo) String() string            { return proto.CompactTextString(m) }
func (*PrivilegeUndo) ProtoMessage()               {}
func (*PrivilegeUndo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *PrivilegeUndo) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PrivilegeUndo) GetReset_() int32 {
	if m != nil {
		return m.Reset_
	}
	return 0
}

type PrivilegeSuperLike struct {
	Quota  int32 `protobuf:"varint,1,opt,name=Quota" json:"Quota,omitempty"`
	Reset_ int32 `protobuf:"varint,2,opt,name=Reset" json:"Reset,omitempty"`
}

func (m *PrivilegeSuperLike) Reset()                    { *m = PrivilegeSuperLike{} }
func (m *PrivilegeSuperLike) String() string            { return proto.CompactTextString(m) }
func (*PrivilegeSuperLike) ProtoMessage()               {}
func (*PrivilegeSuperLike) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *PrivilegeSuperLike) GetQuota() int32 {
	if m != nil {
		return m.Quota
	}
	return 0
}

func (m *PrivilegeSuperLike) GetReset_() int32 {
	if m != nil {
		return m.Reset_
	}
	return 0
}

type PrivilegeBoost struct {
	Multiplier    int32  `protobuf:"varint,1,opt,name=Multiplier" json:"Multiplier,omitempty"`
	Duration      int32  `protobuf:"varint,2,opt,name=Duration" json:"Duration,omitempty"`
	Quota         int32  `protobuf:"varint,3,opt,name=Quota" json:"Quota,omitempty"`
	Reset_        int32  `protobuf:"varint,4,opt,name=Reset" json:"Reset,omitempty"`
	PrivilegeType string `protobuf:"bytes,5,opt,name=PrivilegeType" json:"PrivilegeType,omitempty"`
	Identifier    string `protobuf:"bytes,6,opt,name=Identifier" json:"Identifier,omitempty"`
}

func (m *PrivilegeBoost) Reset()                    { *m = PrivilegeBoost{} }
func (m *PrivilegeBoost) String() string            { return proto.CompactTextString(m) }
func (*PrivilegeBoost) ProtoMessage()               {}
func (*PrivilegeBoost) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *PrivilegeBoost) GetMultiplier() int32 {
	if m != nil {
		return m.Multiplier
	}
	return 0
}

func (m *PrivilegeBoost) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *PrivilegeBoost) GetQuota() int32 {
	if m != nil {
		return m.Quota
	}
	return 0
}

func (m *PrivilegeBoost) GetReset_() int32 {
	if m != nil {
		return m.Reset_
	}
	return 0
}

func (m *PrivilegeBoost) GetPrivilegeType() string {
	if m != nil {
		return m.PrivilegeType
	}
	return ""
}

func (m *PrivilegeBoost) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

type PrivilegeRoaming struct {
	Total    int32 `protobuf:"varint,1,opt,name=Total" json:"Total,omitempty"`
	Duration int32 `protobuf:"varint,2,opt,name=Duration" json:"Duration,omitempty"`
	Reset_   int32 `protobuf:"varint,3,opt,name=Reset" json:"Reset,omitempty"`
}

func (m *PrivilegeRoaming) Reset()                    { *m = PrivilegeRoaming{} }
func (m *PrivilegeRoaming) String() string            { return proto.CompactTextString(m) }
func (*PrivilegeRoaming) ProtoMessage()               {}
func (*PrivilegeRoaming) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *PrivilegeRoaming) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PrivilegeRoaming) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *PrivilegeRoaming) GetReset_() int32 {
	if m != nil {
		return m.Reset_
	}
	return 0
}

type PrivilegeSeeWhoLikedMe struct {
	PrivilegeType string `protobuf:"bytes,1,opt,name=PrivilegeType" json:"PrivilegeType,omitempty"`
	Identifier    string `protobuf:"bytes,2,opt,name=Identifier" json:"Identifier,omitempty"`
	Total         int32  `protobuf:"varint,3,opt,name=Total" json:"Total,omitempty"`
}

func (m *PrivilegeSeeWhoLikedMe) Reset()                    { *m = PrivilegeSeeWhoLikedMe{} }
func (m *PrivilegeSeeWhoLikedMe) String() string            { return proto.CompactTextString(m) }
func (*PrivilegeSeeWhoLikedMe) ProtoMessage()               {}
func (*PrivilegeSeeWhoLikedMe) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *PrivilegeSeeWhoLikedMe) GetPrivilegeType() string {
	if m != nil {
		return m.PrivilegeType
	}
	return ""
}

func (m *PrivilegeSeeWhoLikedMe) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *PrivilegeSeeWhoLikedMe) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type PaymentChannelList struct {
	Amount      string `protobuf:"bytes,1,opt,name=Amount" json:"Amount,omitempty"`
	FundChannel string `protobuf:"bytes,2,opt,name=FundChannel" json:"FundChannel,omitempty"`
}

func (m *PaymentChannelList) Reset()                    { *m = PaymentChannelList{} }
func (m *PaymentChannelList) String() string            { return proto.CompactTextString(m) }
func (*PaymentChannelList) ProtoMessage()               {}
func (*PaymentChannelList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *PaymentChannelList) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *PaymentChannelList) GetFundChannel() string {
	if m != nil {
		return m.FundChannel
	}
	return ""
}

type TmTecSubTran struct {
	Id          string `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	ParentID    string `protobuf:"bytes,2,opt,name=ParentID" json:"ParentID,omitempty"`
	Service     string `protobuf:"bytes,3,opt,name=Service" json:"Service,omitempty"`
	Interface   string `protobuf:"bytes,4,opt,name=Interface" json:"Interface,omitempty"`
	Parameters  string `protobuf:"bytes,5,opt,name=Parameters" json:"Parameters,omitempty"`
	CreatedTime int64  `protobuf:"varint,6,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	UpdatedTime int64  `protobuf:"varint,7,opt,name=UpdatedTime" json:"UpdatedTime,omitempty"`
	Status      string `protobuf:"bytes,8,opt,name=Status" json:"Status,omitempty"`
}

func (m *TmTecSubTran) Reset()                    { *m = TmTecSubTran{} }
func (m *TmTecSubTran) String() string            { return proto.CompactTextString(m) }
func (*TmTecSubTran) ProtoMessage()               {}
func (*TmTecSubTran) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *TmTecSubTran) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TmTecSubTran) GetParentID() string {
	if m != nil {
		return m.ParentID
	}
	return ""
}

func (m *TmTecSubTran) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *TmTecSubTran) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *TmTecSubTran) GetParameters() string {
	if m != nil {
		return m.Parameters
	}
	return ""
}

func (m *TmTecSubTran) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *TmTecSubTran) GetUpdatedTime() int64 {
	if m != nil {
		return m.UpdatedTime
	}
	return 0
}

func (m *TmTecSubTran) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type TmTecTran struct {
	Id              string          `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	ParentID        string          `protobuf:"bytes,2,opt,name=ParentID" json:"ParentID,omitempty"`
	Subs            []*TmTecSubTran `protobuf:"bytes,3,rep,name=Subs" json:"Subs,omitempty"`
	Order           bool            `protobuf:"varint,4,opt,name=Order" json:"Order,omitempty"`
	RetryDuration   int32           `protobuf:"varint,5,opt,name=RetryDuration" json:"RetryDuration,omitempty"`
	Caller          string          `protobuf:"bytes,6,opt,name=Caller" json:"Caller,omitempty"`
	TryTimes        int32           `protobuf:"varint,7,opt,name=TryTimes" json:"TryTimes,omitempty"`
	UpdatedTime     int64           `protobuf:"varint,8,opt,name=UpdatedTime" json:"UpdatedTime,omitempty"`
	CreatedTime     int64           `protobuf:"varint,9,opt,name=CreatedTime" json:"CreatedTime,omitempty"`
	Status          string          `protobuf:"bytes,10,opt,name=Status" json:"Status,omitempty"`
	AlreadyInserted bool            `protobuf:"varint,11,opt,name=AlreadyInserted" json:"AlreadyInserted,omitempty"`
}

func (m *TmTecTran) Reset()                    { *m = TmTecTran{} }
func (m *TmTecTran) String() string            { return proto.CompactTextString(m) }
func (*TmTecTran) ProtoMessage()               {}
func (*TmTecTran) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *TmTecTran) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TmTecTran) GetParentID() string {
	if m != nil {
		return m.ParentID
	}
	return ""
}

func (m *TmTecTran) GetSubs() []*TmTecSubTran {
	if m != nil {
		return m.Subs
	}
	return nil
}

func (m *TmTecTran) GetOrder() bool {
	if m != nil {
		return m.Order
	}
	return false
}

func (m *TmTecTran) GetRetryDuration() int32 {
	if m != nil {
		return m.RetryDuration
	}
	return 0
}

func (m *TmTecTran) GetCaller() string {
	if m != nil {
		return m.Caller
	}
	return ""
}

func (m *TmTecTran) GetTryTimes() int32 {
	if m != nil {
		return m.TryTimes
	}
	return 0
}

func (m *TmTecTran) GetUpdatedTime() int64 {
	if m != nil {
		return m.UpdatedTime
	}
	return 0
}

func (m *TmTecTran) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *TmTecTran) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TmTecTran) GetAlreadyInserted() bool {
	if m != nil {
		return m.AlreadyInserted
	}
	return false
}

type MembershipCondition struct {
	Id              string   `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	OtherIds        []string `protobuf:"bytes,2,rep,name=OtherIds" json:"OtherIds,omitempty"`
	UntilTime       int64    `protobuf:"varint,3,opt,name=UntilTime" json:"UntilTime,omitempty"`
	SinceTime       int64    `protobuf:"varint,4,opt,name=SinceTime" json:"SinceTime,omitempty"`
	UntilId         string   `protobuf:"bytes,5,opt,name=UntilId" json:"UntilId,omitempty"`
	SinceId         string   `protobuf:"bytes,6,opt,name=SinceId" json:"SinceId,omitempty"`
	Offset          int32    `protobuf:"varint,7,opt,name=Offset" json:"Offset,omitempty"`
	Limit           int32    `protobuf:"varint,8,opt,name=Limit" json:"Limit,omitempty"`
	Matched         bool     `protobuf:"varint,9,opt,name=Matched" json:"Matched,omitempty"`
	Gender          string   `protobuf:"bytes,10,opt,name=Gender" json:"Gender,omitempty"`
	Filter          string   `protobuf:"bytes,11,opt,name=Filter" json:"Filter,omitempty"`
	Search          string   `protobuf:"bytes,12,opt,name=Search" json:"Search,omitempty"`
	IncludeDeleted  bool     `protobuf:"varint,13,opt,name=IncludeDeleted" json:"IncludeDeleted,omitempty"`
	OrderByUnread   bool     `protobuf:"varint,14,opt,name=OrderByUnread" json:"OrderByUnread,omitempty"`
	ResourceOwnerId string   `protobuf:"bytes,15,opt,name=ResourceOwnerId" json:"ResourceOwnerId,omitempty"`
	Sort            string   `protobuf:"bytes,16,opt,name=Sort" json:"Sort,omitempty"`
}

func (m *MembershipCondition) Reset()                    { *m = MembershipCondition{} }
func (m *MembershipCondition) String() string            { return proto.CompactTextString(m) }
func (*MembershipCondition) ProtoMessage()               {}
func (*MembershipCondition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *MembershipCondition) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MembershipCondition) GetOtherIds() []string {
	if m != nil {
		return m.OtherIds
	}
	return nil
}

func (m *MembershipCondition) GetUntilTime() int64 {
	if m != nil {
		return m.UntilTime
	}
	return 0
}

func (m *MembershipCondition) GetSinceTime() int64 {
	if m != nil {
		return m.SinceTime
	}
	return 0
}

func (m *MembershipCondition) GetUntilId() string {
	if m != nil {
		return m.UntilId
	}
	return ""
}

func (m *MembershipCondition) GetSinceId() string {
	if m != nil {
		return m.SinceId
	}
	return ""
}

func (m *MembershipCondition) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *MembershipCondition) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *MembershipCondition) GetMatched() bool {
	if m != nil {
		return m.Matched
	}
	return false
}

func (m *MembershipCondition) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *MembershipCondition) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *MembershipCondition) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *MembershipCondition) GetIncludeDeleted() bool {
	if m != nil {
		return m.IncludeDeleted
	}
	return false
}

func (m *MembershipCondition) GetOrderByUnread() bool {
	if m != nil {
		return m.OrderByUnread
	}
	return false
}

func (m *MembershipCondition) GetResourceOwnerId() string {
	if m != nil {
		return m.ResourceOwnerId
	}
	return ""
}

func (m *MembershipCondition) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func init() {
	proto.RegisterType((*UserPrivilege)(nil), "membership.UserPrivilege")
	proto.RegisterType((*UserPrivilegeUpdate)(nil), "membership.UserPrivilegeUpdate")
	proto.RegisterType((*Order)(nil), "membership.Order")
	proto.RegisterType((*Privileges)(nil), "membership.Privileges")
	proto.RegisterType((*Item)(nil), "membership.Item")
	proto.RegisterType((*ItemPricings)(nil), "membership.ItemPricings")
	proto.RegisterType((*ItemPricing)(nil), "membership.ItemPricing")
	proto.RegisterType((*AffiliateProducts)(nil), "membership.AffiliateProducts")
	proto.RegisterType((*AffiliateProduct)(nil), "membership.AffiliateProduct")
	proto.RegisterType((*Product)(nil), "membership.Product")
	proto.RegisterType((*ProductPrivileges)(nil), "membership.ProductPrivileges")
	proto.RegisterType((*PrivilegeBoostVip)(nil), "membership.PrivilegeBoostVip")
	proto.RegisterType((*PrivilegeBoostBadge)(nil), "membership.PrivilegeBoostBadge")
	proto.RegisterType((*PrivilegeMembership)(nil), "membership.PrivilegeMembership")
	proto.RegisterType((*PrivilegeLike)(nil), "membership.PrivilegeLike")
	proto.RegisterType((*PrivilegeUndo)(nil), "membership.PrivilegeUndo")
	proto.RegisterType((*PrivilegeSuperLike)(nil), "membership.PrivilegeSuperLike")
	proto.RegisterType((*PrivilegeBoost)(nil), "membership.PrivilegeBoost")
	proto.RegisterType((*PrivilegeRoaming)(nil), "membership.PrivilegeRoaming")
	proto.RegisterType((*PrivilegeSeeWhoLikedMe)(nil), "membership.PrivilegeSeeWhoLikedMe")
	proto.RegisterType((*PaymentChannelList)(nil), "membership.PaymentChannelList")
	proto.RegisterType((*TmTecSubTran)(nil), "membership.TmTecSubTran")
	proto.RegisterType((*TmTecTran)(nil), "membership.TmTecTran")
	proto.RegisterType((*MembershipCondition)(nil), "membership.MembershipCondition")
}

func init() { proto.RegisterFile("membership/membership.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1824 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0x5b, 0x6f, 0x24, 0x47,
	0x15, 0x56, 0xcf, 0xcd, 0x33, 0x35, 0xeb, 0xbd, 0x94, 0x37, 0x9b, 0xce, 0xb2, 0x6c, 0x46, 0xad,
	0x55, 0x34, 0x48, 0xec, 0x1a, 0x9c, 0x28, 0x0a, 0x02, 0x14, 0xbc, 0x1e, 0x02, 0x23, 0x76, 0x6d,
	0xa7, 0xc6, 0x4e, 0x44, 0xde, 0xda, 0xdd, 0x65, 0x4f, 0x89, 0xbe, 0x8c, 0xaa, 0xab, 0x37, 0xcc,
	0x2f, 0xe1, 0x09, 0x29, 0xfc, 0x0c, 0x1e, 0x80, 0x5f, 0xc0, 0x2f, 0xe0, 0x0f, 0xf0, 0x04, 0x6f,
	0x3c, 0xa3, 0x73, 0xaa, 0xba, 0xbb, 0xfa, 0x62, 0x9b, 0x48, 0x28, 0x4f, 0xfb, 0x36, 0xe7, 0xeb,
	0xef, 0xd4, 0xe5, 0x3b, 0xe7, 0xd4, 0x6d, 0xc8, 0xf7, 0x62, 0x1e, 0x5f, 0x70, 0x99, 0xad, 0xc5,
	0x66, 0xbf, 0xfa, 0xf9, 0x62, 0x23, 0x53, 0x95, 0x52, 0x52, 0x21, 0xde, 0xdf, 0x7a, 0x64, 0xf7,
	0x3c, 0xe3, 0xf2, 0x54, 0x8a, 0x37, 0x22, 0xe2, 0x57, 0x9c, 0x3e, 0x22, 0x23, 0x00, 0x96, 0x0b,
	0xd7, 0x99, 0x39, 0xf3, 0x09, 0x33, 0x16, 0xfd, 0x80, 0xdc, 0x5d, 0xe5, 0x1b, 0x2e, 0x5f, 0x89,
	0xdf, 0xf1, 0xcf, 0xf3, 0x54, 0xf9, 0x6e, 0x6f, 0xe6, 0xcc, 0x87, 0xac, 0x81, 0xd2, 0x39, 0xb9,
	0x57, 0x22, 0xbf, 0xfc, 0xfd, 0x46, 0x48, 0xee, 0xf6, 0x67, 0xce, 0xbc, 0xcf, 0x9a, 0x30, 0x7d,
	0x42, 0x26, 0x55, 0x63, 0x03, 0x6c, 0xac, 0x02, 0xe8, 0x53, 0x42, 0xac, 0x26, 0x86, 0xd8, 0x04,
	0xa9, 0x7b, 0x9f, 0x27, 0x61, 0xaa, 0xbd, 0x47, 0xda, 0xbb, 0x04, 0xc0, 0x1b, 0x0c, 0xe3, 0xbd,
	0xa3, 0xbd, 0x2b, 0x84, 0x7a, 0xe4, 0x0e, 0x4b, 0xfd, 0x58, 0x24, 0x57, 0xaf, 0x44, 0x2c, 0x94,
	0x3b, 0xc6, 0x06, 0x6a, 0x18, 0x7d, 0x46, 0x76, 0x8d, 0x6d, 0x9a, 0x99, 0x60, 0x33, 0x75, 0xd0,
	0xfb, 0x63, 0x8f, 0xec, 0xd5, 0x14, 0x3c, 0xdf, 0x84, 0xbe, 0xe2, 0xe0, 0x7d, 0x26, 0xfd, 0x24,
	0xf3, 0x03, 0x25, 0xd2, 0x64, 0x19, 0x1a, 0x39, 0xeb, 0xa0, 0xa5, 0x76, 0xef, 0x16, 0xb5, 0xfb,
	0x9d, 0x6a, 0xdf, 0xac, 0x61, 0x4d, 0xa3, 0x61, 0x53, 0xa3, 0xa6, 0x06, 0xa3, 0x0e, 0x0d, 0xe6,
	0xe4, 0xde, 0xcb, 0x34, 0xcd, 0xd4, 0xeb, 0x3c, 0x52, 0x62, 0x13, 0x09, 0x2e, 0x51, 0xcc, 0x21,
	0x6b, 0xc2, 0x30, 0x13, 0x23, 0xd3, 0x18, 0x65, 0x32, 0x96, 0xf7, 0x9f, 0x11, 0x19, 0x9e, 0xc8,
	0x90, 0x4b, 0x7a, 0x97, 0xf4, 0xca, 0xac, 0xea, 0x2d, 0x17, 0xd7, 0xce, 0xfd, 0x29, 0x21, 0xcb,
	0x90, 0x27, 0x4a, 0x5c, 0x42, 0x77, 0x7d, 0xfc, 0x66, 0x21, 0xe0, 0xb7, 0x54, 0x3c, 0x5e, 0x2e,
	0x70, 0xc2, 0x13, 0x66, 0x2c, 0xf0, 0x3b, 0x95, 0x69, 0x98, 0x07, 0x6a, 0xb9, 0xc8, 0xdc, 0xe1,
	0xac, 0x0f, 0x7e, 0x15, 0x42, 0x1f, 0x93, 0xf1, 0xe7, 0xb9, 0x9f, 0x28, 0xa1, 0xb6, 0x66, 0xae,
	0xa5, 0x0d, 0xdf, 0x16, 0xb9, 0xf4, 0x21, 0x2a, 0x26, 0x5b, 0x4a, 0x9b, 0x3e, 0x23, 0x03, 0xe8,
	0x01, 0xe7, 0x35, 0x3d, 0xb8, 0xff, 0xc2, 0x2a, 0x28, 0xc0, 0x19, 0x7e, 0xa5, 0xfb, 0x64, 0x6c,
	0xfa, 0xca, 0xdc, 0xc9, 0xac, 0x3f, 0x9f, 0x1e, 0xec, 0xd9, 0x4c, 0xf3, 0x8d, 0x95, 0x24, 0x3a,
	0x23, 0x53, 0xf3, 0xfb, 0x6c, 0xbb, 0xe1, 0x2e, 0xc1, 0xb9, 0xd8, 0x10, 0x7d, 0x41, 0xe8, 0xe1,
	0xe5, 0xa5, 0x88, 0x84, 0xaf, 0x78, 0x31, 0x8f, 0xd0, 0x9d, 0x22, 0xb1, 0xe3, 0x0b, 0x08, 0x73,
	0x18, 0xa7, 0x79, 0xa2, 0xdc, 0x3b, 0x33, 0x67, 0xee, 0x30, 0x63, 0x41, 0xa0, 0x8f, 0x72, 0x29,
	0x79, 0x12, 0x6c, 0x8f, 0xd2, 0x90, 0xbb, 0xbb, 0xd8, 0x42, 0x0d, 0xa3, 0xc7, 0x84, 0x9e, 0xfa,
	0xdb, 0x98, 0x27, 0xea, 0x68, 0xed, 0x27, 0x09, 0x8f, 0x5e, 0x89, 0x4c, 0xb9, 0x77, 0x71, 0xca,
	0x4f, 0x6b, 0x13, 0x69, 0xb1, 0x58, 0x87, 0x27, 0x04, 0x43, 0x27, 0xc0, 0x99, 0x88, 0xb9, 0x7b,
	0x4f, 0x17, 0x60, 0x85, 0x80, 0xe0, 0xa7, 0x91, 0xaf, 0x2e, 0x53, 0x19, 0xbb, 0xf7, 0x71, 0x3c,
	0xa5, 0x0d, 0xc9, 0x5f, 0xfc, 0x36, 0x09, 0xf2, 0x00, 0x19, 0x0d, 0xb4, 0x59, 0x62, 0x0b, 0x97,
	0xb6, 0x4b, 0x6c, 0x41, 0x3f, 0x22, 0xef, 0x9c, 0x48, 0x71, 0x25, 0x12, 0x3f, 0xaa, 0xb3, 0xf7,
	0x90, 0xdd, 0xfd, 0x11, 0xa2, 0x83, 0x59, 0xbb, 0x52, 0xbe, 0xca, 0x33, 0xf7, 0xa1, 0x8e, 0x8e,
	0x05, 0x41, 0x71, 0x9d, 0xca, 0x34, 0xe0, 0x59, 0xc6, 0x43, 0xf7, 0x9d, 0x99, 0x33, 0x1f, 0xb3,
	0x0a, 0x80, 0xb1, 0x95, 0x06, 0x4a, 0xf0, 0x48, 0x2f, 0x1e, 0x35, 0x10, 0x22, 0x66, 0x3a, 0x78,
	0x57, 0xa7, 0xb2, 0x69, 0x7b, 0x46, 0xa6, 0x7a, 0x19, 0xd1, 0xbe, 0x2e, 0xfa, 0xda, 0x10, 0x30,
	0x8e, 0x24, 0x2f, 0x19, 0xef, 0x69, 0x86, 0x05, 0x79, 0x7f, 0xda, 0x81, 0x7a, 0x30, 0x8b, 0x52,
	0xf6, 0xb6, 0xfa, 0xde, 0x56, 0xdf, 0xdb, 0xea, 0xfb, 0xce, 0xaa, 0x0f, 0x46, 0x70, 0xa8, 0x94,
	0x14, 0x17, 0xb9, 0xe2, 0x98, 0x61, 0x8f, 0xb5, 0x3a, 0x35, 0xd0, 0xfb, 0x4b, 0x4f, 0x67, 0x37,
	0x56, 0x67, 0x58, 0x56, 0x67, 0x48, 0x29, 0x19, 0x1c, 0xfb, 0x31, 0x37, 0xb5, 0x89, 0xbf, 0xed,
	0x0a, 0x0b, 0x33, 0xb7, 0x5f, 0xaf, 0xb0, 0xb0, 0x5e, 0x61, 0x83, 0x1b, 0x2a, 0x6c, 0xd8, 0xa8,
	0xb0, 0x03, 0xb2, 0x73, 0x2a, 0x45, 0x20, 0x92, 0x2b, 0x2c, 0xcc, 0xe9, 0x81, 0xdb, 0x2c, 0x32,
	0xf3, 0x39, 0x63, 0x05, 0x91, 0xfe, 0x86, 0x3c, 0x68, 0x96, 0x40, 0x86, 0xa5, 0x3b, 0x3d, 0xf8,
	0xbe, 0xed, 0xdd, 0x22, 0xb1, 0xb6, 0x9f, 0x15, 0x87, 0x71, 0x33, 0x0e, 0xb6, 0xca, 0x93, 0xf6,
	0x1a, 0x17, 0x92, 0x3b, 0xf6, 0xf8, 0xe8, 0x0f, 0x48, 0xff, 0xe8, 0xf8, 0xb7, 0xa8, 0xe3, 0xf4,
	0xe0, 0xdd, 0x6b, 0xa6, 0xc1, 0x80, 0x03, 0xd4, 0xf3, 0x95, 0x5e, 0xfc, 0x6e, 0xa2, 0x9e, 0xaf,
	0x16, 0xde, 0xbf, 0x1d, 0x32, 0xb5, 0xc0, 0x56, 0x45, 0x3b, 0x1d, 0x15, 0xfd, 0x01, 0xb9, 0x5b,
	0xd8, 0xab, 0x6d, 0x7c, 0x91, 0x46, 0x26, 0x94, 0x0d, 0x94, 0x3e, 0x24, 0x43, 0x68, 0x56, 0x1f,
	0x92, 0x1d, 0xa6, 0x0d, 0x7d, 0x7c, 0x15, 0xea, 0x94, 0x4b, 0x91, 0x86, 0x18, 0x4c, 0x3c, 0xbe,
	0x16, 0x88, 0x3e, 0xd8, 0x09, 0xa5, 0x3d, 0x87, 0xe8, 0x59, 0x01, 0x90, 0x7b, 0x0b, 0x91, 0x05,
	0xb0, 0xfa, 0x68, 0xc6, 0x08, 0x19, 0x75, 0x10, 0x53, 0xc2, 0x00, 0x18, 0x39, 0x87, 0x95, 0xb6,
	0xf7, 0x67, 0xa7, 0x23, 0xbe, 0xf4, 0x23, 0x32, 0x3a, 0x8c, 0xc4, 0xc6, 0xdf, 0x1a, 0x81, 0x9f,
	0xdc, 0x14, 0x69, 0x66, 0xb8, 0xf4, 0x13, 0x32, 0x3e, 0xdc, 0x6c, 0x56, 0x2a, 0x95, 0xdc, 0xa8,
	0x7d, 0xb3, 0x5f, 0xc9, 0x86, 0xfe, 0xbe, 0xe4, 0xc1, 0xda, 0x57, 0x28, 0xce, 0xad, 0xfd, 0x69,
	0xae, 0xf7, 0x8d, 0x43, 0xee, 0x37, 0x3f, 0x62, 0x39, 0xe6, 0x2a, 0x65, 0x3c, 0xe1, 0x5f, 0xfb,
	0x17, 0x51, 0x11, 0xb3, 0x3a, 0x08, 0x09, 0x77, 0x9c, 0x26, 0x68, 0x43, 0x35, 0xe8, 0x88, 0xd9,
	0x10, 0x04, 0xe6, 0x28, 0x4d, 0xb2, 0x3c, 0xc6, 0x46, 0xcc, 0xee, 0x58, 0x21, 0xd0, 0xcf, 0x71,
	0x9a, 0x58, 0x14, 0xbd, 0x49, 0xd6, 0x41, 0xef, 0x9f, 0x0e, 0x94, 0x9c, 0x1e, 0xd9, 0xff, 0x52,
	0xf9, 0x8d, 0xcd, 0xaa, 0xdf, 0xde, 0xac, 0xea, 0xbb, 0xf6, 0xa0, 0xb5, 0x6b, 0xff, 0xdc, 0x3e,
	0x0b, 0x60, 0xc6, 0x34, 0x0a, 0xd5, 0x34, 0x56, 0x91, 0x98, 0x7d, 0x78, 0xa8, 0x2a, 0x74, 0x74,
	0x53, 0x85, 0xee, 0xb4, 0x2b, 0xf4, 0x9b, 0x01, 0x79, 0xd0, 0x6a, 0x9b, 0x7e, 0x4a, 0xc8, 0xeb,
	0xb2, 0x6f, 0x93, 0x4d, 0xef, 0xd7, 0x87, 0x63, 0xb8, 0x15, 0x8d, 0x59, 0x2e, 0xf4, 0x39, 0x19,
	0xc0, 0x35, 0xc7, 0x24, 0xd4, 0x7b, 0x9d, 0xae, 0x40, 0x60, 0x48, 0x03, 0x3a, 0xdc, 0x7b, 0x4c,
	0x1e, 0x75, 0xd3, 0x81, 0xc0, 0x90, 0x46, 0x7f, 0x46, 0x26, 0xe5, 0x3d, 0x0b, 0xc5, 0x6c, 0xee,
	0xc2, 0x85, 0x4f, 0xc9, 0x62, 0x95, 0x03, 0xfd, 0x11, 0x19, 0xe2, 0xe5, 0xc8, 0xc8, 0xfc, 0xb8,
	0xd3, 0x13, 0x19, 0x4c, 0x13, 0xe9, 0xc7, 0x64, 0xc7, 0xdc, 0xba, 0xcc, 0x0a, 0xfc, 0xa4, 0xd3,
	0xc7, 0x70, 0x58, 0x41, 0xa6, 0xbf, 0x26, 0xbb, 0x2b, 0xce, 0xbf, 0x5c, 0xa7, 0xd0, 0x6f, 0xf8,
	0x9a, 0x9b, 0x15, 0xd8, 0xeb, 0x1e, 0xab, 0xcd, 0x64, 0x75, 0x47, 0x08, 0x08, 0x0e, 0xe5, 0xa5,
	0x1f, 0x5e, 0x71, 0x73, 0xd6, 0x7a, 0xff, 0xfa, 0x81, 0x23, 0x8d, 0x59, 0x2e, 0xf4, 0x27, 0x64,
	0x8c, 0xd6, 0x17, 0x62, 0x83, 0x0b, 0x75, 0x2b, 0xbd, 0x6c, 0xf7, 0x2f, 0xc4, 0x86, 0x95, 0x74,
	0xef, 0x43, 0xc8, 0x90, 0xc6, 0xe7, 0x46, 0x42, 0x3b, 0xcd, 0x84, 0xf6, 0xfe, 0xe0, 0x90, 0xbd,
	0x8e, 0x31, 0xe9, 0x9d, 0xdf, 0xc0, 0x58, 0x2c, 0xa6, 0xd0, 0x6b, 0x60, 0xa3, 0xf5, 0x5e, 0xab,
	0x5c, 0x9e, 0x12, 0x62, 0xdd, 0x78, 0xf5, 0xd5, 0xdb, 0x42, 0x6a, 0xdb, 0xa9, 0xd9, 0x6a, 0x0b,
	0xdb, 0xfb, 0xd4, 0x1a, 0x98, 0x95, 0xb1, 0x45, 0x5d, 0x3b, 0x56, 0x5d, 0x3f, 0x24, 0xc3, 0x57,
	0xfc, 0x0d, 0x8f, 0xcc, 0x53, 0x8a, 0x36, 0xbc, 0x9f, 0x5a, 0x53, 0xc0, 0x84, 0x7a, 0x48, 0x86,
	0x67, 0xa9, 0xf2, 0x23, 0xf4, 0x1d, 0x32, 0x6d, 0x00, 0xca, 0x78, 0xc6, 0x55, 0xe1, 0x8c, 0x46,
	0xcd, 0x19, 0x73, 0xf9, 0xdb, 0x38, 0xff, 0x82, 0xd0, 0x76, 0x6a, 0x03, 0x57, 0xbf, 0x20, 0x98,
	0x16, 0xf4, 0xeb, 0x41, 0x77, 0x0b, 0x7f, 0x75, 0xc8, 0xdd, 0x7a, 0x58, 0x1a, 0x5a, 0x3a, 0x37,
	0x6a, 0xd9, 0xab, 0x6b, 0x59, 0x75, 0xdd, 0xef, 0xec, 0x7a, 0x60, 0x75, 0xdd, 0x8e, 0xfc, 0xf0,
	0xf6, 0xc8, 0x8f, 0x5a, 0x79, 0xf5, 0x15, 0xb9, 0xdf, 0xac, 0xb7, 0x6b, 0x24, 0xbc, 0x65, 0xdc,
	0x7a, 0x84, 0x7d, 0x5b, 0x1c, 0x45, 0x1e, 0x75, 0x57, 0xe3, 0xff, 0x29, 0x6b, 0xcb, 0x71, 0xf6,
	0xad, 0x71, 0x7a, 0x9d, 0x77, 0x0b, 0xeb, 0xb6, 0x62, 0x9e, 0xf9, 0xcc, 0x6d, 0x65, 0x46, 0xa6,
	0x9f, 0xe5, 0x49, 0x68, 0xa8, 0xc5, 0x16, 0x68, 0x41, 0xde, 0xbf, 0x1c, 0x72, 0xe7, 0x2c, 0x3e,
	0xe3, 0xc1, 0x2a, 0xbf, 0x80, 0x53, 0x7b, 0x6b, 0x07, 0x83, 0xcb, 0x85, 0x2f, 0x79, 0xa2, 0xca,
	0xbb, 0x65, 0x69, 0x53, 0x97, 0xec, 0xac, 0xb8, 0x7c, 0x53, 0x1c, 0x78, 0x26, 0xac, 0x30, 0xe1,
	0x48, 0xb3, 0x4c, 0x14, 0x97, 0x97, 0x7e, 0x50, 0xec, 0x9a, 0x15, 0x80, 0x67, 0x5f, 0x5f, 0xfa,
	0x31, 0x57, 0x5c, 0x66, 0x26, 0xb2, 0x16, 0xd2, 0xdc, 0x88, 0x46, 0xed, 0x03, 0x79, 0xe3, 0x50,
	0xbf, 0xd3, 0x3e, 0xd4, 0x5f, 0x73, 0x0c, 0xf5, 0xfe, 0xd1, 0x23, 0x13, 0x9c, 0xf0, 0xb7, 0x9e,
	0xed, 0x0f, 0xc9, 0x60, 0x95, 0x5f, 0xe8, 0xb3, 0x7a, 0xe3, 0x58, 0x6d, 0x2b, 0xc8, 0x90, 0x05,
	0xe1, 0xc3, 0x1b, 0x0e, 0xce, 0x7e, 0xcc, 0xcc, 0xab, 0xd9, 0x33, 0xb2, 0xcb, 0xb8, 0x92, 0xdb,
	0xda, 0xf1, 0x7d, 0xc8, 0xea, 0x20, 0x8c, 0xfd, 0xc8, 0x8f, 0xa2, 0x32, 0xa5, 0x8d, 0x05, 0xa3,
	0x3b, 0x93, 0x5b, 0x98, 0x5e, 0x66, 0x1e, 0xee, 0x4a, 0xbb, 0xa9, 0xc8, 0xf8, 0xd6, 0x6b, 0x4e,
	0xfb, 0x00, 0x6e, 0x69, 0x46, 0x6a, 0x07, 0x83, 0x39, 0xb9, 0x77, 0x18, 0x49, 0xee, 0x87, 0xdb,
	0x65, 0x92, 0x71, 0xa9, 0xb8, 0xbe, 0x39, 0x8f, 0x59, 0x13, 0xf6, 0xfe, 0xde, 0x27, 0x7b, 0xd5,
	0x32, 0x79, 0x94, 0x26, 0xa1, 0xc0, 0x19, 0x75, 0xe8, 0x7c, 0xa2, 0xd6, 0x5c, 0xc2, 0xdd, 0xa7,
	0x87, 0x77, 0x9f, 0xd2, 0xd6, 0xc7, 0x61, 0x25, 0x22, 0x1c, 0xa5, 0x7e, 0x6d, 0xae, 0x00, 0xf8,
	0xba, 0x12, 0x49, 0xa0, 0xef, 0xc2, 0xfa, 0x2c, 0x5d, 0x01, 0x90, 0x91, 0x48, 0x5d, 0x86, 0x26,
	0xad, 0x0a, 0x13, 0x73, 0x15, 0x68, 0xcb, 0xd0, 0x88, 0x5a, 0x98, 0x30, 0xeb, 0x93, 0xcb, 0x4b,
	0xa8, 0x6f, 0xad, 0xa9, 0xb1, 0x70, 0x3d, 0xb7, 0x9e, 0x93, 0xb5, 0x01, 0xed, 0xbc, 0xf6, 0x55,
	0xb0, 0xe6, 0x21, 0x2a, 0x38, 0x66, 0x85, 0x09, 0xed, 0xfc, 0x8a, 0x27, 0x10, 0x72, 0xa3, 0x9e,
	0xb6, 0x00, 0xff, 0x4c, 0x44, 0x8a, 0x4b, 0xf3, 0xdc, 0x60, 0x2c, 0x54, 0x9b, 0xfb, 0x32, 0x58,
	0xe3, 0x13, 0x03, 0xa8, 0x8d, 0x16, 0x5c, 0x36, 0x96, 0x49, 0x10, 0xe5, 0x21, 0x5f, 0xf0, 0x88,
	0x83, 0xd8, 0xbb, 0xd8, 0x51, 0x03, 0x85, 0x5c, 0xc2, 0xa4, 0x7a, 0xb9, 0x3d, 0x4f, 0x20, 0x0a,
	0xf8, 0xc2, 0x30, 0x66, 0x75, 0x10, 0x62, 0xc7, 0x78, 0x96, 0xe6, 0x32, 0xe0, 0x27, 0x5f, 0x27,
	0xa0, 0x30, 0xbe, 0x20, 0x4c, 0x58, 0x13, 0x86, 0x3d, 0x6d, 0x95, 0x4a, 0x65, 0x9e, 0x10, 0xf0,
	0xf7, 0xcb, 0x4f, 0xbe, 0xfa, 0xf8, 0x4a, 0xa8, 0x75, 0x7e, 0xf1, 0x22, 0x48, 0xe3, 0xfd, 0xcd,
	0x8f, 0x83, 0x64, 0x5f, 0xf9, 0x89, 0xf2, 0x93, 0xe7, 0x61, 0x1a, 0xfb, 0x22, 0x79, 0x9e, 0x05,
	0x6b, 0x1e, 0xfb, 0xfb, 0x57, 0x69, 0xe4, 0x27, 0x57, 0xd6, 0xbf, 0x13, 0x17, 0x23, 0xfc, 0x7b,
	0xe2, 0xc3, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xe2, 0x69, 0x03, 0x72, 0xbd, 0x18, 0x00, 0x00,
}
