// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/friendship.proto

package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type FriendshipState int32

const (
	FriendshipState_FRIENDSHIP_STATE_DEFAULT  FriendshipState = 0
	FriendshipState_FRIENDSHIP_STATE_INCOMING FriendshipState = 1
	FriendshipState_FRIENDSHIP_STATE_OUTGOING FriendshipState = 2
	FriendshipState_FRIENDSHIP_STATE_ACCEPTED FriendshipState = 3
)

var FriendshipState_name = map[int32]string{
	0: "FRIENDSHIP_STATE_DEFAULT",
	1: "FRIENDSHIP_STATE_INCOMING",
	2: "FRIENDSHIP_STATE_OUTGOING",
	3: "FRIENDSHIP_STATE_ACCEPTED",
}
var FriendshipState_value = map[string]int32{
	"FRIENDSHIP_STATE_DEFAULT":  0,
	"FRIENDSHIP_STATE_INCOMING": 1,
	"FRIENDSHIP_STATE_OUTGOING": 2,
	"FRIENDSHIP_STATE_ACCEPTED": 3,
}

func (x FriendshipState) String() string {
	return proto.EnumName(FriendshipState_name, int32(x))
}
func (FriendshipState) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type Friendship struct {
	UserID      string          `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	OtherUserID string          `protobuf:"bytes,2,opt,name=otherUserID" json:"otherUserID,omitempty"`
	State       FriendshipState `protobuf:"varint,3,opt,name=state,enum=common.FriendshipState" json:"state,omitempty"`
	OtherState  FriendshipState `protobuf:"varint,4,opt,name=otherState,enum=common.FriendshipState" json:"otherState,omitempty"`
	CreatedTime int64           `protobuf:"varint,5,opt,name=createdTime" json:"createdTime,omitempty"`
}

func (m *Friendship) Reset()                    { *m = Friendship{} }
func (m *Friendship) String() string            { return proto.CompactTextString(m) }
func (*Friendship) ProtoMessage()               {}
func (*Friendship) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Friendship) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Friendship) GetOtherUserID() string {
	if m != nil {
		return m.OtherUserID
	}
	return ""
}

func (m *Friendship) GetState() FriendshipState {
	if m != nil {
		return m.State
	}
	return FriendshipState_FRIENDSHIP_STATE_DEFAULT
}

func (m *Friendship) GetOtherState() FriendshipState {
	if m != nil {
		return m.OtherState
	}
	return FriendshipState_FRIENDSHIP_STATE_DEFAULT
}

func (m *Friendship) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func init() {
	proto.RegisterType((*Friendship)(nil), "common.Friendship")
	proto.RegisterEnum("common.FriendshipState", FriendshipState_name, FriendshipState_value)
}

func init() { proto.RegisterFile("common/friendship.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0xd1, 0x4d, 0x4b, 0x84, 0x40,
	0x18, 0x07, 0xf0, 0x66, 0x6d, 0x85, 0x26, 0x28, 0x99, 0x43, 0x6b, 0x50, 0x20, 0x9d, 0x24, 0x50,
	0x69, 0x0b, 0x3a, 0x9b, 0x2f, 0x9b, 0x50, 0xba, 0xe8, 0x78, 0xe9, 0xb2, 0xcc, 0xea, 0xa4, 0x42,
	0xce, 0x88, 0xce, 0x7e, 0x8b, 0x3e, 0x5c, 0x1f, 0x29, 0xd4, 0x28, 0xa9, 0xa5, 0xe3, 0xfc, 0x7f,
	0xcf, 0xf3, 0xcc, 0x1b, 0x5c, 0x64, 0xbc, 0xae, 0x39, 0xb3, 0x5e, 0xdb, 0x8a, 0xb2, 0xbc, 0x2b,
	0xab, 0xc6, 0x6c, 0x5a, 0x2e, 0x38, 0x92, 0x47, 0xb8, 0xfa, 0x00, 0x10, 0xfa, 0xdf, 0x88, 0xce,
	0xa0, 0xbc, 0xeb, 0x68, 0x1b, 0xb8, 0x2a, 0xd0, 0x80, 0x7e, 0x14, 0x7f, 0xad, 0x90, 0x06, 0x8f,
	0xb9, 0x28, 0x69, 0x9b, 0x8e, 0x38, 0x1b, 0x70, 0x1a, 0x21, 0x03, 0xce, 0x3b, 0x41, 0x04, 0x55,
	0x25, 0x0d, 0xe8, 0x27, 0xcb, 0x85, 0x39, 0x6e, 0x60, 0xfe, 0x0c, 0x4f, 0x7a, 0x8e, 0xc7, 0x2a,
	0x74, 0x0f, 0xe1, 0xd0, 0x3d, 0x84, 0xea, 0xe1, 0xff, 0x3d, 0x93, 0xd2, 0xfe, 0x24, 0x59, 0x4b,
	0x89, 0xa0, 0x39, 0xae, 0x6a, 0xaa, 0xce, 0x35, 0xa0, 0x4b, 0xf1, 0x34, 0xba, 0x7e, 0x07, 0xf0,
	0xf4, 0xd7, 0x04, 0x74, 0x01, 0x55, 0x3f, 0x0e, 0xbc, 0xd0, 0x4d, 0x1e, 0x83, 0xf5, 0x26, 0xc1,
	0x36, 0xf6, 0x36, 0xae, 0xe7, 0xdb, 0xe9, 0x13, 0x56, 0x0e, 0xd0, 0x25, 0x3c, 0xff, 0xa3, 0x41,
	0xe8, 0x44, 0xcf, 0x41, 0xb8, 0x52, 0xc0, 0x5e, 0x8e, 0x52, 0xbc, 0x8a, 0x7a, 0x9e, 0xed, 0x65,
	0xdb, 0x71, 0xbc, 0x35, 0xf6, 0x5c, 0x45, 0x7a, 0xb8, 0x7b, 0x59, 0x16, 0x95, 0x28, 0x77, 0xdb,
	0xfe, 0x76, 0x56, 0x73, 0x93, 0x31, 0x4b, 0x10, 0x26, 0x08, 0x33, 0x72, 0x5e, 0x93, 0x8a, 0x19,
	0x5d, 0x56, 0xd2, 0x9a, 0x58, 0x05, 0x7f, 0x23, 0xac, 0xb0, 0xc6, 0x27, 0xd8, 0xca, 0xc3, 0x37,
	0xdd, 0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x75, 0x33, 0xf7, 0xc1, 0x01, 0x00, 0x00,
}
