// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/context.proto

/*
Package common is a generated protocol buffer package.

It is generated from these files:
	common/context.proto
	common/friendship.proto
	common/id-type.proto
	common/media.proto
	common/scenario-user-counter.proto
	common/update.proto
	common/verification.proto
	common/vote.proto
	common/wrappers.proto

It has these top-level messages:
	Context
	ContextBaggage
	Friendship
	IdType
	Media
	Video
	Audio
	Picture
	ScenarioUserCounter
	Action
	UpdateValue
	VerificationStudies
	Verification
	Vote
	DoubleValue
	FloatValue
	Int64Value
	UInt64Value
	Int32Value
	UInt32Value
	BoolValue
	StringValue
	BytesValue
	StringValueArray
	BytesValueArray
	Condition
*/
package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Context struct {
	TraceID      string            `protobuf:"bytes,1,opt,name=traceID" json:"traceID,omitempty"`
	ParentSpanID string            `protobuf:"bytes,2,opt,name=parentSpanID" json:"parentSpanID,omitempty"`
	SpanID       string            `protobuf:"bytes,3,opt,name=spanID" json:"spanID,omitempty"`
	Sampled      float32           `protobuf:"fixed32,4,opt,name=sampled" json:"sampled,omitempty"`
	DeviceId     string            `protobuf:"bytes,5,opt,name=deviceId" json:"deviceId,omitempty"`
	Service      string            `protobuf:"bytes,6,opt,name=service" json:"service,omitempty"`
	ServiceTrace []string          `protobuf:"bytes,7,rep,name=serviceTrace" json:"serviceTrace,omitempty"`
	Baggages     []*ContextBaggage `protobuf:"bytes,8,rep,name=baggages" json:"baggages,omitempty"`
	Debug        bool              `protobuf:"varint,9,opt,name=debug" json:"debug,omitempty"`
	Ext          map[string]string `protobuf:"bytes,10,rep,name=ext" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Context) Reset()                    { *m = Context{} }
func (m *Context) String() string            { return proto.CompactTextString(m) }
func (*Context) ProtoMessage()               {}
func (*Context) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Context) GetTraceID() string {
	if m != nil {
		return m.TraceID
	}
	return ""
}

func (m *Context) GetParentSpanID() string {
	if m != nil {
		return m.ParentSpanID
	}
	return ""
}

func (m *Context) GetSpanID() string {
	if m != nil {
		return m.SpanID
	}
	return ""
}

func (m *Context) GetSampled() float32 {
	if m != nil {
		return m.Sampled
	}
	return 0
}

func (m *Context) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Context) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *Context) GetServiceTrace() []string {
	if m != nil {
		return m.ServiceTrace
	}
	return nil
}

func (m *Context) GetBaggages() []*ContextBaggage {
	if m != nil {
		return m.Baggages
	}
	return nil
}

func (m *Context) GetDebug() bool {
	if m != nil {
		return m.Debug
	}
	return false
}

func (m *Context) GetExt() map[string]string {
	if m != nil {
		return m.Ext
	}
	return nil
}

type ContextBaggage struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *ContextBaggage) Reset()                    { *m = ContextBaggage{} }
func (m *ContextBaggage) String() string            { return proto.CompactTextString(m) }
func (*ContextBaggage) ProtoMessage()               {}
func (*ContextBaggage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ContextBaggage) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ContextBaggage) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*Context)(nil), "common.Context")
	proto.RegisterType((*ContextBaggage)(nil), "common.ContextBaggage")
}

func init() { proto.RegisterFile("common/context.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x6b, 0xf2, 0x40,
	0x10, 0xc5, 0x89, 0xf9, 0x8c, 0x71, 0xbe, 0x52, 0xca, 0x22, 0xb2, 0x78, 0x0a, 0x9e, 0x42, 0xc1,
	0x84, 0xda, 0x52, 0xa4, 0x47, 0xab, 0x07, 0xaf, 0x69, 0x4f, 0xbd, 0x4d, 0x92, 0x61, 0x95, 0x9a,
	0xdd, 0x90, 0xac, 0xa2, 0xc7, 0xfe, 0xe7, 0x65, 0xb3, 0x89, 0xd4, 0x9e, 0x7a, 0xdb, 0xdf, 0x7b,
	0x3b, 0x8f, 0xb7, 0xc3, 0xc2, 0x28, 0x53, 0x45, 0xa1, 0x64, 0x9c, 0x29, 0xa9, 0xe9, 0xa4, 0xa3,
	0xb2, 0x52, 0x5a, 0x31, 0xcf, 0xaa, 0xd3, 0x2f, 0x17, 0x06, 0xaf, 0xd6, 0x61, 0x1c, 0x06, 0xba,
	0xc2, 0x8c, 0x36, 0x2b, 0xee, 0x04, 0x4e, 0x38, 0x4c, 0x3a, 0x64, 0x53, 0xb8, 0x29, 0xb1, 0x22,
	0xa9, 0xdf, 0x4a, 0x94, 0x9b, 0x15, 0xef, 0x35, 0xf6, 0x95, 0xc6, 0xc6, 0xe0, 0xd5, 0xd6, 0x75,
	0x1b, 0xb7, 0x25, 0x93, 0x5a, 0x63, 0x51, 0xee, 0x29, 0xe7, 0xff, 0x02, 0x27, 0xec, 0x25, 0x1d,
	0xb2, 0x09, 0xf8, 0x39, 0x1d, 0x77, 0x19, 0x6d, 0x72, 0xde, 0x6f, 0x66, 0x2e, 0xdc, 0x4c, 0x51,
	0x65, 0x80, 0x7b, 0xb6, 0x4b, 0x8b, 0xa6, 0x4b, 0x7b, 0x7c, 0x37, 0xed, 0xf8, 0x20, 0x70, 0x4d,
	0x97, 0x9f, 0x1a, 0x9b, 0x83, 0x9f, 0xa2, 0x10, 0x28, 0xa8, 0xe6, 0x7e, 0xe0, 0x86, 0xff, 0xe7,
	0xe3, 0xc8, 0x3e, 0x38, 0x6a, 0x1f, 0xbb, 0xb4, 0x76, 0x72, 0xb9, 0xc7, 0x46, 0xd0, 0xcf, 0x29,
	0x3d, 0x08, 0x3e, 0x0c, 0x9c, 0xd0, 0x4f, 0x2c, 0xb0, 0x7b, 0x70, 0xe9, 0xa4, 0x39, 0x34, 0x21,
	0xfc, 0x57, 0x48, 0xb4, 0x3e, 0xe9, 0xb5, 0xd4, 0xd5, 0x39, 0x31, 0x97, 0x26, 0xcf, 0xe0, 0x77,
	0x02, 0xbb, 0x03, 0xf7, 0x93, 0xce, 0xed, 0x1e, 0xcd, 0xd1, 0xe4, 0x1f, 0x71, 0x7f, 0xa0, 0x76,
	0x79, 0x16, 0x5e, 0x7a, 0x0b, 0x67, 0xba, 0x80, 0xdb, 0xeb, 0x56, 0x7f, 0x9d, 0x5e, 0x3e, 0x7d,
	0xcc, 0xc5, 0x4e, 0x6f, 0x0f, 0xa9, 0x29, 0x16, 0x97, 0x0f, 0x99, 0x8c, 0x35, 0x4a, 0x8d, 0x72,
	0x96, 0xab, 0x02, 0x77, 0x72, 0x56, 0x67, 0x5b, 0x2a, 0x30, 0x16, 0x6a, 0x8f, 0x52, 0xc4, 0xb6,
	0x7d, 0xea, 0x35, 0x5f, 0xe0, 0xf1, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x82, 0x34, 0x62, 0x4a, 0x1a,
	0x02, 0x00, 0x00,
}
