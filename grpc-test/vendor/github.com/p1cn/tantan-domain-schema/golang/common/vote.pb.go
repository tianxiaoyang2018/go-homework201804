// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/vote.proto

package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Vote struct {
	ID           string   `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	QuestionID   string   `protobuf:"bytes,2,opt,name=questionID" json:"questionID,omitempty"`
	OwnerID      string   `protobuf:"bytes,3,opt,name=ownerID" json:"ownerID,omitempty"`
	VoteID       string   `protobuf:"bytes,4,opt,name=voteID" json:"voteID,omitempty"`
	CandidateIDs []string `protobuf:"bytes,5,rep,name=candidateIDs" json:"candidateIDs,omitempty"`
	CreatedTime  int64    `protobuf:"varint,6,opt,name=createdTime" json:"createdTime,omitempty"`
	VotedTime    int64    `protobuf:"varint,7,opt,name=votedTime" json:"votedTime,omitempty"`
}

func (m *Vote) Reset()                    { *m = Vote{} }
func (m *Vote) String() string            { return proto.CompactTextString(m) }
func (*Vote) ProtoMessage()               {}
func (*Vote) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *Vote) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Vote) GetQuestionID() string {
	if m != nil {
		return m.QuestionID
	}
	return ""
}

func (m *Vote) GetOwnerID() string {
	if m != nil {
		return m.OwnerID
	}
	return ""
}

func (m *Vote) GetVoteID() string {
	if m != nil {
		return m.VoteID
	}
	return ""
}

func (m *Vote) GetCandidateIDs() []string {
	if m != nil {
		return m.CandidateIDs
	}
	return nil
}

func (m *Vote) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *Vote) GetVotedTime() int64 {
	if m != nil {
		return m.VotedTime
	}
	return 0
}

func init() {
	proto.RegisterType((*Vote)(nil), "common.Vote")
}

func init() { proto.RegisterFile("common/vote.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0x87, 0x69, 0xbb, 0x76, 0xe9, 0x28, 0x82, 0x39, 0x48, 0x0e, 0x22, 0x65, 0x4f, 0xbd, 0xec,
	0x06, 0xff, 0x3c, 0x81, 0xe4, 0x92, 0x6b, 0x11, 0x0f, 0xde, 0xb2, 0x69, 0xe8, 0x06, 0xcc, 0xcc,
	0xda, 0xce, 0xea, 0x4b, 0xfa, 0x50, 0xd2, 0x54, 0xb1, 0x1e, 0xbf, 0xef, 0x83, 0x19, 0xf8, 0xc1,
	0x95, 0xa3, 0x18, 0x09, 0xd5, 0x07, 0xb1, 0xdf, 0x1d, 0x07, 0x62, 0x12, 0xe5, 0xac, 0x36, 0x5f,
	0x19, 0xac, 0x5e, 0x88, 0xbd, 0xb8, 0x84, 0xdc, 0x68, 0x99, 0xd5, 0x59, 0x53, 0xb5, 0xb9, 0xd1,
	0xe2, 0x16, 0xe0, 0xfd, 0xe4, 0x47, 0x0e, 0x84, 0x46, 0xcb, 0x3c, 0xf9, 0x85, 0x11, 0x12, 0xd6,
	0xf4, 0x89, 0x7e, 0x30, 0x5a, 0x16, 0x29, 0xfe, 0xa2, 0xb8, 0x86, 0x72, 0x7a, 0x64, 0xb4, 0x5c,
	0xa5, 0xf0, 0x43, 0x62, 0x03, 0x17, 0xce, 0x62, 0x17, 0x3a, 0x3b, 0xe1, 0x28, 0xcf, 0xea, 0xa2,
	0xa9, 0xda, 0x7f, 0x4e, 0xd4, 0x70, 0xee, 0x06, 0x6f, 0xd9, 0x77, 0xcf, 0x21, 0x7a, 0x59, 0xd6,
	0x59, 0x53, 0xb4, 0x4b, 0x25, 0x6e, 0xa0, 0x9a, 0xee, 0xcd, 0x7d, 0x9d, 0xfa, 0x9f, 0x78, 0x7a,
	0x7c, 0xbd, 0xef, 0x03, 0x1f, 0x4e, 0xfb, 0x9d, 0xa3, 0xa8, 0x8e, 0x77, 0x0e, 0x15, 0x5b, 0x64,
	0x8b, 0xdb, 0x8e, 0xa2, 0x0d, 0xb8, 0x1d, 0xdd, 0xc1, 0x47, 0xab, 0x7a, 0x7a, 0xb3, 0xd8, 0xab,
	0x79, 0x84, 0x7d, 0x99, 0x36, 0x79, 0xf8, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x85, 0xc8, 0x3e, 0xfd,
	0x28, 0x01, 0x00, 0x00,
}
