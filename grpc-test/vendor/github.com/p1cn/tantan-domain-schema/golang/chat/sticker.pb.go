// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat/sticker.proto

package chat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Sticker struct {
	Id             string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Identifier     string `protobuf:"bytes,3,opt,name=Identifier" json:"Identifier,omitempty"`
	MainPicURL     string `protobuf:"bytes,4,opt,name=mainPicURL" json:"mainPicURL,omitempty"`
	MainPicWidth   int32  `protobuf:"varint,5,opt,name=mainPicWidth" json:"mainPicWidth,omitempty"`
	MainPicHeight  int32  `protobuf:"varint,6,opt,name=mainPicHeight" json:"mainPicHeight,omitempty"`
	MainPicFormat  string `protobuf:"bytes,7,opt,name=mainPicFormat" json:"mainPicFormat,omitempty"`
	ThumbPicURL    string `protobuf:"bytes,8,opt,name=thumbPicURL" json:"thumbPicURL,omitempty"`
	ThumbPicWidth  int32  `protobuf:"varint,10,opt,name=thumbPicWidth" json:"thumbPicWidth,omitempty"`
	ThumbPicHeight int32  `protobuf:"varint,11,opt,name=thumbPicHeight" json:"thumbPicHeight,omitempty"`
	ThumbPicFormat string `protobuf:"bytes,12,opt,name=thumbPicFormat" json:"thumbPicFormat,omitempty"`
	Source         string `protobuf:"bytes,13,opt,name=source" json:"source,omitempty"`
	UserId         string `protobuf:"bytes,14,opt,name=userId" json:"userId,omitempty"`
	Status         string `protobuf:"bytes,15,opt,name=status" json:"status,omitempty"`
	CreatedTime    int64  `protobuf:"varint,16,opt,name=createdTime" json:"createdTime,omitempty"`
}

func (m *Sticker) Reset()                    { *m = Sticker{} }
func (m *Sticker) String() string            { return proto.CompactTextString(m) }
func (*Sticker) ProtoMessage()               {}
func (*Sticker) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *Sticker) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Sticker) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Sticker) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Sticker) GetMainPicURL() string {
	if m != nil {
		return m.MainPicURL
	}
	return ""
}

func (m *Sticker) GetMainPicWidth() int32 {
	if m != nil {
		return m.MainPicWidth
	}
	return 0
}

func (m *Sticker) GetMainPicHeight() int32 {
	if m != nil {
		return m.MainPicHeight
	}
	return 0
}

func (m *Sticker) GetMainPicFormat() string {
	if m != nil {
		return m.MainPicFormat
	}
	return ""
}

func (m *Sticker) GetThumbPicURL() string {
	if m != nil {
		return m.ThumbPicURL
	}
	return ""
}

func (m *Sticker) GetThumbPicWidth() int32 {
	if m != nil {
		return m.ThumbPicWidth
	}
	return 0
}

func (m *Sticker) GetThumbPicHeight() int32 {
	if m != nil {
		return m.ThumbPicHeight
	}
	return 0
}

func (m *Sticker) GetThumbPicFormat() string {
	if m != nil {
		return m.ThumbPicFormat
	}
	return ""
}

func (m *Sticker) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Sticker) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Sticker) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Sticker) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

type Package struct {
	Id          string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Pictures    []*Media `protobuf:"bytes,4,rep,name=pictures" json:"pictures,omitempty"`
	StickerIds  []string `protobuf:"bytes,5,rep,name=stickerIds" json:"stickerIds,omitempty"`
	PackageType string   `protobuf:"bytes,6,opt,name=packageType" json:"packageType,omitempty"`
	CreatedTime int64    `protobuf:"varint,7,opt,name=createdTime" json:"createdTime,omitempty"`
	Activated   bool     `protobuf:"varint,8,opt,name=activated" json:"activated,omitempty"`
}

func (m *Package) Reset()                    { *m = Package{} }
func (m *Package) String() string            { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()               {}
func (*Package) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *Package) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Package) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Package) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Package) GetPictures() []*Media {
	if m != nil {
		return m.Pictures
	}
	return nil
}

func (m *Package) GetStickerIds() []string {
	if m != nil {
		return m.StickerIds
	}
	return nil
}

func (m *Package) GetPackageType() string {
	if m != nil {
		return m.PackageType
	}
	return ""
}

func (m *Package) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *Package) GetActivated() bool {
	if m != nil {
		return m.Activated
	}
	return false
}

type Shop struct {
	Id          string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Identifier  string   `protobuf:"bytes,3,opt,name=identifier" json:"identifier,omitempty"`
	BundleIds   []string `protobuf:"bytes,4,rep,name=bundleIds" json:"bundleIds,omitempty"`
	CampaignIds []string `protobuf:"bytes,5,rep,name=campaignIds" json:"campaignIds,omitempty"`
}

func (m *Shop) Reset()                    { *m = Shop{} }
func (m *Shop) String() string            { return proto.CompactTextString(m) }
func (*Shop) ProtoMessage()               {}
func (*Shop) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *Shop) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Shop) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Shop) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Shop) GetBundleIds() []string {
	if m != nil {
		return m.BundleIds
	}
	return nil
}

func (m *Shop) GetCampaignIds() []string {
	if m != nil {
		return m.CampaignIds
	}
	return nil
}

type Bundle struct {
	Id           string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Price        float64  `protobuf:"fixed64,3,opt,name=price" json:"price,omitempty"`
	Currency     string   `protobuf:"bytes,4,opt,name=currency" json:"currency,omitempty"`
	Description  string   `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	BundleStatus string   `protobuf:"bytes,6,opt,name=bundleStatus" json:"bundleStatus,omitempty"`
	Pictures     []*Media `protobuf:"bytes,7,rep,name=Pictures" json:"Pictures,omitempty"`
	PackageIds   []string `protobuf:"bytes,8,rep,name=PackageIds" json:"PackageIds,omitempty"`
	CreatedTime  int64    `protobuf:"varint,9,opt,name=createdTime" json:"createdTime,omitempty"`
}

func (m *Bundle) Reset()                    { *m = Bundle{} }
func (m *Bundle) String() string            { return proto.CompactTextString(m) }
func (*Bundle) ProtoMessage()               {}
func (*Bundle) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *Bundle) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Bundle) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Bundle) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Bundle) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Bundle) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Bundle) GetBundleStatus() string {
	if m != nil {
		return m.BundleStatus
	}
	return ""
}

func (m *Bundle) GetPictures() []*Media {
	if m != nil {
		return m.Pictures
	}
	return nil
}

func (m *Bundle) GetPackageIds() []string {
	if m != nil {
		return m.PackageIds
	}
	return nil
}

func (m *Bundle) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

type Campaign struct {
	Id             string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name           string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description    string   `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Identifier     string   `protobuf:"bytes,4,opt,name=identifier" json:"identifier,omitempty"`
	Code           string   `protobuf:"bytes,5,opt,name=code" json:"code,omitempty"`
	CampaignStatus string   `protobuf:"bytes,6,opt,name=campaignStatus" json:"campaignStatus,omitempty"`
	BundleIds      []string `protobuf:"bytes,7,rep,name=bundleIds" json:"bundleIds,omitempty"`
	ItemIds        []string `protobuf:"bytes,8,rep,name=itemIds" json:"itemIds,omitempty"`
	Status         string   `protobuf:"bytes,9,opt,name=status" json:"status,omitempty"`
	CreatedTime    int64    `protobuf:"varint,10,opt,name=createdTime" json:"createdTime,omitempty"`
}

func (m *Campaign) Reset()                    { *m = Campaign{} }
func (m *Campaign) String() string            { return proto.CompactTextString(m) }
func (*Campaign) ProtoMessage()               {}
func (*Campaign) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

func (m *Campaign) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Campaign) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Campaign) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Campaign) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Campaign) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Campaign) GetCampaignStatus() string {
	if m != nil {
		return m.CampaignStatus
	}
	return ""
}

func (m *Campaign) GetBundleIds() []string {
	if m != nil {
		return m.BundleIds
	}
	return nil
}

func (m *Campaign) GetItemIds() []string {
	if m != nil {
		return m.ItemIds
	}
	return nil
}

func (m *Campaign) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Campaign) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func init() {
	proto.RegisterType((*Sticker)(nil), "chat.Sticker")
	proto.RegisterType((*Package)(nil), "chat.Package")
	proto.RegisterType((*Shop)(nil), "chat.Shop")
	proto.RegisterType((*Bundle)(nil), "chat.Bundle")
	proto.RegisterType((*Campaign)(nil), "chat.Campaign")
}

func init() { proto.RegisterFile("chat/sticker.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 602 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xdd, 0x6a, 0x13, 0x41,
	0x14, 0xc7, 0xd9, 0x64, 0x93, 0xdd, 0x9c, 0xb4, 0xb5, 0x0c, 0x22, 0x43, 0x11, 0x59, 0x16, 0xd1,
	0xdc, 0x34, 0xd1, 0xfa, 0x06, 0x15, 0xc4, 0x82, 0x42, 0xd8, 0x56, 0x04, 0xef, 0x26, 0x33, 0xe3,
	0xee, 0xd0, 0xee, 0x07, 0xb3, 0xb3, 0x42, 0x5f, 0xc1, 0x1b, 0xdf, 0xc0, 0x57, 0xf3, 0x3d, 0xbc,
	0x92, 0xf9, 0x48, 0xf7, 0x4b, 0x24, 0x17, 0xde, 0xe5, 0xfc, 0xce, 0x21, 0xe7, 0xe3, 0xff, 0x9f,
	0x05, 0x44, 0x33, 0xa2, 0x36, 0xb5, 0x12, 0xf4, 0x96, 0xcb, 0x75, 0x25, 0x4b, 0x55, 0x22, 0x5f,
	0xb3, 0xb3, 0x53, 0x93, 0xc9, 0x39, 0x13, 0xc4, 0xf2, 0xf8, 0xd7, 0x14, 0x82, 0x6b, 0x5b, 0x89,
	0x4e, 0x60, 0x22, 0x18, 0xf6, 0x22, 0x6f, 0xb5, 0x48, 0x26, 0x82, 0x21, 0x04, 0x7e, 0x41, 0x72,
	0x8e, 0x27, 0x86, 0x98, 0xdf, 0xe8, 0x19, 0xc0, 0x15, 0xe3, 0x85, 0x12, 0x5f, 0x05, 0x97, 0x78,
	0x6a, 0x32, 0x1d, 0xa2, 0xf3, 0x39, 0x11, 0xc5, 0x56, 0xd0, 0x4f, 0xc9, 0x07, 0xec, 0xdb, 0x7c,
	0x4b, 0x50, 0x0c, 0x47, 0x2e, 0xfa, 0x2c, 0x98, 0xca, 0xf0, 0x2c, 0xf2, 0x56, 0xb3, 0xa4, 0xc7,
	0xd0, 0x73, 0x38, 0x76, 0xf1, 0x7b, 0x2e, 0xd2, 0x4c, 0xe1, 0xb9, 0x29, 0xea, 0xc3, 0x4e, 0xd5,
	0xbb, 0x52, 0xe6, 0x44, 0xe1, 0xc0, 0x34, 0xeb, 0x43, 0x14, 0xc1, 0x52, 0x65, 0x4d, 0xbe, 0x73,
	0x03, 0x85, 0xa6, 0xa6, 0x8b, 0xf4, 0xff, 0xec, 0x43, 0x3b, 0x12, 0xd8, 0x6e, 0x3d, 0x88, 0x5e,
	0xc0, 0xc9, 0x1e, 0xb8, 0xa1, 0x96, 0xa6, 0x6c, 0x40, 0xbb, 0x75, 0x6e, 0xac, 0x23, 0xd3, 0x72,
	0x40, 0xd1, 0x13, 0x98, 0xd7, 0x65, 0x23, 0x29, 0xc7, 0xc7, 0x26, 0xef, 0x22, 0xcd, 0x9b, 0x9a,
	0xcb, 0x2b, 0x86, 0x4f, 0x2c, 0xb7, 0x91, 0xa9, 0x57, 0x44, 0x35, 0x35, 0x7e, 0xe4, 0xea, 0x4d,
	0xa4, 0xf7, 0xa3, 0x92, 0x13, 0xc5, 0xd9, 0x8d, 0xc8, 0x39, 0x3e, 0x8d, 0xbc, 0xd5, 0x34, 0xe9,
	0xa2, 0xf8, 0xb7, 0x07, 0xc1, 0x96, 0xd0, 0x5b, 0x92, 0xf2, 0x83, 0x14, 0x8e, 0x60, 0xc9, 0x78,
	0x4d, 0xa5, 0xa8, 0x94, 0x28, 0x0b, 0x27, 0x71, 0x17, 0xa1, 0x97, 0x10, 0x56, 0x82, 0xaa, 0x46,
	0xf2, 0x1a, 0xfb, 0xd1, 0x74, 0xb5, 0xbc, 0x58, 0xae, 0xb5, 0xb1, 0xd6, 0x1f, 0xb5, 0xb1, 0x92,
	0x87, 0xa4, 0x36, 0x83, 0x73, 0xe1, 0x15, 0xab, 0xf1, 0x2c, 0x9a, 0x6a, 0x33, 0xb4, 0x44, 0xb7,
	0xaa, 0xec, 0x64, 0x37, 0xf7, 0x15, 0x37, 0x32, 0x2f, 0x92, 0x2e, 0x1a, 0xae, 0x17, 0x8c, 0xd6,
	0x43, 0x4f, 0x61, 0x41, 0xa8, 0x12, 0xdf, 0x34, 0x30, 0xf2, 0x86, 0x49, 0x0b, 0xe2, 0xef, 0x1e,
	0xf8, 0xd7, 0x59, 0x59, 0x1d, 0xea, 0x6d, 0x31, 0xf2, 0x76, 0x4b, 0x74, 0xab, 0x5d, 0x53, 0xb0,
	0x3b, 0xae, 0xb7, 0xf1, 0xcd, 0x36, 0x2d, 0x30, 0xa3, 0x92, 0xbc, 0x22, 0x22, 0x2d, 0xda, 0x6d,
	0xbb, 0x28, 0xfe, 0x31, 0x81, 0xf9, 0xa5, 0xa9, 0x3f, 0x68, 0x9c, 0xc7, 0x30, 0xab, 0xa4, 0xa0,
	0xdc, 0x4c, 0xe2, 0x25, 0x36, 0x40, 0x67, 0x10, 0xd2, 0x46, 0x4a, 0x5e, 0xd0, 0x7b, 0xf7, 0xbc,
	0x1e, 0xe2, 0xa1, 0x74, 0xb3, 0xb1, 0x74, 0x31, 0x1c, 0xd9, 0x89, 0xaf, 0xad, 0x99, 0xec, 0xc9,
	0x7b, 0x4c, 0xcb, 0xbb, 0xdd, 0xcb, 0x1b, 0xfc, 0x45, 0xde, 0x6d, 0x47, 0x5e, 0x67, 0x2c, 0xbd,
	0x70, 0x68, 0xe5, 0x6d, 0xc9, 0x50, 0xbc, 0xc5, 0xd8, 0x9b, 0x3f, 0x27, 0x10, 0xbe, 0x75, 0x17,
	0xfa, 0x4f, 0xe6, 0xec, 0x8b, 0xe8, 0x8f, 0x44, 0x44, 0xe0, 0xd3, 0x92, 0x71, 0x77, 0x1c, 0xf3,
	0x5b, 0x3f, 0xda, 0xbd, 0x4e, 0xbd, 0xbb, 0x0c, 0x68, 0xdf, 0x00, 0xc1, 0xd0, 0x00, 0x18, 0x02,
	0xa1, 0x78, 0xde, 0xde, 0x62, 0x1f, 0x76, 0x1e, 0xef, 0xe2, 0x5f, 0x8f, 0x17, 0x46, 0x07, 0xba,
	0xbc, 0xf8, 0xf2, 0x2a, 0x15, 0x2a, 0x6b, 0x76, 0x6b, 0x5a, 0xe6, 0x9b, 0xea, 0x35, 0x2d, 0x36,
	0x8a, 0x14, 0x8a, 0x14, 0xe7, 0xac, 0xd4, 0x1f, 0xba, 0xf3, 0x9a, 0x66, 0x3c, 0x27, 0x9b, 0xb4,
	0xbc, 0x23, 0x45, 0xba, 0xd1, 0x32, 0xed, 0xe6, 0xe6, 0xcb, 0xfe, 0xe6, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x13, 0x77, 0x7d, 0x86, 0x07, 0x06, 0x00, 0x00,
}
