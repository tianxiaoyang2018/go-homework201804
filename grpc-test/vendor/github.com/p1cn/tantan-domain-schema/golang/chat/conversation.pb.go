// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat/conversation.proto

package chat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ConversationStatus int32

const (
	ConversationStatus_CONVERSATION_STATUS_DEFAULT     ConversationStatus = 0
	ConversationStatus_CONVERSATION_STATUS_DELETED     ConversationStatus = 1
	ConversationStatus_CONVERSATION_STATUS_INACTIVATED ConversationStatus = 2
	ConversationStatus_CONVERSATION_STATUS_HIDDEN      ConversationStatus = 3
)

var ConversationStatus_name = map[int32]string{
	0: "CONVERSATION_STATUS_DEFAULT",
	1: "CONVERSATION_STATUS_DELETED",
	2: "CONVERSATION_STATUS_INACTIVATED",
	3: "CONVERSATION_STATUS_HIDDEN",
}
var ConversationStatus_value = map[string]int32{
	"CONVERSATION_STATUS_DEFAULT":     0,
	"CONVERSATION_STATUS_DELETED":     1,
	"CONVERSATION_STATUS_INACTIVATED": 2,
	"CONVERSATION_STATUS_HIDDEN":      3,
}

func (x ConversationStatus) String() string {
	return proto.EnumName(ConversationStatus_name, int32(x))
}
func (ConversationStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

type Conversation struct {
	Id                     string             `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UserId                 string             `protobuf:"bytes,2,opt,name=userId" json:"userId,omitempty"`
	OtherUserId            string             `protobuf:"bytes,3,opt,name=otherUserId" json:"otherUserId,omitempty"`
	ReadUntilId            string             `protobuf:"bytes,4,opt,name=readUntilId" json:"readUntilId,omitempty"`
	ClearedUntilId         string             `protobuf:"bytes,5,opt,name=clearedUntilId" json:"clearedUntilId,omitempty"`
	AcceptIntimateQuestion bool               `protobuf:"varint,6,opt,name=acceptIntimateQuestion" json:"acceptIntimateQuestion,omitempty"`
	ClearedTime            int64              `protobuf:"varint,7,opt,name=clearedTime" json:"clearedTime,omitempty"`
	UpdatedTime            int64              `protobuf:"varint,8,opt,name=updatedTime" json:"updatedTime,omitempty"`
	CreatedTime            int64              `protobuf:"varint,9,opt,name=createdTime" json:"createdTime,omitempty"`
	Status                 ConversationStatus `protobuf:"varint,10,opt,name=status,enum=chat.ConversationStatus" json:"status,omitempty"`
	OtherUserLastActivity  int64              `protobuf:"varint,11,opt,name=otherUserLastActivity" json:"otherUserLastActivity,omitempty"`
	LatestMessageTime      int64              `protobuf:"varint,12,opt,name=latestMessageTime" json:"latestMessageTime,omitempty"`
	MessageIds             []string           `protobuf:"bytes,13,rep,name=messageIds" json:"messageIds,omitempty"`
	Type                   string             `protobuf:"bytes,14,opt,name=type" json:"type,omitempty"`
	UnreadMessages         int64              `protobuf:"varint,15,opt,name=unreadMessages" json:"unreadMessages,omitempty"`
	MessageCount           int64              `protobuf:"varint,16,opt,name=messageCount" json:"messageCount,omitempty"`
}

func (m *Conversation) Reset()                    { *m = Conversation{} }
func (m *Conversation) String() string            { return proto.CompactTextString(m) }
func (*Conversation) ProtoMessage()               {}
func (*Conversation) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Conversation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Conversation) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Conversation) GetOtherUserId() string {
	if m != nil {
		return m.OtherUserId
	}
	return ""
}

func (m *Conversation) GetReadUntilId() string {
	if m != nil {
		return m.ReadUntilId
	}
	return ""
}

func (m *Conversation) GetClearedUntilId() string {
	if m != nil {
		return m.ClearedUntilId
	}
	return ""
}

func (m *Conversation) GetAcceptIntimateQuestion() bool {
	if m != nil {
		return m.AcceptIntimateQuestion
	}
	return false
}

func (m *Conversation) GetClearedTime() int64 {
	if m != nil {
		return m.ClearedTime
	}
	return 0
}

func (m *Conversation) GetUpdatedTime() int64 {
	if m != nil {
		return m.UpdatedTime
	}
	return 0
}

func (m *Conversation) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *Conversation) GetStatus() ConversationStatus {
	if m != nil {
		return m.Status
	}
	return ConversationStatus_CONVERSATION_STATUS_DEFAULT
}

func (m *Conversation) GetOtherUserLastActivity() int64 {
	if m != nil {
		return m.OtherUserLastActivity
	}
	return 0
}

func (m *Conversation) GetLatestMessageTime() int64 {
	if m != nil {
		return m.LatestMessageTime
	}
	return 0
}

func (m *Conversation) GetMessageIds() []string {
	if m != nil {
		return m.MessageIds
	}
	return nil
}

func (m *Conversation) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Conversation) GetUnreadMessages() int64 {
	if m != nil {
		return m.UnreadMessages
	}
	return 0
}

func (m *Conversation) GetMessageCount() int64 {
	if m != nil {
		return m.MessageCount
	}
	return 0
}

func init() {
	proto.RegisterType((*Conversation)(nil), "chat.Conversation")
	proto.RegisterEnum("chat.ConversationStatus", ConversationStatus_name, ConversationStatus_value)
}

func init() { proto.RegisterFile("chat/conversation.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 462 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0x61, 0x6b, 0xd3, 0x40,
	0x18, 0xc7, 0x4d, 0x5b, 0xeb, 0xfa, 0xac, 0xd6, 0x7a, 0xe0, 0x3c, 0x14, 0xb6, 0x30, 0x41, 0x82,
	0xb8, 0x66, 0x4e, 0xf1, 0x7d, 0x6c, 0x23, 0x06, 0x6a, 0x87, 0x69, 0xba, 0x17, 0xbe, 0x19, 0xb7,
	0xe4, 0x68, 0x0f, 0x9a, 0xbb, 0x90, 0x7b, 0x32, 0xd8, 0x67, 0xf1, 0x7b, 0xf9, 0x79, 0xe4, 0xae,
	0xa1, 0x66, 0x5b, 0xfb, 0xae, 0xf7, 0xfb, 0xff, 0xfa, 0xe7, 0xe1, 0x79, 0x08, 0xbc, 0x4e, 0x57,
	0x0c, 0xfd, 0x54, 0xc9, 0x5b, 0x5e, 0x6a, 0x86, 0x42, 0xc9, 0x51, 0x51, 0x2a, 0x54, 0xa4, 0x63,
	0x82, 0xd3, 0xbf, 0x1d, 0xe8, 0x8f, 0x1b, 0x21, 0x19, 0x40, 0x4b, 0x64, 0xd4, 0x71, 0x1d, 0xaf,
	0x17, 0xb7, 0x44, 0x46, 0x8e, 0xa0, 0x5b, 0x69, 0x5e, 0x46, 0x19, 0x6d, 0x59, 0x56, 0xbf, 0x88,
	0x0b, 0x87, 0x0a, 0x57, 0xbc, 0x5c, 0x6c, 0xc2, 0xb6, 0x0d, 0x9b, 0xc8, 0x18, 0x25, 0x67, 0xd9,
	0x42, 0xa2, 0x58, 0x47, 0x19, 0xed, 0x6c, 0x8c, 0x06, 0x22, 0xef, 0x61, 0x90, 0xae, 0x39, 0x2b,
	0xf9, 0x56, 0x7a, 0x6a, 0xa5, 0x07, 0x94, 0x7c, 0x85, 0x23, 0x96, 0xa6, 0xbc, 0xc0, 0x48, 0xa2,
	0xc8, 0x19, 0xf2, 0x5f, 0x15, 0xd7, 0x66, 0x5a, 0xda, 0x75, 0x1d, 0xef, 0x20, 0xde, 0x93, 0x9a,
	0x09, 0xea, 0xa6, 0x44, 0xe4, 0x9c, 0x3e, 0x73, 0x1d, 0xaf, 0x1d, 0x37, 0x91, 0x31, 0xaa, 0x22,
	0x63, 0x58, 0x1b, 0x07, 0x1b, 0xa3, 0x81, 0x6c, 0x47, 0xc9, 0xb7, 0x46, 0xaf, 0xee, 0xf8, 0x8f,
	0xc8, 0x39, 0x74, 0x35, 0x32, 0xac, 0x34, 0x05, 0xd7, 0xf1, 0x06, 0x17, 0x74, 0x64, 0x36, 0x3b,
	0x6a, 0x6e, 0x75, 0x6e, 0xf3, 0xb8, 0xf6, 0xc8, 0x17, 0x78, 0xb5, 0x5d, 0xd4, 0x94, 0x69, 0x0c,
	0x52, 0x14, 0xb7, 0x02, 0xef, 0xe8, 0xa1, 0x6d, 0xdf, 0x1d, 0x92, 0x8f, 0xf0, 0x72, 0xcd, 0x90,
	0x6b, 0xfc, 0xc9, 0xb5, 0x66, 0x4b, 0x6e, 0xe7, 0xe9, 0xdb, 0x7f, 0x3c, 0x0e, 0xc8, 0x31, 0x40,
	0xbe, 0x79, 0x46, 0x99, 0xa6, 0xcf, 0xdd, 0xb6, 0xd7, 0x8b, 0x1b, 0x84, 0x10, 0xe8, 0xe0, 0x5d,
	0xc1, 0xe9, 0xc0, 0x6e, 0xdc, 0xfe, 0x36, 0xf7, 0xa8, 0xa4, 0x39, 0x50, 0x5d, 0xa4, 0xe9, 0x0b,
	0x5b, 0xff, 0x80, 0x92, 0x53, 0xe8, 0xd7, 0x4d, 0x63, 0x55, 0x49, 0xa4, 0x43, 0x6b, 0xdd, 0x63,
	0x1f, 0xfe, 0x38, 0x40, 0x1e, 0xaf, 0x80, 0x9c, 0xc0, 0xdb, 0xf1, 0xe5, 0xec, 0x2a, 0x8c, 0xe7,
	0x41, 0x12, 0x5d, 0xce, 0xae, 0xe7, 0x49, 0x90, 0x2c, 0xe6, 0xd7, 0x93, 0xf0, 0x7b, 0xb0, 0x98,
	0x26, 0xc3, 0x27, 0xfb, 0x85, 0x69, 0x98, 0x84, 0x93, 0xa1, 0x43, 0xde, 0xc1, 0xc9, 0x2e, 0x21,
	0x9a, 0x05, 0xe3, 0x24, 0xba, 0x0a, 0x8c, 0xd4, 0x22, 0xc7, 0xf0, 0x66, 0x97, 0xf4, 0x23, 0x9a,
	0x4c, 0xc2, 0xd9, 0xb0, 0xfd, 0xed, 0xe2, 0xf7, 0xf9, 0x52, 0xe0, 0xaa, 0xba, 0x19, 0xa5, 0x2a,
	0xf7, 0x8b, 0x4f, 0xa9, 0xf4, 0x91, 0x49, 0x64, 0xf2, 0x2c, 0x53, 0x39, 0x13, 0xf2, 0x4c, 0xa7,
	0x2b, 0x9e, 0x33, 0x7f, 0xa9, 0xd6, 0x4c, 0x2e, 0x7d, 0x73, 0xd0, 0x9b, 0xae, 0xfd, 0x6e, 0x3e,
	0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x57, 0x58, 0xcf, 0x52, 0x03, 0x00, 0x00,
}
