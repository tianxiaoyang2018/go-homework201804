// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat/chatcounters.proto

package chat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ChatCounters struct {
	OwnerId       string                     `protobuf:"bytes,1,opt,name=ownerId" json:"ownerId,omitempty"`
	Conversations *ChatCountersConversations `protobuf:"bytes,2,opt,name=conversations" json:"conversations,omitempty"`
	Messages      *ChatCountersMessages      `protobuf:"bytes,3,opt,name=messages" json:"messages,omitempty"`
}

func (m *ChatCounters) Reset()                    { *m = ChatCounters{} }
func (m *ChatCounters) String() string            { return proto.CompactTextString(m) }
func (*ChatCounters) ProtoMessage()               {}
func (*ChatCounters) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *ChatCounters) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *ChatCounters) GetConversations() *ChatCountersConversations {
	if m != nil {
		return m.Conversations
	}
	return nil
}

func (m *ChatCounters) GetMessages() *ChatCountersMessages {
	if m != nil {
		return m.Messages
	}
	return nil
}

type ChatCountersConversations struct {
	Total  int32 `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	Unread int32 `protobuf:"varint,2,opt,name=unread" json:"unread,omitempty"`
	Unseen int32 `protobuf:"varint,3,opt,name=unseen" json:"unseen,omitempty"`
}

func (m *ChatCountersConversations) Reset()                    { *m = ChatCountersConversations{} }
func (m *ChatCountersConversations) String() string            { return proto.CompactTextString(m) }
func (*ChatCountersConversations) ProtoMessage()               {}
func (*ChatCountersConversations) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *ChatCountersConversations) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ChatCountersConversations) GetUnread() int32 {
	if m != nil {
		return m.Unread
	}
	return 0
}

func (m *ChatCountersConversations) GetUnseen() int32 {
	if m != nil {
		return m.Unseen
	}
	return 0
}

type ChatCountersMessages struct {
	Unread int32 `protobuf:"varint,1,opt,name=unread" json:"unread,omitempty"`
}

func (m *ChatCountersMessages) Reset()                    { *m = ChatCountersMessages{} }
func (m *ChatCountersMessages) String() string            { return proto.CompactTextString(m) }
func (*ChatCountersMessages) ProtoMessage()               {}
func (*ChatCountersMessages) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *ChatCountersMessages) GetUnread() int32 {
	if m != nil {
		return m.Unread
	}
	return 0
}

func init() {
	proto.RegisterType((*ChatCounters)(nil), "chat.ChatCounters")
	proto.RegisterType((*ChatCountersConversations)(nil), "chat.ChatCountersConversations")
	proto.RegisterType((*ChatCountersMessages)(nil), "chat.ChatCountersMessages")
}

func init() { proto.RegisterFile("chat/chatcounters.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 253 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x65, 0x20, 0x05, 0x0c, 0x2c, 0x56, 0x05, 0x81, 0x85, 0x2a, 0x53, 0x97, 0x3a, 0x50,
	0x24, 0x7e, 0x00, 0x11, 0x03, 0x03, 0x8b, 0x47, 0xb6, 0xab, 0x63, 0x25, 0x91, 0x9a, 0xbb, 0xca,
	0xbe, 0xc0, 0x4f, 0xe2, 0x6f, 0xa2, 0x38, 0x01, 0x05, 0x41, 0x17, 0x4b, 0xef, 0xf9, 0xf9, 0xf3,
	0xd3, 0x9d, 0xbc, 0xb2, 0x35, 0x70, 0xde, 0x1f, 0x96, 0x3a, 0x64, 0xe7, 0x83, 0xde, 0x79, 0x62,
	0x52, 0x47, 0xbd, 0x97, 0x7d, 0x0a, 0x79, 0x5e, 0xd4, 0xc0, 0xc5, 0x78, 0xa9, 0x52, 0x79, 0x4c,
	0x1f, 0xe8, 0xfc, 0x4b, 0x99, 0x8a, 0x85, 0x58, 0x9e, 0x9a, 0x6f, 0xa9, 0x9e, 0xe5, 0x85, 0x25,
	0x7c, 0x77, 0x3e, 0x00, 0x37, 0x84, 0x21, 0x3d, 0x58, 0x88, 0xe5, 0xd9, 0xfa, 0x56, 0xf7, 0x20,
	0x3d, 0x85, 0x14, 0xd3, 0x98, 0xf9, 0xfd, 0x4a, 0x3d, 0xca, 0x93, 0xd6, 0x85, 0x00, 0x95, 0x0b,
	0xe9, 0x61, 0x24, 0xdc, 0xfc, 0x25, 0xbc, 0x8e, 0x09, 0xf3, 0x93, 0xcd, 0x40, 0x5e, 0xef, 0xfd,
	0x43, 0xcd, 0x65, 0xc2, 0xc4, 0xb0, 0x8d, 0x9d, 0x13, 0x33, 0x08, 0x75, 0x29, 0x67, 0x1d, 0x7a,
	0x07, 0x65, 0xac, 0x9a, 0x98, 0x51, 0x0d, 0x7e, 0x70, 0x0e, 0x63, 0x81, 0xe8, 0xf7, 0x2a, 0xd3,
	0x72, 0xfe, 0x5f, 0x89, 0x09, 0x47, 0x4c, 0x39, 0x4f, 0xeb, 0xb7, 0xbb, 0xaa, 0xe1, 0xba, 0xdb,
	0x68, 0x4b, 0x6d, 0xbe, 0xbb, 0xb7, 0x98, 0x33, 0x20, 0x03, 0xae, 0x4a, 0x6a, 0xa1, 0xc1, 0x55,
	0xb0, 0xb5, 0x6b, 0x21, 0xaf, 0x68, 0x0b, 0x58, 0xc5, 0x25, 0x6c, 0x66, 0x71, 0xfa, 0x0f, 0x5f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xe0, 0xd2, 0x9c, 0x06, 0x98, 0x01, 0x00, 0x00,
}
