// Code generated by protoc-gen-go. DO NOT EDIT.
// source: moment/moment.proto

package moment

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common1 "github.com/p1cn/tantan-domain-schema/golang/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MomentLocation struct {
	Name        string    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Address     string    `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Phone       string    `protobuf:"bytes,3,opt,name=phone" json:"phone,omitempty"`
	Coordinates []float64 `protobuf:"fixed64,4,rep,packed,name=coordinates" json:"coordinates,omitempty"`
}

func (m *MomentLocation) Reset()                    { *m = MomentLocation{} }
func (m *MomentLocation) String() string            { return proto.CompactTextString(m) }
func (*MomentLocation) ProtoMessage()               {}
func (*MomentLocation) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{0} }

func (m *MomentLocation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MomentLocation) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MomentLocation) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *MomentLocation) GetCoordinates() []float64 {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

type MomentCount struct {
	MomentId     string `protobuf:"bytes,1,opt,name=momentId" json:"momentId,omitempty"`
	MomentUserId string `protobuf:"bytes,2,opt,name=momentUserId" json:"momentUserId,omitempty"`
	Total        int32  `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
}

func (m *MomentCount) Reset()                    { *m = MomentCount{} }
func (m *MomentCount) String() string            { return proto.CompactTextString(m) }
func (*MomentCount) ProtoMessage()               {}
func (*MomentCount) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{1} }

func (m *MomentCount) GetMomentId() string {
	if m != nil {
		return m.MomentId
	}
	return ""
}

func (m *MomentCount) GetMomentUserId() string {
	if m != nil {
		return m.MomentUserId
	}
	return ""
}

func (m *MomentCount) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type Moment struct {
	Id                 string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UserId             string            `protobuf:"bytes,2,opt,name=userId" json:"userId,omitempty"`
	Value              string            `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	Location           *MomentLocation   `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
	MessageIds         []string          `protobuf:"bytes,5,rep,name=messageIds" json:"messageIds,omitempty"`
	MessageCount       int32             `protobuf:"varint,6,opt,name=messageCount" json:"messageCount,omitempty"`
	MessageLimit       int32             `protobuf:"varint,7,opt,name=messageLimit" json:"messageLimit,omitempty"`
	MessageTotal       int32             `protobuf:"varint,8,opt,name=messageTotal" json:"messageTotal,omitempty"`
	LikeIds            []string          `protobuf:"bytes,9,rep,name=LikeIds" json:"LikeIds,omitempty"`
	LikeCount          int32             `protobuf:"varint,10,opt,name=likeCount" json:"likeCount,omitempty"`
	LikeLimit          int32             `protobuf:"varint,11,opt,name=likeLimit" json:"likeLimit,omitempty"`
	LikeTotal          int32             `protobuf:"varint,12,opt,name=likeTotal" json:"likeTotal,omitempty"`
	HaveLiked          bool              `protobuf:"varint,13,opt,name=haveLiked" json:"haveLiked,omitempty"`
	Media              []*common1.Media  `protobuf:"bytes,14,rep,name=media" json:"media,omitempty"`
	CreatedTime        int64             `protobuf:"varint,15,opt,name=createdTime" json:"createdTime,omitempty"`
	Status             MomentStatus      `protobuf:"varint,16,opt,name=status,enum=moment.MomentStatus" json:"status,omitempty"`
	Type               string            `protobuf:"bytes,17,opt,name=type" json:"type,omitempty"`
	Visibility         string            `protobuf:"bytes,18,opt,name=visibility" json:"visibility,omitempty"`
	Muted              bool              `protobuf:"varint,19,opt,name=muted" json:"muted,omitempty"`
	LandingPage        string            `protobuf:"bytes,20,opt,name=landingPage" json:"landingPage,omitempty"`
	InspiredMessageIds []string          `protobuf:"bytes,21,rep,name=inspiredMessageIds" json:"inspiredMessageIds,omitempty"`
	MomentLikedUserIds []string          `protobuf:"bytes,22,rep,name=momentLikedUserIds" json:"momentLikedUserIds,omitempty"`
	MomentLikeCount    int32             `protobuf:"varint,23,opt,name=MomentLikeCount" json:"MomentLikeCount,omitempty"`
	ShareRules         *MomentShareRules `protobuf:"bytes,24,opt,name=shareRules" json:"shareRules,omitempty"`
}

func (m *Moment) Reset()                    { *m = Moment{} }
func (m *Moment) String() string            { return proto.CompactTextString(m) }
func (*Moment) ProtoMessage()               {}
func (*Moment) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{2} }

func (m *Moment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Moment) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Moment) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Moment) GetLocation() *MomentLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Moment) GetMessageIds() []string {
	if m != nil {
		return m.MessageIds
	}
	return nil
}

func (m *Moment) GetMessageCount() int32 {
	if m != nil {
		return m.MessageCount
	}
	return 0
}

func (m *Moment) GetMessageLimit() int32 {
	if m != nil {
		return m.MessageLimit
	}
	return 0
}

func (m *Moment) GetMessageTotal() int32 {
	if m != nil {
		return m.MessageTotal
	}
	return 0
}

func (m *Moment) GetLikeIds() []string {
	if m != nil {
		return m.LikeIds
	}
	return nil
}

func (m *Moment) GetLikeCount() int32 {
	if m != nil {
		return m.LikeCount
	}
	return 0
}

func (m *Moment) GetLikeLimit() int32 {
	if m != nil {
		return m.LikeLimit
	}
	return 0
}

func (m *Moment) GetLikeTotal() int32 {
	if m != nil {
		return m.LikeTotal
	}
	return 0
}

func (m *Moment) GetHaveLiked() bool {
	if m != nil {
		return m.HaveLiked
	}
	return false
}

func (m *Moment) GetMedia() []*common1.Media {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *Moment) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *Moment) GetStatus() MomentStatus {
	if m != nil {
		return m.Status
	}
	return MomentStatus_MOMENT_STATUS_DEFAULT
}

func (m *Moment) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Moment) GetVisibility() string {
	if m != nil {
		return m.Visibility
	}
	return ""
}

func (m *Moment) GetMuted() bool {
	if m != nil {
		return m.Muted
	}
	return false
}

func (m *Moment) GetLandingPage() string {
	if m != nil {
		return m.LandingPage
	}
	return ""
}

func (m *Moment) GetInspiredMessageIds() []string {
	if m != nil {
		return m.InspiredMessageIds
	}
	return nil
}

func (m *Moment) GetMomentLikedUserIds() []string {
	if m != nil {
		return m.MomentLikedUserIds
	}
	return nil
}

func (m *Moment) GetMomentLikeCount() int32 {
	if m != nil {
		return m.MomentLikeCount
	}
	return 0
}

func (m *Moment) GetShareRules() *MomentShareRules {
	if m != nil {
		return m.ShareRules
	}
	return nil
}

type MomentShareRules struct {
	ShareType    string                 `protobuf:"bytes,1,opt,name=shareType" json:"shareType,omitempty"`
	Regions      *ShareRuleRegions      `protobuf:"bytes,2,opt,name=regions" json:"regions,omitempty"`
	Gender       string                 `protobuf:"bytes,3,opt,name=gender" json:"gender,omitempty"`
	Age          *ShareRuleAgeRange     `protobuf:"bytes,4,opt,name=age" json:"age,omitempty"`
	Mod          *ShareRuleMod          `protobuf:"bytes,5,opt,name=mod" json:"mod,omitempty"`
	Verification *ShareRuleVerification `protobuf:"bytes,6,opt,name=verification" json:"verification,omitempty"`
	UserStatus   []string               `protobuf:"bytes,7,rep,name=userStatus" json:"userStatus,omitempty"`
}

func (m *MomentShareRules) Reset()                    { *m = MomentShareRules{} }
func (m *MomentShareRules) String() string            { return proto.CompactTextString(m) }
func (*MomentShareRules) ProtoMessage()               {}
func (*MomentShareRules) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{3} }

func (m *MomentShareRules) GetShareType() string {
	if m != nil {
		return m.ShareType
	}
	return ""
}

func (m *MomentShareRules) GetRegions() *ShareRuleRegions {
	if m != nil {
		return m.Regions
	}
	return nil
}

func (m *MomentShareRules) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *MomentShareRules) GetAge() *ShareRuleAgeRange {
	if m != nil {
		return m.Age
	}
	return nil
}

func (m *MomentShareRules) GetMod() *ShareRuleMod {
	if m != nil {
		return m.Mod
	}
	return nil
}

func (m *MomentShareRules) GetVerification() *ShareRuleVerification {
	if m != nil {
		return m.Verification
	}
	return nil
}

func (m *MomentShareRules) GetUserStatus() []string {
	if m != nil {
		return m.UserStatus
	}
	return nil
}

type ShareRuleRegions struct {
	Countries []string `protobuf:"bytes,1,rep,name=countries" json:"countries,omitempty"`
	Provinces []string `protobuf:"bytes,2,rep,name=provinces" json:"provinces,omitempty"`
	Cities    []string `protobuf:"bytes,3,rep,name=cities" json:"cities,omitempty"`
	Districts []string `protobuf:"bytes,4,rep,name=districts" json:"districts,omitempty"`
}

func (m *ShareRuleRegions) Reset()                    { *m = ShareRuleRegions{} }
func (m *ShareRuleRegions) String() string            { return proto.CompactTextString(m) }
func (*ShareRuleRegions) ProtoMessage()               {}
func (*ShareRuleRegions) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{4} }

func (m *ShareRuleRegions) GetCountries() []string {
	if m != nil {
		return m.Countries
	}
	return nil
}

func (m *ShareRuleRegions) GetProvinces() []string {
	if m != nil {
		return m.Provinces
	}
	return nil
}

func (m *ShareRuleRegions) GetCities() []string {
	if m != nil {
		return m.Cities
	}
	return nil
}

func (m *ShareRuleRegions) GetDistricts() []string {
	if m != nil {
		return m.Districts
	}
	return nil
}

type ShareRuleAgeRange struct {
	Min int32 `protobuf:"varint,1,opt,name=min" json:"min,omitempty"`
	Max int32 `protobuf:"varint,2,opt,name=max" json:"max,omitempty"`
}

func (m *ShareRuleAgeRange) Reset()                    { *m = ShareRuleAgeRange{} }
func (m *ShareRuleAgeRange) String() string            { return proto.CompactTextString(m) }
func (*ShareRuleAgeRange) ProtoMessage()               {}
func (*ShareRuleAgeRange) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{5} }

func (m *ShareRuleAgeRange) GetMin() int32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *ShareRuleAgeRange) GetMax() int32 {
	if m != nil {
		return m.Max
	}
	return 0
}

type ShareRuleMod struct {
	Divisor    int32   `protobuf:"varint,1,opt,name=divisor" json:"divisor,omitempty"`
	Remainders []int32 `protobuf:"varint,2,rep,packed,name=remainders" json:"remainders,omitempty"`
}

func (m *ShareRuleMod) Reset()                    { *m = ShareRuleMod{} }
func (m *ShareRuleMod) String() string            { return proto.CompactTextString(m) }
func (*ShareRuleMod) ProtoMessage()               {}
func (*ShareRuleMod) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{6} }

func (m *ShareRuleMod) GetDivisor() int32 {
	if m != nil {
		return m.Divisor
	}
	return 0
}

func (m *ShareRuleMod) GetRemainders() []int32 {
	if m != nil {
		return m.Remainders
	}
	return nil
}

type ShareRuleVerification struct {
	Verified  bool     `protobuf:"varint,1,opt,name=verified" json:"verified,omitempty"`
	SchoolIds []string `protobuf:"bytes,2,rep,name=schoolIds" json:"schoolIds,omitempty"`
}

func (m *ShareRuleVerification) Reset()                    { *m = ShareRuleVerification{} }
func (m *ShareRuleVerification) String() string            { return proto.CompactTextString(m) }
func (*ShareRuleVerification) ProtoMessage()               {}
func (*ShareRuleVerification) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{7} }

func (m *ShareRuleVerification) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

func (m *ShareRuleVerification) GetSchoolIds() []string {
	if m != nil {
		return m.SchoolIds
	}
	return nil
}

func init() {
	proto.RegisterType((*MomentLocation)(nil), "moment.MomentLocation")
	proto.RegisterType((*MomentCount)(nil), "moment.MomentCount")
	proto.RegisterType((*Moment)(nil), "moment.Moment")
	proto.RegisterType((*MomentShareRules)(nil), "moment.MomentShareRules")
	proto.RegisterType((*ShareRuleRegions)(nil), "moment.ShareRuleRegions")
	proto.RegisterType((*ShareRuleAgeRange)(nil), "moment.ShareRuleAgeRange")
	proto.RegisterType((*ShareRuleMod)(nil), "moment.ShareRuleMod")
	proto.RegisterType((*ShareRuleVerification)(nil), "moment.ShareRuleVerification")
}

func init() { proto.RegisterFile("moment/moment.proto", fileDescriptor13) }

var fileDescriptor13 = []byte{
	// 832 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x55, 0x41, 0x6f, 0xe3, 0x36,
	0x13, 0x85, 0xa3, 0xd8, 0xb1, 0xc7, 0xd9, 0x6c, 0x96, 0x9b, 0xcd, 0xc7, 0x2f, 0xd8, 0x16, 0x82,
	0x0a, 0x14, 0x02, 0xda, 0xc4, 0xa8, 0x5b, 0xa0, 0xbd, 0x6e, 0x7b, 0x69, 0x80, 0x18, 0x68, 0xd9,
	0xb4, 0x87, 0xde, 0x18, 0x91, 0x95, 0x89, 0x95, 0x48, 0x43, 0xa4, 0x8d, 0xdd, 0x7b, 0x7f, 0x52,
	0xaf, 0xfd, 0x6f, 0xc5, 0x0c, 0x65, 0x49, 0x8e, 0xf7, 0x64, 0xcd, 0x7b, 0x6f, 0x34, 0xa3, 0x37,
	0x43, 0x1a, 0x5e, 0xd7, 0xae, 0xd6, 0x36, 0x2c, 0xe2, 0xcf, 0xdd, 0xa6, 0x71, 0xc1, 0xb1, 0x49,
	0x8c, 0x6e, 0x58, 0xe1, 0xea, 0xda, 0xd9, 0x45, 0xad, 0x95, 0x91, 0x91, 0xbb, 0xb9, 0x39, 0x48,
	0xb8, 0x8d, 0x8a, 0xc8, 0x65, 0x3b, 0xb8, 0x58, 0x11, 0xfc, 0xe0, 0x0a, 0x19, 0x8c, 0xb3, 0x8c,
	0xc1, 0xa9, 0x95, 0xb5, 0xe6, 0xa3, 0x74, 0x94, 0xcf, 0x04, 0x3d, 0x33, 0x0e, 0x67, 0x52, 0xa9,
	0x46, 0x7b, 0xcf, 0x4f, 0x08, 0xde, 0x87, 0xec, 0x0a, 0xc6, 0x9b, 0xb5, 0xb3, 0x9a, 0x27, 0x84,
	0xc7, 0x80, 0xa5, 0x30, 0x2f, 0x9c, 0x6b, 0x94, 0xb1, 0x32, 0x68, 0xcf, 0x4f, 0xd3, 0x24, 0x1f,
	0x89, 0x21, 0x94, 0x15, 0x30, 0x8f, 0x75, 0x7f, 0x72, 0x5b, 0x1b, 0xd8, 0x0d, 0x4c, 0x63, 0x77,
	0xf7, 0xaa, 0x2d, 0xdc, 0xc5, 0x2c, 0x83, 0xf3, 0xf8, 0xfc, 0xbb, 0xd7, 0xcd, 0xbd, 0x6a, 0x3b,
	0x38, 0xc0, 0xb0, 0x8d, 0xe0, 0x82, 0xac, 0xa8, 0x8d, 0xb1, 0x88, 0x41, 0xf6, 0xef, 0x04, 0x26,
	0xb1, 0x0a, 0xbb, 0x80, 0x13, 0xb3, 0x7f, 0xf5, 0x89, 0x51, 0xec, 0x1a, 0x26, 0xdb, 0xe1, 0xeb,
	0xda, 0x08, 0x5f, 0xb4, 0x93, 0xd5, 0xb6, 0xfb, 0x1e, 0x0a, 0xd8, 0x12, 0xa6, 0x55, 0xeb, 0x0f,
	0x3f, 0x4d, 0x47, 0xf9, 0x7c, 0x79, 0x7d, 0xd7, 0xda, 0x7f, 0xe8, 0x9e, 0xe8, 0x74, 0xec, 0x73,
	0x80, 0x5a, 0x7b, 0x2f, 0x4b, 0x7d, 0xaf, 0x3c, 0x1f, 0xa7, 0x49, 0x3e, 0x13, 0x03, 0x84, 0x3e,
	0x2b, 0x46, 0x64, 0x01, 0x9f, 0x50, 0xe7, 0x07, 0xd8, 0x40, 0xf3, 0x60, 0x6a, 0x13, 0xf8, 0xd9,
	0x81, 0x86, 0xb0, 0x81, 0xe6, 0x91, 0x1c, 0x98, 0x1e, 0x68, 0x08, 0xc3, 0xf9, 0x3d, 0x98, 0xf7,
	0xd4, 0xc8, 0x8c, 0x1a, 0xd9, 0x87, 0xec, 0x2d, 0xcc, 0x2a, 0xf3, 0xbe, 0x6d, 0x01, 0x28, 0xb5,
	0x07, 0xf6, 0x6c, 0x2c, 0x3e, 0xef, 0xd9, 0x58, 0xb9, 0x65, 0x63, 0xd9, 0xf3, 0x9e, 0x8d, 0x35,
	0xdf, 0xc2, 0x6c, 0x2d, 0x77, 0x1a, 0x0b, 0x29, 0xfe, 0x22, 0x1d, 0xe5, 0x53, 0xd1, 0x03, 0xec,
	0x0b, 0x18, 0xd3, 0x8a, 0xf2, 0x8b, 0x34, 0xc9, 0xe7, 0xcb, 0x17, 0x77, 0xed, 0x56, 0xae, 0x10,
	0x14, 0x91, 0xa3, 0x35, 0x6a, 0xb4, 0x0c, 0x5a, 0x3d, 0x9a, 0x5a, 0xf3, 0x97, 0xe9, 0x28, 0x4f,
	0xc4, 0x10, 0x62, 0x5f, 0xc3, 0xc4, 0x07, 0x19, 0xb6, 0x9e, 0x5f, 0xa6, 0xa3, 0xfc, 0x62, 0x79,
	0x75, 0x38, 0x96, 0xdf, 0x88, 0x13, 0xad, 0x06, 0x57, 0x3b, 0x7c, 0xdc, 0x68, 0xfe, 0x2a, 0xae,
	0x36, 0x3e, 0xe3, 0x98, 0x76, 0xc6, 0x9b, 0x27, 0x53, 0x99, 0xf0, 0x91, 0x33, 0x62, 0x06, 0x08,
	0x2e, 0x44, 0xbd, 0x0d, 0x5a, 0xf1, 0xd7, 0xf4, 0x09, 0x31, 0xc0, 0xce, 0x2a, 0x69, 0x95, 0xb1,
	0xe5, 0x2f, 0xb2, 0xd4, 0xfc, 0x8a, 0xd2, 0x86, 0x10, 0xbb, 0x03, 0x66, 0xac, 0xdf, 0x98, 0x46,
	0xab, 0x55, 0xbf, 0x06, 0x6f, 0xc8, 0xfd, 0x4f, 0x30, 0xa8, 0x8f, 0xad, 0x93, 0x3f, 0x71, 0xad,
	0x3d, 0xbf, 0x8e, 0xfa, 0x63, 0x86, 0xe5, 0xf0, 0x72, 0xd5, 0xa1, 0x71, 0x7c, 0xff, 0xa3, 0x11,
	0x3c, 0x87, 0xd9, 0x0f, 0x00, 0x7e, 0x2d, 0x1b, 0x2d, 0xb6, 0x95, 0xf6, 0x9c, 0xd3, 0xfa, 0xf2,
	0x67, 0x3e, 0x75, 0xbc, 0x18, 0x68, 0xb3, 0x7f, 0x4e, 0xe0, 0xf2, 0xb9, 0x00, 0xe7, 0x4a, 0x92,
	0x47, 0x74, 0x32, 0x1e, 0xa8, 0x1e, 0x60, 0x4b, 0x38, 0x6b, 0x74, 0x69, 0x9c, 0x8d, 0x37, 0xc5,
	0xa0, 0x52, 0xf7, 0x0a, 0x11, 0x79, 0xb1, 0x17, 0xe2, 0x59, 0x2c, 0xb5, 0x55, 0xba, 0x69, 0x0f,
	0x5d, 0x1b, 0xb1, 0xaf, 0x20, 0x41, 0x73, 0xe3, 0x81, 0xfb, 0xff, 0xd1, 0x7b, 0xde, 0x95, 0x5a,
	0x48, 0x5b, 0x6a, 0x81, 0x2a, 0xf6, 0x25, 0x24, 0xb5, 0x53, 0x7c, 0x4c, 0xe2, 0xab, 0x23, 0xf1,
	0xca, 0x29, 0x81, 0x02, 0xf6, 0x0e, 0xce, 0x77, 0xba, 0x31, 0x7f, 0x99, 0xf6, 0x38, 0x4f, 0x28,
	0xe1, 0xb3, 0xa3, 0x84, 0x3f, 0x06, 0x22, 0x71, 0x90, 0x82, 0x2b, 0x83, 0xb7, 0x45, 0x5c, 0x2e,
	0x7e, 0x16, 0x4f, 0x76, 0x8f, 0x64, 0x7f, 0x8f, 0xe0, 0xf2, 0xf9, 0xd7, 0xa2, 0x6d, 0x05, 0x8e,
	0xa3, 0x31, 0xda, 0xf3, 0x11, 0xe5, 0xf4, 0x00, 0xb2, 0x9b, 0xc6, 0xed, 0x8c, 0x2d, 0x34, 0x1a,
	0x47, 0x6c, 0x07, 0xa0, 0x41, 0x85, 0x09, 0x98, 0x98, 0x10, 0xd5, 0x46, 0x98, 0xa5, 0x8c, 0x0f,
	0x8d, 0x29, 0x42, 0xbc, 0x64, 0x67, 0xa2, 0x07, 0xb2, 0xef, 0xe1, 0xd5, 0x91, 0x57, 0xec, 0x12,
	0x92, 0xda, 0x58, 0x9a, 0xdb, 0x58, 0xe0, 0x23, 0x21, 0xf2, 0x03, 0x4d, 0x0b, 0x11, 0xf9, 0x21,
	0xfb, 0x19, 0xce, 0x87, 0xbe, 0xe1, 0xed, 0xa1, 0xcc, 0xce, 0x78, 0xd7, 0xb4, 0x79, 0xfb, 0x10,
	0x9d, 0x68, 0x74, 0x2d, 0x0d, 0x8e, 0x2b, 0xf6, 0x3d, 0x16, 0x03, 0x24, 0xfb, 0x15, 0xde, 0x7c,
	0xd2, 0x50, 0xbc, 0xef, 0xa3, 0xa5, 0x3a, 0x5e, 0xca, 0x53, 0xd1, 0xc5, 0xb4, 0x60, 0xc5, 0xda,
	0xb9, 0x0a, 0x0f, 0x40, 0xeb, 0x45, 0x07, 0xfc, 0xf8, 0xdd, 0x9f, 0xcb, 0xd2, 0x84, 0xf5, 0xf6,
	0x09, 0x6f, 0x8c, 0xc5, 0xe6, 0x9b, 0xc2, 0x2e, 0x82, 0xb4, 0x41, 0xda, 0x5b, 0xe5, 0xb0, 0xee,
	0xad, 0x2f, 0xd6, 0xba, 0x96, 0x8b, 0xd2, 0x55, 0xd2, 0x96, 0xed, 0x7f, 0xde, 0xd3, 0x84, 0xfe,
	0xed, 0xbe, 0xfd, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x37, 0x33, 0x21, 0x09, 0x3c, 0x07, 0x00, 0x00,
}
