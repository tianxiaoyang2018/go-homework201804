syntax = "proto3";

package user;

import "user/user-counter.proto";

option go_package = "github.com/p1cn/tantan-domain-schema/golang/user";

service UserCounterService {
    rpc Get(GetRequest) returns (GetReply) {}
    rpc GetEnvelopeCounter(GetEnvelopeCounterRequest) returns (GetEnvelopeCounterReply) {}
    rpc MGet(MGetRequest) returns (MGetReply) {}
    rpc GetPopularity(GetPopularityRequest) returns (GetPopularityReply) {}
    rpc UpdateUnreadActivities(UpdateUnreadActivitiesRequest) returns (UpdateUnreadActivitiesReply) {}
    rpc UpdateWithDelta(UpdateWithDeltaRequest) returns (UpdateWithDeltaReply) {}
    rpc UpdateWithDeltaWithReturning(UpdateWithDeltaWithReturningRequest) returns (UpdateWithDeltaWithReturningReply) {}
    rpc Upsert(UpsertRequest) returns (UpsertReply) {}
    rpc UpdateSecretCrush(UpdateSecretCrushRequest) returns (UpdateSecretCrushReply) {}
    rpc UpsertSuperLikeDailyQuota(UpsertSuperLikeDailyQuotaRequest) returns (UpsertSuperLikeDailyQuotaReply) {}
}

message GetRequest {
    string userId = 1;
}

message GetReply {
    UserCounter userCounter = 1;
}

message GetEnvelopeCounterRequest {
    string userId = 1;
}

message GetEnvelopeCounterReply {
    bytes counterBytes = 1;
    double popularity = 2;
}

message MGetRequest {
    repeated string userIds = 1;
}

message MGetReply {
    repeated UserCounter userCounters = 1;
}

message GetPopularityRequest {
    string userId = 1;
}

message GetPopularityReply {
    double popularity = 1;
}

message UpdateUnreadActivitiesRequest {
    string userId = 1;
    int64 unreadActivities = 2;
}

message UpdateUnreadActivitiesReply {
}

message UpdateWithDeltaRequest {
    UserCounter userCounter = 1;
}

message UpdateWithDeltaReply {
    double popularity = 1;
}

message UpsertRequest {
    UserCounter userCounter = 1;
}

message UpsertReply {}

message UpdateSecretCrushRequest {
    UserCounter userCounter = 1;
}

message UpdateSecretCrushReply {}

message UpsertSuperLikeDailyQuotaRequest {
    UserCounter userCounter = 1;
}

message UpsertSuperLikeDailyQuotaReply {}

message UpdateWithDeltaWithReturningRequest {
    UserCounter userCounter = 1;
}

message UpdateWithDeltaWithReturningReply {
    bytes counterBytes = 1;
    double popularity = 2;
}
